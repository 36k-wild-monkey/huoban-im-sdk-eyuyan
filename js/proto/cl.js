var _this;
('undefine' !== typeof global) && (_this = global) || ('undefine' !== typeof globalThis) && (_this = globalThis) ||('undefine' !== typeof window) (_this = window) || (_this = this);
(!_this.v8core) && (_this.v8core = {});
v8core = _this.v8core;

// 畅聊proto定义
(function(e) {
    "use strict";
    var r = e.protobuf || protobuf
        , o = r.Reader
        , i = r.Writer
        , a = r.util
        , s = function(){};
    s.CommonMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.baseInfo = null,
        e.prototype.body = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.baseInfo && e.hasOwnProperty("baseInfo") && s.CommonMessageBaseInfo.encode(e.baseInfo, t.uint32(10).fork()).ldelim(),
            null != e.body && e.hasOwnProperty("body") && s.CommonMessageBody.encode(e.body, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.baseInfo = s.CommonMessageBaseInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.body = s.CommonMessageBody.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonMessage)
                return e;
            var t = new s.CommonMessage;
            if (null != e.baseInfo) {
                if ("object" !== typeof e.baseInfo)
                    throw TypeError(".CommonMessage.baseInfo: object expected");
                t.baseInfo = s.CommonMessageBaseInfo.fromObject(e.baseInfo)
            }
            if (null != e.body) {
                if ("object" !== typeof e.body)
                    throw TypeError(".CommonMessage.body: object expected");
                t.body = s.CommonMessageBody.fromObject(e.body)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.baseInfo = null,
            n.body = null),
            null != e.baseInfo && e.hasOwnProperty("baseInfo") && (n.baseInfo = s.CommonMessageBaseInfo.toObject(e.baseInfo, t)),
            null != e.body && e.hasOwnProperty("body") && (n.body = s.CommonMessageBody.toObject(e.body, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonChatIdInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.chatId = 0,
        e.prototype.serverId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.chatId && e.hasOwnProperty("chatId") && t.uint32(8).uint32(e.chatId),
            null != e.serverId && e.hasOwnProperty("serverId") && t.uint32(18).string(e.serverId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonChatIdInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.chatId = e.uint32();
                    break;
                case 2:
                    r.serverId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonChatIdInfo)
                return e;
            var t = new s.CommonChatIdInfo;
            return null != e.chatId && (t.chatId = e.chatId >>> 0),
            null != e.serverId && (t.serverId = String(e.serverId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.chatId = 0,
            n.serverId = ""),
            null != e.chatId && e.hasOwnProperty("chatId") && (n.chatId = e.chatId),
            null != e.serverId && e.hasOwnProperty("serverId") && (n.serverId = e.serverId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonMessageBaseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.prototype.from = null,
        e.prototype.to = null,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.conversationType = 0,
        e.prototype.basicType = 0,
        e.prototype.conversationId = 0,
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.unread = 0,
        e.prototype.readState = 0,
        e.prototype.memberCount = 0,
        e.prototype.privateCountDown = 0,
        e.prototype.hiddenAvatar = !1,
        e.prototype.externalUserId = 0,
        e.prototype.additional = null,
        e.prototype.action = null,
        e.prototype.area = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            null != e.from && e.hasOwnProperty("from") && s.CommonChatIdInfo.encode(e.from, t.uint32(18).fork()).ldelim(),
            null != e.to && e.hasOwnProperty("to") && s.CommonChatIdInfo.encode(e.to, t.uint32(26).fork()).ldelim(),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(32).uint64(e.timestamp),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(40).int32(e.conversationType),
            null != e.basicType && e.hasOwnProperty("basicType") && t.uint32(48).int32(e.basicType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(56).uint32(e.conversationId),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(64).uint64(e.sequence),
            null != e.unread && e.hasOwnProperty("unread") && t.uint32(72).uint32(e.unread),
            null != e.readState && e.hasOwnProperty("readState") && t.uint32(80).uint32(e.readState),
            null != e.memberCount && e.hasOwnProperty("memberCount") && t.uint32(88).uint32(e.memberCount),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && t.uint32(96).uint32(e.privateCountDown),
            null != e.hiddenAvatar && e.hasOwnProperty("hiddenAvatar") && t.uint32(104).bool(e.hiddenAvatar),
            null != e.externalUserId && e.hasOwnProperty("externalUserId") && t.uint32(112).uint32(e.externalUserId),
            null != e.additional && e.hasOwnProperty("additional") && s.CommonMessageAdditional.encode(e.additional, t.uint32(122).fork()).ldelim(),
            null != e.action && e.hasOwnProperty("action") && s.CommonMessageAction.encode(e.action, t.uint32(130).fork()).ldelim(),
            null != e.area && e.hasOwnProperty("area") && t.uint32(136).uint32(e.area),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonMessageBaseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                case 2:
                    r.from = s.CommonChatIdInfo.decode(e, e.uint32());
                    break;
                case 3:
                    r.to = s.CommonChatIdInfo.decode(e, e.uint32());
                    break;
                case 4:
                    r.timestamp = e.uint64();
                    break;
                case 5:
                    r.conversationType = e.int32();
                    break;
                case 6:
                    r.basicType = e.int32();
                    break;
                case 7:
                    r.conversationId = e.uint32();
                    break;
                case 8:
                    r.sequence = e.uint64();
                    break;
                case 9:
                    r.unread = e.uint32();
                    break;
                case 10:
                    r.readState = e.uint32();
                    break;
                case 11:
                    r.memberCount = e.uint32();
                    break;
                case 12:
                    r.privateCountDown = e.uint32();
                    break;
                case 13:
                    r.hiddenAvatar = e.bool();
                    break;
                case 14:
                    r.externalUserId = e.uint32();
                    break;
                case 15:
                    r.additional = s.CommonMessageAdditional.decode(e, e.uint32());
                    break;
                case 16:
                    r.action = s.CommonMessageAction.decode(e, e.uint32());
                    break;
                case 17:
                    r.area = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonMessageBaseInfo)
                return e;
            var t = new s.CommonMessageBaseInfo;
            if (null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.from) {
                if ("object" !== typeof e.from)
                    throw TypeError(".CommonMessageBaseInfo.from: object expected");
                t.from = s.CommonChatIdInfo.fromObject(e.from)
            }
            if (null != e.to) {
                if ("object" !== typeof e.to)
                    throw TypeError(".CommonMessageBaseInfo.to: object expected");
                t.to = s.CommonChatIdInfo.fromObject(e.to)
            }
            switch (null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            switch (e.basicType) {
            case "CommonMessageBasicTypeUndefined":
            case 0:
                t.basicType = 0;
                break;
            case "CommonMessageBasicTypeSystem":
            case 1:
                t.basicType = 1;
                break;
            case "CommonMessageBasicTypeNormal":
            case 2:
                t.basicType = 2;
                break
            }
            if (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !0 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0))),
            null != e.unread && (t.unread = e.unread >>> 0),
            null != e.readState && (t.readState = e.readState >>> 0),
            null != e.memberCount && (t.memberCount = e.memberCount >>> 0),
            null != e.privateCountDown && (t.privateCountDown = e.privateCountDown >>> 0),
            null != e.hiddenAvatar && (t.hiddenAvatar = Boolean(e.hiddenAvatar)),
            null != e.externalUserId && (t.externalUserId = e.externalUserId >>> 0),
            null != e.additional) {
                if ("object" !== typeof e.additional)
                    throw TypeError(".CommonMessageBaseInfo.additional: object expected");
                t.additional = s.CommonMessageAdditional.fromObject(e.additional)
            }
            if (null != e.action) {
                if ("object" !== typeof e.action)
                    throw TypeError(".CommonMessageBaseInfo.action: object expected");
                t.action = s.CommonMessageAction.fromObject(e.action)
            }
            return null != e.area && (t.area = e.area >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.messageId = "",
                n.from = null,
                n.to = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                if (n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                n.basicType = t.enums === String ? "CommonMessageBasicTypeUndefined" : 0,
                n.conversationId = 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
                n.unread = 0,
                n.readState = 0,
                n.memberCount = 0,
                n.privateCountDown = 0,
                n.hiddenAvatar = !1,
                n.externalUserId = 0,
                n.additional = null,
                n.action = null,
                n.area = 0
            }
            return null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.from && e.hasOwnProperty("from") && (n.from = s.CommonChatIdInfo.toObject(e.from, t)),
            null != e.to && e.hasOwnProperty("to") && (n.to = s.CommonChatIdInfo.toObject(e.to, t)),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.basicType && e.hasOwnProperty("basicType") && (n.basicType = t.enums === String ? s.CommonMessageBasicType[e.basicType] : e.basicType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0) : e.sequence),
            null != e.unread && e.hasOwnProperty("unread") && (n.unread = e.unread),
            null != e.readState && e.hasOwnProperty("readState") && (n.readState = e.readState),
            null != e.memberCount && e.hasOwnProperty("memberCount") && (n.memberCount = e.memberCount),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && (n.privateCountDown = e.privateCountDown),
            null != e.hiddenAvatar && e.hasOwnProperty("hiddenAvatar") && (n.hiddenAvatar = e.hiddenAvatar),
            null != e.externalUserId && e.hasOwnProperty("externalUserId") && (n.externalUserId = e.externalUserId),
            null != e.additional && e.hasOwnProperty("additional") && (n.additional = s.CommonMessageAdditional.toObject(e.additional, t)),
            null != e.action && e.hasOwnProperty("action") && (n.action = s.CommonMessageAction.toObject(e.action, t)),
            null != e.area && e.hasOwnProperty("area") && (n.area = e.area),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonMessageAdditional = function() {
        function e(e) {
            if (this.linkInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.prototype.linkInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            null != e.linkInfos && e.linkInfos.length)
                for (var n = 0; n < e.linkInfos.length; ++n)
                    s.CommonLinkInfo.encode(e.linkInfos[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonMessageAdditional;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                case 2:
                    r.linkInfos && r.linkInfos.length || (r.linkInfos = []),
                    r.linkInfos.push(s.CommonLinkInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonMessageAdditional)
                return e;
            var t = new s.CommonMessageAdditional;
            if (null != e.text && (t.text = String(e.text)),
            e.linkInfos) {
                if (!Array.isArray(e.linkInfos))
                    throw TypeError(".CommonMessageAdditional.linkInfos: array expected");
                t.linkInfos = [];
                for (var n = 0; n < e.linkInfos.length; ++n) {
                    if ("object" !== typeof e.linkInfos[n])
                        throw TypeError(".CommonMessageAdditional.linkInfos: object expected");
                    t.linkInfos[n] = s.CommonLinkInfo.fromObject(e.linkInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.linkInfos = []),
            t.defaults && (n.text = ""),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            e.linkInfos && e.linkInfos.length) {
                n.linkInfos = [];
                for (var r = 0; r < e.linkInfos.length; ++r)
                    n.linkInfos[r] = s.CommonLinkInfo.toObject(e.linkInfos[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonMessageAction = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.action = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.action && e.hasOwnProperty("action") && t.uint32(10).string(e.action),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonMessageAction;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.action = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonMessageAction)
                return e;
            var t = new s.CommonMessageAction;
            return null != e.action && (t.action = String(e.action)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.action = ""),
            null != e.action && e.hasOwnProperty("action") && (n.action = e.action),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonMessageBody = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.bodyType = "",
        e.prototype.data = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.bodyType && e.hasOwnProperty("bodyType") && t.uint32(10).string(e.bodyType),
            null != e.data && e.hasOwnProperty("data") && t.uint32(18).bytes(e.data),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonMessageBody;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.bodyType = e.string();
                    break;
                case 2:
                    r.data = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonMessageBody)
                return e;
            var t = new s.CommonMessageBody;
            return null != e.bodyType && (t.bodyType = String(e.bodyType)),
            null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.bodyType = "",
            t.bytes === String ? n.data = "" : (n.data = [],
            t.bytes !== Array && (n.data = a.newBuffer(n.data)))),
            null != e.bodyType && e.hasOwnProperty("bodyType") && (n.bodyType = e.bodyType),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonImageInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.size = 0,
        e.prototype.width = 0,
        e.prototype.height = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint32(e.size),
            null != e.width && e.hasOwnProperty("width") && t.uint32(24).uint32(e.width),
            null != e.height && e.hasOwnProperty("height") && t.uint32(32).uint32(e.height),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonImageInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.size = e.uint32();
                    break;
                case 3:
                    r.width = e.uint32();
                    break;
                case 4:
                    r.height = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonImageInfo)
                return e;
            var t = new s.CommonImageInfo;
            return null != e.url && (t.url = String(e.url)),
            null != e.size && (t.size = e.size >>> 0),
            null != e.width && (t.width = e.width >>> 0),
            null != e.height && (t.height = e.height >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = "",
            n.size = 0,
            n.width = 0,
            n.height = 0),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.size && e.hasOwnProperty("size") && (n.size = e.size),
            null != e.width && e.hasOwnProperty("width") && (n.width = e.width),
            null != e.height && e.hasOwnProperty("height") && (n.height = e.height),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonUserOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.status = 0,
        e.prototype.offlineTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.isInBlackList = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.status && e.hasOwnProperty("status") && t.uint32(16).int32(e.status),
            null != e.offlineTimestamp && e.hasOwnProperty("offlineTimestamp") && t.uint32(24).uint64(e.offlineTimestamp),
            null != e.isInBlackList && e.hasOwnProperty("isInBlackList") && t.uint32(32).bool(e.isInBlackList),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.status = e.int32();
                    break;
                case 3:
                    r.offlineTimestamp = e.uint64();
                    break;
                case 4:
                    r.isInBlackList = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonUserOnlineStatus)
                return e;
            var t = new s.CommonUserOnlineStatus;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.status) {
            case "CommonUserOnlineStatusTypeOffline":
            case 0:
                t.status = 0;
                break;
            case "CommonUserOnlineStatusTypeMobileOnline":
            case 1:
                t.status = 1;
                break;
            case "CommonUserOnlineStatusTypePCLeave":
            case 2:
                t.status = 2;
                break;
            case "CommonUserOnlineStatusTypePCOnline":
            case 3:
                t.status = 3;
                break;
            case "CommonUserOnlineStatusTypeExternal":
            case 4:
                t.status = 4;
                break
            }
            return null != e.offlineTimestamp && (a.Long ? (t.offlineTimestamp = a.Long.fromValue(e.offlineTimestamp)).unsigned = !0 : "string" === typeof e.offlineTimestamp ? t.offlineTimestamp = parseInt(e.offlineTimestamp, 10) : "number" === typeof e.offlineTimestamp ? t.offlineTimestamp = e.offlineTimestamp : "object" === typeof e.offlineTimestamp && (t.offlineTimestamp = new a.LongBits(e.offlineTimestamp.low >>> 0,e.offlineTimestamp.high >>> 0).toNumber(!0))),
            null != e.isInBlackList && (t.isInBlackList = Boolean(e.isInBlackList)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.userId = 0,
                n.status = t.enums === String ? "CommonUserOnlineStatusTypeOffline" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.offlineTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.offlineTimestamp = t.longs === String ? "0" : 0;
                n.isInBlackList = !1
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonUserOnlineStatusType[e.status] : e.status),
            null != e.offlineTimestamp && e.hasOwnProperty("offlineTimestamp") && ("number" === typeof e.offlineTimestamp ? n.offlineTimestamp = t.longs === String ? String(e.offlineTimestamp) : e.offlineTimestamp : n.offlineTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.offlineTimestamp) : t.longs === Number ? new a.LongBits(e.offlineTimestamp.low >>> 0,e.offlineTimestamp.high >>> 0).toNumber(!0) : e.offlineTimestamp),
            null != e.isInBlackList && e.hasOwnProperty("isInBlackList") && (n.isInBlackList = e.isInBlackList),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonVoteOption = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.optionId = 0,
        e.prototype.description = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.optionId && e.hasOwnProperty("optionId") && t.uint32(8).uint32(e.optionId),
            null != e.description && e.hasOwnProperty("description") && t.uint32(18).string(e.description),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonVoteOption;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.optionId = e.uint32();
                    break;
                case 2:
                    r.description = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonVoteOption)
                return e;
            var t = new s.CommonVoteOption;
            return null != e.optionId && (t.optionId = e.optionId >>> 0),
            null != e.description && (t.description = String(e.description)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.optionId = 0,
            n.description = ""),
            null != e.optionId && e.hasOwnProperty("optionId") && (n.optionId = e.optionId),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonVoteOptionDetail = function() {
        function e(e) {
            if (this.voteMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.optionId = 0,
        e.prototype.description = "",
        e.prototype.voteCount = 0,
        e.prototype.voteMemberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.optionId && e.hasOwnProperty("optionId") && t.uint32(8).uint32(e.optionId),
            null != e.description && e.hasOwnProperty("description") && t.uint32(18).string(e.description),
            null != e.voteCount && e.hasOwnProperty("voteCount") && t.uint32(24).uint32(e.voteCount),
            null != e.voteMemberIds && e.voteMemberIds.length) {
                t.uint32(34).fork();
                for (var n = 0; n < e.voteMemberIds.length; ++n)
                    t.uint32(e.voteMemberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonVoteOptionDetail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.optionId = e.uint32();
                    break;
                case 2:
                    r.description = e.string();
                    break;
                case 3:
                    r.voteCount = e.uint32();
                    break;
                case 4:
                    if (r.voteMemberIds && r.voteMemberIds.length || (r.voteMemberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.voteMemberIds.push(e.uint32())
                    } else
                        r.voteMemberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonVoteOptionDetail)
                return e;
            var t = new s.CommonVoteOptionDetail;
            if (null != e.optionId && (t.optionId = e.optionId >>> 0),
            null != e.description && (t.description = String(e.description)),
            null != e.voteCount && (t.voteCount = e.voteCount >>> 0),
            e.voteMemberIds) {
                if (!Array.isArray(e.voteMemberIds))
                    throw TypeError(".CommonVoteOptionDetail.voteMemberIds: array expected");
                t.voteMemberIds = [];
                for (var n = 0; n < e.voteMemberIds.length; ++n)
                    t.voteMemberIds[n] = e.voteMemberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.voteMemberIds = []),
            t.defaults && (n.optionId = 0,
            n.description = "",
            n.voteCount = 0),
            null != e.optionId && e.hasOwnProperty("optionId") && (n.optionId = e.optionId),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.voteCount && e.hasOwnProperty("voteCount") && (n.voteCount = e.voteCount),
            e.voteMemberIds && e.voteMemberIds.length) {
                n.voteMemberIds = [];
                for (var r = 0; r < e.voteMemberIds.length; ++r)
                    n.voteMemberIds[r] = e.voteMemberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonListenCoordinate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.latitude = 0,
        e.prototype.longitude = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.latitude && e.hasOwnProperty("latitude") && t.uint32(9).double(e.latitude),
            null != e.longitude && e.hasOwnProperty("longitude") && t.uint32(17).double(e.longitude),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonListenCoordinate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.latitude = e.double();
                    break;
                case 2:
                    r.longitude = e.double();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonListenCoordinate)
                return e;
            var t = new s.CommonListenCoordinate;
            return null != e.latitude && (t.latitude = Number(e.latitude)),
            null != e.longitude && (t.longitude = Number(e.longitude)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.latitude = 0,
            n.longitude = 0),
            null != e.latitude && e.hasOwnProperty("latitude") && (n.latitude = t.json && !isFinite(e.latitude) ? String(e.latitude) : e.latitude),
            null != e.longitude && e.hasOwnProperty("longitude") && (n.longitude = t.json && !isFinite(e.longitude) ? String(e.longitude) : e.longitude),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonWebRTCConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.urls = "",
        e.prototype.username = "",
        e.prototype.credential = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.urls && e.hasOwnProperty("urls") && t.uint32(10).string(e.urls),
            null != e.username && e.hasOwnProperty("username") && t.uint32(18).string(e.username),
            null != e.credential && e.hasOwnProperty("credential") && t.uint32(26).string(e.credential),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonWebRTCConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.urls = e.string();
                    break;
                case 2:
                    r.username = e.string();
                    break;
                case 3:
                    r.credential = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonWebRTCConfig)
                return e;
            var t = new s.CommonWebRTCConfig;
            return null != e.urls && (t.urls = String(e.urls)),
            null != e.username && (t.username = String(e.username)),
            null != e.credential && (t.credential = String(e.credential)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.urls = "",
            n.username = "",
            n.credential = ""),
            null != e.urls && e.hasOwnProperty("urls") && (n.urls = e.urls),
            null != e.username && e.hasOwnProperty("username") && (n.username = e.username),
            null != e.credential && e.hasOwnProperty("credential") && (n.credential = e.credential),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonAtUserInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.startPosition = 0,
        e.prototype.endPosition = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.startPosition && e.hasOwnProperty("startPosition") && t.uint32(16).uint32(e.startPosition),
            null != e.endPosition && e.hasOwnProperty("endPosition") && t.uint32(24).uint32(e.endPosition),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonAtUserInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.startPosition = e.uint32();
                    break;
                case 3:
                    r.endPosition = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonAtUserInfo)
                return e;
            var t = new s.CommonAtUserInfo;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.startPosition && (t.startPosition = e.startPosition >>> 0),
            null != e.endPosition && (t.endPosition = e.endPosition >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.startPosition = 0,
            n.endPosition = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.startPosition && e.hasOwnProperty("startPosition") && (n.startPosition = e.startPosition),
            null != e.endPosition && e.hasOwnProperty("endPosition") && (n.endPosition = e.endPosition),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonFormColumnItem = function() {
        function e(e) {
            if (this.optionValues = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.type = 0,
        e.prototype.name = "",
        e.prototype.isRequired = !1,
        e.prototype.defaultValue = null,
        e.prototype.optionValues = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.type && e.hasOwnProperty("type") && t.uint32(8).int32(e.type),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.isRequired && e.hasOwnProperty("isRequired") && t.uint32(24).bool(e.isRequired),
            null != e.defaultValue && e.hasOwnProperty("defaultValue") && s.CommonFormColumnValue.encode(e.defaultValue, t.uint32(34).fork()).ldelim(),
            null != e.optionValues && e.optionValues.length)
                for (var n = 0; n < e.optionValues.length; ++n)
                    t.uint32(42).string(e.optionValues[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonFormColumnItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.type = e.int32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.isRequired = e.bool();
                    break;
                case 4:
                    r.defaultValue = s.CommonFormColumnValue.decode(e, e.uint32());
                    break;
                case 5:
                    r.optionValues && r.optionValues.length || (r.optionValues = []),
                    r.optionValues.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonFormColumnItem)
                return e;
            var t = new s.CommonFormColumnItem;
            switch (e.type) {
            case "CommonColumnTypeNone":
            case 0:
                t.type = 0;
                break;
            case "CommonColumnTypeText":
            case 1:
                t.type = 1;
                break;
            case "CommonColumnTypeNumber":
            case 2:
                t.type = 2;
                break;
            case "CommonColumnTypeDate":
            case 3:
                t.type = 3;
                break;
            case "CommonColumnTypeOption":
            case 4:
                t.type = 4;
                break;
            case "CommonColumnTypeGroupAlias":
            case 5:
                t.type = 5;
                break
            }
            if (null != e.name && (t.name = String(e.name)),
            null != e.isRequired && (t.isRequired = Boolean(e.isRequired)),
            null != e.defaultValue) {
                if ("object" !== typeof e.defaultValue)
                    throw TypeError(".CommonFormColumnItem.defaultValue: object expected");
                t.defaultValue = s.CommonFormColumnValue.fromObject(e.defaultValue)
            }
            if (e.optionValues) {
                if (!Array.isArray(e.optionValues))
                    throw TypeError(".CommonFormColumnItem.optionValues: array expected");
                t.optionValues = [];
                for (var n = 0; n < e.optionValues.length; ++n)
                    t.optionValues[n] = String(e.optionValues[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.optionValues = []),
            t.defaults && (n.type = t.enums === String ? "CommonColumnTypeNone" : 0,
            n.name = "",
            n.isRequired = !1,
            n.defaultValue = null),
            null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? s.CommonColumnType[e.type] : e.type),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.isRequired && e.hasOwnProperty("isRequired") && (n.isRequired = e.isRequired),
            null != e.defaultValue && e.hasOwnProperty("defaultValue") && (n.defaultValue = s.CommonFormColumnValue.toObject(e.defaultValue, t)),
            e.optionValues && e.optionValues.length) {
                n.optionValues = [];
                for (var r = 0; r < e.optionValues.length; ++r)
                    n.optionValues[r] = e.optionValues[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonFormColumnValue = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.type = 0,
        e.prototype.value = "",
        e.prototype.columnName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.type && e.hasOwnProperty("type") && t.uint32(8).int32(e.type),
            null != e.value && e.hasOwnProperty("value") && t.uint32(18).string(e.value),
            null != e.columnName && e.hasOwnProperty("columnName") && t.uint32(26).string(e.columnName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonFormColumnValue;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.type = e.int32();
                    break;
                case 2:
                    r.value = e.string();
                    break;
                case 3:
                    r.columnName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonFormColumnValue)
                return e;
            var t = new s.CommonFormColumnValue;
            switch (e.type) {
            case "CommonColumnTypeNone":
            case 0:
                t.type = 0;
                break;
            case "CommonColumnTypeText":
            case 1:
                t.type = 1;
                break;
            case "CommonColumnTypeNumber":
            case 2:
                t.type = 2;
                break;
            case "CommonColumnTypeDate":
            case 3:
                t.type = 3;
                break;
            case "CommonColumnTypeOption":
            case 4:
                t.type = 4;
                break;
            case "CommonColumnTypeGroupAlias":
            case 5:
                t.type = 5;
                break
            }
            return null != e.value && (t.value = String(e.value)),
            null != e.columnName && (t.columnName = String(e.columnName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.type = t.enums === String ? "CommonColumnTypeNone" : 0,
            n.value = "",
            n.columnName = ""),
            null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? s.CommonColumnType[e.type] : e.type),
            null != e.value && e.hasOwnProperty("value") && (n.value = e.value),
            null != e.columnName && e.hasOwnProperty("columnName") && (n.columnName = e.columnName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonFormDataInfo = function() {
        function e(e) {
            if (this.columnValues = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.dataId = 0,
        e.prototype.formGroupId = 0,
        e.prototype.columnValues = a.emptyArray,
        e.prototype.sortIndex = 0,
        e.prototype.createUserId = 0,
        e.prototype.createTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.updateUserId = 0,
        e.prototype.updateTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.dataId && e.hasOwnProperty("dataId") && t.uint32(8).uint32(e.dataId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(16).uint32(e.formGroupId),
            null != e.columnValues && e.columnValues.length)
                for (var n = 0; n < e.columnValues.length; ++n)
                    s.CommonFormColumnValue.encode(e.columnValues[n], t.uint32(26).fork()).ldelim();
            return null != e.sortIndex && e.hasOwnProperty("sortIndex") && t.uint32(32).uint32(e.sortIndex),
            null != e.createUserId && e.hasOwnProperty("createUserId") && t.uint32(40).uint32(e.createUserId),
            null != e.createTimestamp && e.hasOwnProperty("createTimestamp") && t.uint32(48).uint64(e.createTimestamp),
            null != e.updateUserId && e.hasOwnProperty("updateUserId") && t.uint32(56).uint32(e.updateUserId),
            null != e.updateTimestamp && e.hasOwnProperty("updateTimestamp") && t.uint32(64).uint64(e.updateTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonFormDataInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.dataId = e.uint32();
                    break;
                case 2:
                    r.formGroupId = e.uint32();
                    break;
                case 3:
                    r.columnValues && r.columnValues.length || (r.columnValues = []),
                    r.columnValues.push(s.CommonFormColumnValue.decode(e, e.uint32()));
                    break;
                case 4:
                    r.sortIndex = e.uint32();
                    break;
                case 5:
                    r.createUserId = e.uint32();
                    break;
                case 6:
                    r.createTimestamp = e.uint64();
                    break;
                case 7:
                    r.updateUserId = e.uint32();
                    break;
                case 8:
                    r.updateTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonFormDataInfo)
                return e;
            var t = new s.CommonFormDataInfo;
            if (null != e.dataId && (t.dataId = e.dataId >>> 0),
            null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            e.columnValues) {
                if (!Array.isArray(e.columnValues))
                    throw TypeError(".CommonFormDataInfo.columnValues: array expected");
                t.columnValues = [];
                for (var n = 0; n < e.columnValues.length; ++n) {
                    if ("object" !== typeof e.columnValues[n])
                        throw TypeError(".CommonFormDataInfo.columnValues: object expected");
                    t.columnValues[n] = s.CommonFormColumnValue.fromObject(e.columnValues[n])
                }
            }
            return null != e.sortIndex && (t.sortIndex = e.sortIndex >>> 0),
            null != e.createUserId && (t.createUserId = e.createUserId >>> 0),
            null != e.createTimestamp && (a.Long ? (t.createTimestamp = a.Long.fromValue(e.createTimestamp)).unsigned = !0 : "string" === typeof e.createTimestamp ? t.createTimestamp = parseInt(e.createTimestamp, 10) : "number" === typeof e.createTimestamp ? t.createTimestamp = e.createTimestamp : "object" === typeof e.createTimestamp && (t.createTimestamp = new a.LongBits(e.createTimestamp.low >>> 0,e.createTimestamp.high >>> 0).toNumber(!0))),
            null != e.updateUserId && (t.updateUserId = e.updateUserId >>> 0),
            null != e.updateTimestamp && (a.Long ? (t.updateTimestamp = a.Long.fromValue(e.updateTimestamp)).unsigned = !0 : "string" === typeof e.updateTimestamp ? t.updateTimestamp = parseInt(e.updateTimestamp, 10) : "number" === typeof e.updateTimestamp ? t.updateTimestamp = e.updateTimestamp : "object" === typeof e.updateTimestamp && (t.updateTimestamp = new a.LongBits(e.updateTimestamp.low >>> 0,e.updateTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnValues = []),
            t.defaults) {
                if (n.dataId = 0,
                n.formGroupId = 0,
                n.sortIndex = 0,
                n.createUserId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.createTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.createTimestamp = t.longs === String ? "0" : 0;
                if (n.updateUserId = 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.updateTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.updateTimestamp = t.longs === String ? "0" : 0
            }
            if (null != e.dataId && e.hasOwnProperty("dataId") && (n.dataId = e.dataId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            e.columnValues && e.columnValues.length) {
                n.columnValues = [];
                for (var o = 0; o < e.columnValues.length; ++o)
                    n.columnValues[o] = s.CommonFormColumnValue.toObject(e.columnValues[o], t)
            }
            return null != e.sortIndex && e.hasOwnProperty("sortIndex") && (n.sortIndex = e.sortIndex),
            null != e.createUserId && e.hasOwnProperty("createUserId") && (n.createUserId = e.createUserId),
            null != e.createTimestamp && e.hasOwnProperty("createTimestamp") && ("number" === typeof e.createTimestamp ? n.createTimestamp = t.longs === String ? String(e.createTimestamp) : e.createTimestamp : n.createTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.createTimestamp) : t.longs === Number ? new a.LongBits(e.createTimestamp.low >>> 0,e.createTimestamp.high >>> 0).toNumber(!0) : e.createTimestamp),
            null != e.updateUserId && e.hasOwnProperty("updateUserId") && (n.updateUserId = e.updateUserId),
            null != e.updateTimestamp && e.hasOwnProperty("updateTimestamp") && ("number" === typeof e.updateTimestamp ? n.updateTimestamp = t.longs === String ? String(e.updateTimestamp) : e.updateTimestamp : n.updateTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.updateTimestamp) : t.longs === Number ? new a.LongBits(e.updateTimestamp.low >>> 0,e.updateTimestamp.high >>> 0).toNumber(!0) : e.updateTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonFormGroupInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formGroupId = 0,
        e.prototype.formGroupName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(8).uint32(e.formGroupId),
            null != e.formGroupName && e.hasOwnProperty("formGroupName") && t.uint32(18).string(e.formGroupName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonFormGroupInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formGroupId = e.uint32();
                    break;
                case 2:
                    r.formGroupName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonFormGroupInfo)
                return e;
            var t = new s.CommonFormGroupInfo;
            return null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            null != e.formGroupName && (t.formGroupName = String(e.formGroupName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formGroupId = 0,
            n.formGroupName = ""),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            null != e.formGroupName && e.hasOwnProperty("formGroupName") && (n.formGroupName = e.formGroupName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonCompanyDepartmentInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.companyName = "",
        e.prototype.companyAvatarUrl = "",
        e.prototype.departmentId = "",
        e.prototype.departmentName = "",
        e.prototype.departmentMemberCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && t.uint32(18).string(e.companyName),
            null != e.companyAvatarUrl && e.hasOwnProperty("companyAvatarUrl") && t.uint32(26).string(e.companyAvatarUrl),
            null != e.departmentId && e.hasOwnProperty("departmentId") && t.uint32(34).string(e.departmentId),
            null != e.departmentName && e.hasOwnProperty("departmentName") && t.uint32(42).string(e.departmentName),
            null != e.departmentMemberCount && e.hasOwnProperty("departmentMemberCount") && t.uint32(48).uint32(e.departmentMemberCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonCompanyDepartmentInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.companyName = e.string();
                    break;
                case 3:
                    r.companyAvatarUrl = e.string();
                    break;
                case 4:
                    r.departmentId = e.string();
                    break;
                case 5:
                    r.departmentName = e.string();
                    break;
                case 6:
                    r.departmentMemberCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonCompanyDepartmentInfo)
                return e;
            var t = new s.CommonCompanyDepartmentInfo;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.companyName && (t.companyName = String(e.companyName)),
            null != e.companyAvatarUrl && (t.companyAvatarUrl = String(e.companyAvatarUrl)),
            null != e.departmentId && (t.departmentId = String(e.departmentId)),
            null != e.departmentName && (t.departmentName = String(e.departmentName)),
            null != e.departmentMemberCount && (t.departmentMemberCount = e.departmentMemberCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = "",
            n.companyName = "",
            n.companyAvatarUrl = "",
            n.departmentId = "",
            n.departmentName = "",
            n.departmentMemberCount = 0),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && (n.companyName = e.companyName),
            null != e.companyAvatarUrl && e.hasOwnProperty("companyAvatarUrl") && (n.companyAvatarUrl = e.companyAvatarUrl),
            null != e.departmentId && e.hasOwnProperty("departmentId") && (n.departmentId = e.departmentId),
            null != e.departmentName && e.hasOwnProperty("departmentName") && (n.departmentName = e.departmentName),
            null != e.departmentMemberCount && e.hasOwnProperty("departmentMemberCount") && (n.departmentMemberCount = e.departmentMemberCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonLinkInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.type = 0,
        e.prototype.startPosition = 0,
        e.prototype.endPosition = 0,
        e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.type && e.hasOwnProperty("type") && t.uint32(8).int32(e.type),
            null != e.startPosition && e.hasOwnProperty("startPosition") && t.uint32(16).uint32(e.startPosition),
            null != e.endPosition && e.hasOwnProperty("endPosition") && t.uint32(24).uint32(e.endPosition),
            null != e.url && e.hasOwnProperty("url") && t.uint32(34).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonLinkInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.type = e.int32();
                    break;
                case 2:
                    r.startPosition = e.uint32();
                    break;
                case 3:
                    r.endPosition = e.uint32();
                    break;
                case 4:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonLinkInfo)
                return e;
            var t = new s.CommonLinkInfo;
            switch (e.type) {
            case "CommonLinkOpenTypeUndefined":
            case 0:
                t.type = 0;
                break;
            case "CommonLinkOpenTypeWebsite":
            case 1:
                t.type = 1;
                break;
            case "CommonLinkOpenTypeAppScheme":
            case 2:
                t.type = 2;
                break;
            case "CommonLinkOpenTypeComplaint":
            case 3:
                t.type = 3;
                break
            }
            return null != e.startPosition && (t.startPosition = e.startPosition >>> 0),
            null != e.endPosition && (t.endPosition = e.endPosition >>> 0),
            null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.type = t.enums === String ? "CommonLinkOpenTypeUndefined" : 0,
            n.startPosition = 0,
            n.endPosition = 0,
            n.url = ""),
            null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? s.CommonLinkOpenType[e.type] : e.type),
            null != e.startPosition && e.hasOwnProperty("startPosition") && (n.startPosition = e.startPosition),
            null != e.endPosition && e.hasOwnProperty("endPosition") && (n.endPosition = e.endPosition),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonLiveCostInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseType = 0,
        e.prototype.amount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseType && e.hasOwnProperty("courseType") && t.uint32(8).int32(e.courseType),
            null != e.amount && e.hasOwnProperty("amount") && t.uint32(16).uint32(e.amount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonLiveCostInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseType = e.int32();
                    break;
                case 2:
                    r.amount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonLiveCostInfo)
                return e;
            var t = new s.CommonLiveCostInfo;
            switch (e.courseType) {
            case "CommonLiveTypeUndefined":
            case 0:
                t.courseType = 0;
                break;
            case "CommonLiveTypeVoiceAndText":
            case 1:
                t.courseType = 1;
                break;
            case "CommonLiveTypePPT":
            case 2:
                t.courseType = 2;
                break;
            case "CommonLiveTypeVideo":
            case 3:
                t.courseType = 3;
                break;
            case "CommonLiveTypeDesktopShare":
            case 4:
                t.courseType = 4;
                break
            }
            return null != e.amount && (t.amount = e.amount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseType = t.enums === String ? "CommonLiveTypeUndefined" : 0,
            n.amount = 0),
            null != e.courseType && e.hasOwnProperty("courseType") && (n.courseType = t.enums === String ? s.CommonLiveType[e.courseType] : e.courseType),
            null != e.amount && e.hasOwnProperty("amount") && (n.amount = e.amount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonServerAccountType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonServerAccountTypeUndefined"] = 0,
        t[e[1] = "CommonServerAccountTypeBasic"] = 1,
        t[e[2] = "CommonServerAccountTypeHbOffice"] = 2,
        t[e[3] = "CommonServerAccountTypeCompany"] = 3,
        t
    }(),
    s.CommonServerUserAccountType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonServerUserAccountTypeUndefined"] = 0,
        t[e[1] = "CommonServerUserAccountTypePhoneNumber"] = 1,
        t[e[2] = "CommonServerUserAccountTypeEmail"] = 2,
        t[e[3] = "CommonServerUserAccountTypeOther"] = 3,
        t[e[4] = "CommonServerUserAccountTypePhoneNumberAndEmail"] = 4,
        t
    }(),
    s.CommonUserGender = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonUserGenderUndefined"] = 0,
        t[e[1] = "CommonUserGenderMale"] = 1,
        t[e[2] = "CommonUserGenderFemale"] = 2,
        t
    }(),
    s.CommonUserDeviceType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonUserDeviceTypePC"] = 0,
        t[e[1] = "CommonUserDeviceTypeAndroid"] = 1,
        t[e[2] = "CommonUserDeviceTypeiOS"] = 2,
        t
    }(),
    s.CommonMobileLoginType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonMobileLoginTypeUndifined"] = 0,
        t[e[1] = "CommonMobileLoginTypeAndroid"] = 1,
        t[e[2] = "CommonMobileLoginTypeiOS"] = 2,
        t
    }(),
    s.CommonPCLoginType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonPCLoginTypeUndifined"] = 0,
        t[e[1] = "CommonPCLoginTypeWindowsClient"] = 1,
        t[e[2] = "CommonPCLoginTypeMacClient"] = 2,
        t[e[3] = "CommonPCLoginTypeWebBrowser"] = 3,
        t
    }(),
    s.CommonUserOnlineStatusType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonUserOnlineStatusTypeOffline"] = 0,
        t[e[1] = "CommonUserOnlineStatusTypeMobileOnline"] = 1,
        t[e[2] = "CommonUserOnlineStatusTypePCLeave"] = 2,
        t[e[3] = "CommonUserOnlineStatusTypePCOnline"] = 3,
        t[e[4] = "CommonUserOnlineStatusTypeExternal"] = 4,
        t
    }(),
    s.CommonUserType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonUserTypeNormalUser"] = 0,
        t[e[1] = "CommonUserTypeSystemAccount"] = 1,
        t[e[2] = "CommonUserTypeServiceAccount"] = 2,
        t[e[3] = "CommonUserTypeGroupRobot"] = 3,
        t
    }(),
    s.CommonFriendStatusType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonFriendStatusTypeUndefined"] = 0,
        t[e[1] = "CommonFriendStatusTypeSentRequest"] = 1,
        t[e[2] = "CommonFriendStatusTypeNotAccepted"] = 2,
        t[e[3] = "CommonFriendStatusTypeFriend"] = 3,
        t
    }(),
    s.CommonAddFriendStatusType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonAddFriendStatusTypeSend"] = 0,
        t[e[1] = "CommonAddFriendStatusTypeIsFriend"] = 1,
        t[e[2] = "CommonAddFriendStatusTypeAddSuccess"] = 2,
        t
    }(),
    s.CommonAuthenticationEntityType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonAuthenticationEntityTypeCompany"] = 0,
        t[e[1] = "CommonAuthenticationEntityTypePersonal"] = 1,
        t
    }(),
    s.CommonContactsSettingsType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonContactsSettingsTypeStar"] = 0,
        t[e[1] = "CommonContactsSettingsTypeMuteNotifications"] = 1,
        t[e[2] = "CommonContactsSettingsTypeTop"] = 2,
        t
    }(),
    s.CommonGroupMemberType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonGroupMemberTypeNormalUser"] = 0,
        t[e[1] = "CommonGroupMemberTypeRobot"] = 1,
        t[e[2] = "CommonGroupMemberTypeDepartment"] = 2,
        t
    }(),
    s.CommonGroupJoinType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonGroupJoinTypeUndefined"] = 0,
        t[e[1] = "CommonGroupJoinTypeByInvitation"] = 1,
        t[e[2] = "CommonGroupJoinTypeByQRCode"] = 2,
        t[e[3] = "CommonGroupJoinTypeByWechatShareUrl"] = 3,
        t
    }(),
    s.CommonGroupRobotTemplateType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonGroupRobotTemplateTypeUndefined"] = 0,
        t[e[1] = "CommonGroupRobotTemplateTypeCustom"] = 1,
        t[e[2] = "CommonGroupRobotTemplateTypePushMessage"] = 2,
        t[e[3] = "CommonGroupRobotTemplateTypeHbOffice"] = 3,
        t
    }(),
    s.CommonMessageBasicType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonMessageBasicTypeUndefined"] = 0,
        t[e[1] = "CommonMessageBasicTypeSystem"] = 1,
        t[e[2] = "CommonMessageBasicTypeNormal"] = 2,
        t
    }(),
    s.CommonConversationType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonConversationTypeUndefined"] = 0,
        t[e[1] = "CommonConversationTypeSingleChat"] = 1,
        t[e[2] = "CommonConversationTypeGroupChat"] = 2,
        t[e[3] = "CommonConversationTypePrivateSingleChat"] = 3,
        t[e[4] = "CommonConversationTypePrivateGroupChat"] = 4,
        t
    }(),
    s.CommonRedpacketType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonRedpacketTypeUndefined"] = 0,
        t[e[1] = "CommonRedpacketTypePersonal"] = 1,
        t[e[2] = "CommonRedpacketTypeGroupNormal"] = 2,
        t[e[3] = "CommonRedpacketTypeGroupRandom"] = 3,
        t
    }(),
    s.CommonTransferProcessingStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonTransferProcessingStatusUndefined"] = 0,
        t[e[1] = "CommonTransferProcessingStatusGet"] = 1,
        t[e[2] = "CommonTransferProcessingStatusReturn"] = 2,
        t
    }(),
    s.CommonRemindMessagePlayType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonRemindMessagePlayTypeNormal"] = 0,
        t[e[1] = "CommonRemindMessagePlayTypeVoice"] = 1,
        t[e[2] = "CommonRemindMessagePlayTypeSpecial"] = 2,
        t
    }(),
    s.CommonRemindMessageSpecialRingType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonRemindMessageSpecialRingTypeUndefined"] = 0,
        t[e[1] = "CommonRemindMessageSpecialRingTypeOnDuty"] = 1,
        t[e[2] = "CommonRemindMessageSpecialRingTypeMeeting"] = 2,
        t[e[3] = "CommonRemindMessageSpecialRingTypeAssemble"] = 3,
        t[e[4] = "CommonRemindMessageSpecialRingTypeEat"] = 4,
        t[e[5] = "CommonRemindMessageSpecialRingTypeOffDuty"] = 5,
        t
    }(),
    s.CommonRemindMessageStrengthType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonRemindMessageStrengthTypeNormal"] = 0,
        t[e[1] = "CommonRemindMessageStrengthTypeImportant"] = 1,
        t[e[2] = "CommonRemindMessageStrengthTypeEmergency"] = 2,
        t
    }(),
    s.CommonFileType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonFileTypeUndefined"] = 0,
        t[e[1] = "CommonFileTypeImage"] = 1,
        t[e[2] = "CommonFileTypeVoice"] = 2,
        t[e[3] = "CommonFileTypeFile"] = 3,
        t
    }(),
    s.CommonFileUploadStatusType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonFileUploadStatusTypeNotExists"] = 0,
        t[e[1] = "CommonFileUploadStatusTypeUploading"] = 1,
        t[e[2] = "CommonFileUploadStatusTypeUploadCompletion"] = 2,
        t[e[3] = "CommonFileUploadStatusTypeFileBroken"] = 3,
        t
    }(),
    s.CommonPushType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonPushTypeUndefined"] = 0,
        t[e[1] = "CommonPushTypeXiaoMi"] = 1,
        t[e[2] = "CommonPushTypeHuawei"] = 2,
        t[e[3] = "CommonPushTypeAPNS"] = 3,
        t[e[4] = "CommonPushTypeVivo"] = 4,
        t[e[5] = "CommonPushTypeOppo"] = 5,
        t[e[6] = "CommonPushTypeMeizu"] = 6,
        t[e[7] = "CommonPushTypeHuaweiV1"] = 7,
        t
    }(),
    s.CommonCallType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonCallTypeUndefined"] = 0,
        t[e[1] = "CommonCallTypeVoice"] = 1,
        t[e[2] = "CommonCallTypeVideo"] = 2,
        t
    }(),
    s.CommonCallMemberStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonCallMemberStatusUndefined"] = 0,
        t[e[1] = "CommonCallMemberStatusCalling"] = 1,
        t[e[2] = "CommonCallMemberStatusWaiting"] = 2,
        t
    }(),
    s.CommonGroupCallMemberInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.status = 0,
        e.prototype.joinedTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.callType = 0,
        e.prototype.initiator = !1,
        e.prototype.inviteTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.status && e.hasOwnProperty("status") && t.uint32(16).int32(e.status),
            null != e.joinedTimestamp && e.hasOwnProperty("joinedTimestamp") && t.uint32(24).uint64(e.joinedTimestamp),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(32).int32(e.callType),
            null != e.initiator && e.hasOwnProperty("initiator") && t.uint32(40).bool(e.initiator),
            null != e.inviteTimestamp && e.hasOwnProperty("inviteTimestamp") && t.uint32(48).uint64(e.inviteTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.CommonGroupCallMemberInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.status = e.int32();
                    break;
                case 3:
                    r.joinedTimestamp = e.uint64();
                    break;
                case 4:
                    r.callType = e.int32();
                    break;
                case 5:
                    r.initiator = e.bool();
                    break;
                case 6:
                    r.inviteTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.CommonGroupCallMemberInfo)
                return e;
            var t = new s.CommonGroupCallMemberInfo;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.status) {
            case "CommonCallMemberStatusUndefined":
            case 0:
                t.status = 0;
                break;
            case "CommonCallMemberStatusCalling":
            case 1:
                t.status = 1;
                break;
            case "CommonCallMemberStatusWaiting":
            case 2:
                t.status = 2;
                break
            }
            switch (null != e.joinedTimestamp && (a.Long ? (t.joinedTimestamp = a.Long.fromValue(e.joinedTimestamp)).unsigned = !0 : "string" === typeof e.joinedTimestamp ? t.joinedTimestamp = parseInt(e.joinedTimestamp, 10) : "number" === typeof e.joinedTimestamp ? t.joinedTimestamp = e.joinedTimestamp : "object" === typeof e.joinedTimestamp && (t.joinedTimestamp = new a.LongBits(e.joinedTimestamp.low >>> 0,e.joinedTimestamp.high >>> 0).toNumber(!0))),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return null != e.initiator && (t.initiator = Boolean(e.initiator)),
            null != e.inviteTimestamp && (a.Long ? (t.inviteTimestamp = a.Long.fromValue(e.inviteTimestamp)).unsigned = !0 : "string" === typeof e.inviteTimestamp ? t.inviteTimestamp = parseInt(e.inviteTimestamp, 10) : "number" === typeof e.inviteTimestamp ? t.inviteTimestamp = e.inviteTimestamp : "object" === typeof e.inviteTimestamp && (t.inviteTimestamp = new a.LongBits(e.inviteTimestamp.low >>> 0,e.inviteTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.userId = 0,
                n.status = t.enums === String ? "CommonCallMemberStatusUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.joinedTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.joinedTimestamp = t.longs === String ? "0" : 0;
                if (n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0,
                n.initiator = !1,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.inviteTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.inviteTimestamp = t.longs === String ? "0" : 0
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonCallMemberStatus[e.status] : e.status),
            null != e.joinedTimestamp && e.hasOwnProperty("joinedTimestamp") && ("number" === typeof e.joinedTimestamp ? n.joinedTimestamp = t.longs === String ? String(e.joinedTimestamp) : e.joinedTimestamp : n.joinedTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.joinedTimestamp) : t.longs === Number ? new a.LongBits(e.joinedTimestamp.low >>> 0,e.joinedTimestamp.high >>> 0).toNumber(!0) : e.joinedTimestamp),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            null != e.initiator && e.hasOwnProperty("initiator") && (n.initiator = e.initiator),
            null != e.inviteTimestamp && e.hasOwnProperty("inviteTimestamp") && ("number" === typeof e.inviteTimestamp ? n.inviteTimestamp = t.longs === String ? String(e.inviteTimestamp) : e.inviteTimestamp : n.inviteTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.inviteTimestamp) : t.longs === Number ? new a.LongBits(e.inviteTimestamp.low >>> 0,e.inviteTimestamp.high >>> 0).toNumber(!0) : e.inviteTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.CommonCallStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonCallStatusUndefined"] = 0,
        t[e[1] = "CommonCallStatusWaiting"] = 1,
        t[e[2] = "CommonCallStatusCalling"] = 2,
        t[e[3] = "CommonCallStatusFinish"] = 3,
        t
    }(),
    s.CommonTabType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonTabTypeUndefined"] = 0,
        t[e[1] = "CommonTabTypeApp"] = 1,
        t[e[2] = "CommonTabTypeLink"] = 2,
        t[e[3] = "CommonTabTypeHbOffice"] = 3,
        t
    }(),
    s.CommonTabAppShowType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonTabAppShowTypeUndefined"] = 0,
        t[e[1] = "CommonTabAppShowTypeGrid"] = 1,
        t[e[2] = "CommonTabAppShowTypeList"] = 2,
        t
    }(),
    s.CommonGroupMemberGetHistoryType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonGroupMemberGetHistoryTypeNone"] = 0,
        t[e[1] = "CommonGroupMemberGetHistoryTypeRow"] = 1,
        t[e[2] = "CommonGroupMemberGetHistoryTypeAll"] = 2,
        t
    }(),
    s.CommonExtButtonType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonExtButtonTypeNone"] = 0,
        t[e[1] = "CommonExtButtonTypeDetail"] = 1,
        t[e[2] = "CommonExtButtonTypeGroup"] = 2,
        t
    }(),
    s.CommonExtButtonActionType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonExtButtonActionTypeNone"] = 0,
        t[e[1] = "CommonExtButtonActionTypeOpenUrl"] = 1,
        t[e[2] = "CommonExtButtonActionTypeClick"] = 2,
        t
    }(),
    s.AppGrantAuthorizationType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "AppGrantAuthorizationTypeUndefined"] = 0,
        t[e[1] = "AppGrantAuthorizationTypeBrownAuth"] = 1,
        t[e[2] = "AppGrantAuthorizationTypeScanQRCode"] = 2,
        t[e[3] = "AppGrantAuthorizationTypeAppAuth"] = 3,
        t[e[4] = "AppGrantAuthorizationTypeGetCompanyInfo"] = 4,
        t[e[5] = "AppGrantAuthorizationTypeShare"] = 5,
        t[e[6] = "AppGrantAuthorizationTypeSendSingleMessageByUser"] = 6,
        t
    }(),
    s.CommonRemindMessageState = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonRemindMessageStateNone"] = 0,
        t[e[1] = "CommonRemindMessageStateAny"] = 1,
        t[e[2] = "CommonRemindMessageStateTemplet"] = 2,
        t[e[3] = "CommonRemindMessageStateClose"] = 3,
        t
    }(),
    s.CommonMenuType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonMenuTypeUndefined"] = 0,
        t[e[1] = "CommonMenuTypeSendMessage"] = 1,
        t[e[2] = "CommonMenuTypeOpenUrl"] = 2,
        t[e[3] = "CommonMenuTypeCallback"] = 3,
        t
    }(),
    s.CommonListenType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonListenTypeUndefined"] = 0,
        t[e[1] = "CommonListenTypeIn"] = 1,
        t[e[2] = "CommonListenTypeOut"] = 2,
        t
    }(),
    s.CommonListenWIFIType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonListenWIFITypeUndefined"] = 0,
        t[e[1] = "CommonListenWIFITypeConnect"] = 1,
        t[e[2] = "CommonListenWIFITypeDisconnect"] = 2,
        t
    }(),
    s.CommonNetworkType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonNetworkTypeUndefined"] = 0,
        t[e[1] = "CommonNetworkTypeWIFI"] = 1,
        t[e[2] = "CommonNetworkTypeGPRS"] = 2,
        t
    }(),
    s.CommonNetworkPCWifiState = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonNetworkPCWifiStateNone"] = 0,
        t[e[1] = "CommonNetworkPCWifiStateLeave"] = 1,
        t[e[2] = "CommonNetworkPCWifiStateJoin"] = 2,
        t
    }(),
    s.CommonTaskType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonTaskTypeNone"] = 0,
        t[e[1] = "CommonTaskTypeTask"] = 1,
        t[e[2] = "CommonTaskTypeGroup"] = 2,
        t
    }(),
    s.CommonTaskActionType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonTaskActionTypeAll"] = 0,
        t[e[1] = "CommonTaskActionTypeCreate"] = 1,
        t[e[2] = "CommonTaskActionTypeUpdate"] = 2,
        t[e[3] = "CommonTaskActionTypeDelete"] = 3,
        t[e[4] = "CommonTaskActionTypeMove"] = 4,
        t[e[5] = "CommonTaskActionTypeFinish"] = 5,
        t
    }(),
    s.CommonNotifyType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonNotifyTypeNone"] = 0,
        t[e[1] = "CommonNotifyTypeTask"] = 1,
        t
    }(),
    s.CommonP2pFileStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonP2pFileStatusNone"] = 0,
        t[e[1] = "CommonP2pFileStatusWaiting"] = 1,
        t[e[2] = "CommonP2pFileStatusReject"] = 2,
        t[e[3] = "CommonP2pFileStatusCancel"] = 3,
        t[e[4] = "CommonP2pFileStatusAccept"] = 4,
        t[e[5] = "CommonP2pFileStatusSuccess"] = 5,
        t[e[6] = "CommonP2pFileStatusPause"] = 6,
        t[e[7] = "CommonP2pFileStatusFailure"] = 7,
        t
    }(),
    s.CommonDirectionType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonDirectionTypeNone"] = 0,
        t[e[1] = "CommonDirectionTypeUp"] = 1,
        t[e[2] = "CommonDirectionTypeDown"] = 2,
        t
    }(),
    s.CommonColumnType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonColumnTypeNone"] = 0,
        t[e[1] = "CommonColumnTypeText"] = 1,
        t[e[2] = "CommonColumnTypeNumber"] = 2,
        t[e[3] = "CommonColumnTypeDate"] = 3,
        t[e[4] = "CommonColumnTypeOption"] = 4,
        t[e[5] = "CommonColumnTypeGroupAlias"] = 5,
        t
    }(),
    s.CommonFormActionType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonFormActionTypeAll"] = 0,
        t[e[1] = "CommonFormActionTypeCreate"] = 1,
        t[e[2] = "CommonFormActionTypeUpdate"] = 2,
        t[e[3] = "CommonFormActionTypeDelete"] = 3,
        t[e[4] = "CommonFormActionTypeMove"] = 4,
        t
    }(),
    s.CommonFormSortRule = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonFormSortRuleNone"] = 0,
        t[e[1] = "CommonFormSortRuleManual"] = 1,
        t[e[2] = "CommonFormSortRuleASC"] = 2,
        t[e[3] = "CommonFormSortRuleDESC"] = 3,
        t[e[4] = "CommonFormSortRuleCreateTimestampASC"] = 4,
        t[e[5] = "CommonFormSortRuleCreateTimestampDESC"] = 5,
        t[e[6] = "CommonFormSortRuleUpdateTimestampASC"] = 6,
        t[e[7] = "CommonFormSortRuleUpdateTimestampDESC"] = 7,
        t[e[8] = "CommonFormSortRuleOption"] = 8,
        t
    }(),
    s.CommonFormGroupRule = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonFormGroupRuleNone"] = 0,
        t[e[1] = "CommonFormGroupRuleManual"] = 1,
        t[e[2] = "CommonFormGroupRuleInitial"] = 2,
        t[e[3] = "CommonFormGroupRuleSameValue"] = 3,
        t[e[4] = "CommonFormGroupRuleOption"] = 4,
        t
    }(),
    s.CommonAddFriendSource = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonAddFriendSourceUndefined"] = 0,
        t[e[1] = "CommonAddFriendSourceGroupChat"] = 1,
        t[e[2] = "CommonAddFriendSourceQRCode"] = 2,
        t[e[3] = "CommonAddFriendSourcePersonalCard"] = 3,
        t[e[4] = "CommonAddFriendSourceCompany"] = 4,
        t[e[5] = "CommonAddFriendSourceOther"] = 5,
        t
    }(),
    s.CommonGroupType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonGroupTypeUndefined"] = 0,
        t[e[1] = "CommonGroupTypeGeneral"] = 1,
        t[e[2] = "CommonGroupTypeCompany"] = 2,
        t[e[3] = "CommonGroupTypeDepartment"] = 3,
        t[e[4] = "CommonGroupTypeLive"] = 4,
        t
    }(),
    s.CommonAdminQRCodeType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonAdminQRCodeTypeUndefined"] = 0,
        t[e[1] = "CommonAdminQRCodeTypeBind"] = 1,
        t[e[2] = "CommonAdminQRCodeTypeLogin"] = 2,
        t
    }(),
    s.CommonAdminQRCodeStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonAdminQRCodeStatusNone"] = 0,
        t[e[1] = "CommonAdminQRCodeStatusScan"] = 1,
        t[e[2] = "CommonAdminQRCodeStatusAccept"] = 2,
        t
    }(),
    s.CommonLinkOpenType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonLinkOpenTypeUndefined"] = 0,
        t[e[1] = "CommonLinkOpenTypeWebsite"] = 1,
        t[e[2] = "CommonLinkOpenTypeAppScheme"] = 2,
        t[e[3] = "CommonLinkOpenTypeComplaint"] = 3,
        t
    }(),
    s.CommonAppealStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonAppealStatusSuspend"] = 0,
        t[e[1] = "CommonAppealStatusSubmitted"] = 1,
        t[e[2] = "CommonAppealStatusRestore"] = 2,
        t[e[3] = "CommonAppealStatusReject"] = 3,
        t[e[4] = "CommonAppealStatusStopUsing"] = 4,
        t
    }(),
    s.CommonMessageArea = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonMessageAreaAll"] = 0,
        t[e[1] = "CommonMessageAreaLecture"] = 1,
        t[e[2] = "CommonMessageAreaQuestion"] = 2,
        t
    }(),
    s.CommonLiveType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonLiveTypeUndefined"] = 0,
        t[e[1] = "CommonLiveTypeVoiceAndText"] = 1,
        t[e[2] = "CommonLiveTypePPT"] = 2,
        t[e[3] = "CommonLiveTypeVideo"] = 3,
        t[e[4] = "CommonLiveTypeDesktopShare"] = 4,
        t
    }(),
    s.CommonLiveStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonLiveStatusNotStarted"] = 0,
        t[e[1] = "CommonLiveStatusLive"] = 1,
        t[e[2] = "CommonLiveStatusEnd"] = 2,
        t
    }(),
    s.CommonPayType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonPayTypeUndefined"] = 0,
        t[e[1] = "CommonPayTypeWeChat"] = 1,
        t[e[2] = "CommonPayTypeAli"] = 2,
        t[e[3] = "CommonPayTypeCoupon"] = 3,
        t
    }(),
    s.CommonChannelType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonChannelTypeVideo"] = 0,
        t[e[1] = "CommonChannelTypeLive"] = 1,
        t
    }(),
    s.CommonPayStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonPayStatusWaitForPay"] = 0,
        t[e[1] = "CommonPayStatusSuccess"] = 1,
        t
    }(),
    s.CommonRefundStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonRefundStatusNone"] = 0,
        t[e[1] = "CommonRefundStatusApply"] = 1,
        t[e[2] = "CommonRefundStatusSuccess"] = 2,
        t[e[3] = "CommonRefundStatusFailure"] = 3,
        t
    }(),
    s.CommonCouponScope = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonCouponScopeNone"] = 0,
        t[e[1] = "CommonCouponScopeAll"] = 1,
        t[e[2] = "CommonCouponScopeLiveVideo"] = 2,
        t[e[3] = "CommonCouponScopeLiveDesktopShare"] = 3,
        t
    }(),
    s.CommonCouponType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonCouponTypeUndefined"] = 0,
        t[e[1] = "CommonCouponTypeDeduct"] = 1,
        t[e[2] = "CommonCouponTypeDiscount"] = 2,
        t[e[3] = "CommonCouponTypeAllDeduct"] = 3,
        t
    }(),
    s.CommonCouponStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonCouponStatusNotUsed"] = 0,
        t[e[1] = "CommonCouponStatusUsed"] = 1,
        t[e[2] = "CommonCouponStatusInvalid"] = 2,
        t
    }(),
    s.CommonExternalSourceType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonExternalSourceTypeDefault"] = 0,
        t[e[1] = "CommonExternalSourceTypeMiniProgram"] = 1,
        t[e[2] = "CommonExternalSourceTypeMobile"] = 2,
        t[e[3] = "CommonExternalSourceTypePC"] = 3,
        t
    }(),
    s.CommonComplaintType = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonComplaintTypeNone"] = 0,
        t[e[1] = "CommonComplaintTypeIllegalContent"] = 1,
        t[e[2] = "CommonComplaintTypeCheat"] = 2,
        t[e[3] = "CommonComplaintTypeAccountTheft"] = 3,
        t[e[4] = "CommonComplaintTypeTort"] = 4,
        t[e[5] = "CommonComplaintTypeSendShamInfo"] = 5,
        t[e[6] = "CommonComplaintTypePretendToBeOther"] = 6,
        t[e[7] = "CommonComplaintTypeGambling"] = 7,
        t[e[8] = "CommonComplaintTypeSpreadingRumors"] = 8,
        t
    }(),
    s.CommonComplaintStatus = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "CommonComplaintStatusNone"] = 0,
        t[e[1] = "CommonComplaintStatusProhibit"] = 1,
        t[e[2] = "CommonComplaintStatusStopUsing"] = 2,
        t[e[3] = "CommonComplaintStatusInvalid"] = 3,
        t[e[4] = "CommonComplaintStatusOtherComplaintProhibit"] = 4,
        t
    }(),
    s.HttpUserSpaceInfo = function() {
        function e(e) {
            if (this.tableIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.spaceId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.name = "",
        e.prototype.tableIds = a.emptyArray,
        e.prototype.coverNameColor = "",
        e.prototype.coverBackgroundColor = "",
        e.prototype.coverImage = "",
        e.prototype.coverCrop = "",
        e.prototype.companyId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.companyName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.spaceId && e.hasOwnProperty("spaceId") && t.uint32(8).uint64(e.spaceId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.tableIds && e.tableIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.tableIds.length; ++n)
                    t.uint64(e.tableIds[n]);
                t.ldelim()
            }
            return null != e.coverNameColor && e.hasOwnProperty("coverNameColor") && t.uint32(34).string(e.coverNameColor),
            null != e.coverBackgroundColor && e.hasOwnProperty("coverBackgroundColor") && t.uint32(42).string(e.coverBackgroundColor),
            null != e.coverImage && e.hasOwnProperty("coverImage") && t.uint32(50).string(e.coverImage),
            null != e.coverCrop && e.hasOwnProperty("coverCrop") && t.uint32(58).string(e.coverCrop),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(64).uint64(e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && t.uint32(74).string(e.companyName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserSpaceInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.spaceId = e.uint64();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    if (r.tableIds && r.tableIds.length || (r.tableIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.tableIds.push(e.uint64())
                    } else
                        r.tableIds.push(e.uint64());
                    break;
                case 4:
                    r.coverNameColor = e.string();
                    break;
                case 5:
                    r.coverBackgroundColor = e.string();
                    break;
                case 6:
                    r.coverImage = e.string();
                    break;
                case 7:
                    r.coverCrop = e.string();
                    break;
                case 8:
                    r.companyId = e.uint64();
                    break;
                case 9:
                    r.companyName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserSpaceInfo)
                return e;
            var t = new s.HttpUserSpaceInfo;
            if (null != e.spaceId && (a.Long ? (t.spaceId = a.Long.fromValue(e.spaceId)).unsigned = !0 : "string" === typeof e.spaceId ? t.spaceId = parseInt(e.spaceId, 10) : "number" === typeof e.spaceId ? t.spaceId = e.spaceId : "object" === typeof e.spaceId && (t.spaceId = new a.LongBits(e.spaceId.low >>> 0,e.spaceId.high >>> 0).toNumber(!0))),
            null != e.name && (t.name = String(e.name)),
            e.tableIds) {
                if (!Array.isArray(e.tableIds))
                    throw TypeError(".HttpUserSpaceInfo.tableIds: array expected");
                t.tableIds = [];
                for (var n = 0; n < e.tableIds.length; ++n)
                    a.Long ? (t.tableIds[n] = a.Long.fromValue(e.tableIds[n])).unsigned = !0 : "string" === typeof e.tableIds[n] ? t.tableIds[n] = parseInt(e.tableIds[n], 10) : "number" === typeof e.tableIds[n] ? t.tableIds[n] = e.tableIds[n] : "object" === typeof e.tableIds[n] && (t.tableIds[n] = new a.LongBits(e.tableIds[n].low >>> 0,e.tableIds[n].high >>> 0).toNumber(!0))
            }
            return null != e.coverNameColor && (t.coverNameColor = String(e.coverNameColor)),
            null != e.coverBackgroundColor && (t.coverBackgroundColor = String(e.coverBackgroundColor)),
            null != e.coverImage && (t.coverImage = String(e.coverImage)),
            null != e.coverCrop && (t.coverCrop = String(e.coverCrop)),
            null != e.companyId && (a.Long ? (t.companyId = a.Long.fromValue(e.companyId)).unsigned = !0 : "string" === typeof e.companyId ? t.companyId = parseInt(e.companyId, 10) : "number" === typeof e.companyId ? t.companyId = e.companyId : "object" === typeof e.companyId && (t.companyId = new a.LongBits(e.companyId.low >>> 0,e.companyId.high >>> 0).toNumber(!0))),
            null != e.companyName && (t.companyName = String(e.companyName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.tableIds = []),
            t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.spaceId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.spaceId = t.longs === String ? "0" : 0;
                if (n.name = "",
                n.coverNameColor = "",
                n.coverBackgroundColor = "",
                n.coverImage = "",
                n.coverCrop = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.companyId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.companyId = t.longs === String ? "0" : 0;
                n.companyName = ""
            }
            if (null != e.spaceId && e.hasOwnProperty("spaceId") && ("number" === typeof e.spaceId ? n.spaceId = t.longs === String ? String(e.spaceId) : e.spaceId : n.spaceId = t.longs === String ? a.Long.prototype.toString.call(e.spaceId) : t.longs === Number ? new a.LongBits(e.spaceId.low >>> 0,e.spaceId.high >>> 0).toNumber(!0) : e.spaceId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            e.tableIds && e.tableIds.length) {
                n.tableIds = [];
                for (var o = 0; o < e.tableIds.length; ++o)
                    "number" === typeof e.tableIds[o] ? n.tableIds[o] = t.longs === String ? String(e.tableIds[o]) : e.tableIds[o] : n.tableIds[o] = t.longs === String ? a.Long.prototype.toString.call(e.tableIds[o]) : t.longs === Number ? new a.LongBits(e.tableIds[o].low >>> 0,e.tableIds[o].high >>> 0).toNumber(!0) : e.tableIds[o]
            }
            return null != e.coverNameColor && e.hasOwnProperty("coverNameColor") && (n.coverNameColor = e.coverNameColor),
            null != e.coverBackgroundColor && e.hasOwnProperty("coverBackgroundColor") && (n.coverBackgroundColor = e.coverBackgroundColor),
            null != e.coverImage && e.hasOwnProperty("coverImage") && (n.coverImage = e.coverImage),
            null != e.coverCrop && e.hasOwnProperty("coverCrop") && (n.coverCrop = e.coverCrop),
            null != e.companyId && e.hasOwnProperty("companyId") && ("number" === typeof e.companyId ? n.companyId = t.longs === String ? String(e.companyId) : e.companyId : n.companyId = t.longs === String ? a.Long.prototype.toString.call(e.companyId) : t.longs === Number ? new a.LongBits(e.companyId.low >>> 0,e.companyId.high >>> 0).toNumber(!0) : e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && (n.companyName = e.companyName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUserTableInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.tableId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.name = "",
        e.prototype.icon = "",
        e.prototype.url = "",
        e.prototype.spaceId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.spaceName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.tableId && e.hasOwnProperty("tableId") && t.uint32(8).uint64(e.tableId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.icon && e.hasOwnProperty("icon") && t.uint32(26).string(e.icon),
            null != e.url && e.hasOwnProperty("url") && t.uint32(34).string(e.url),
            null != e.spaceId && e.hasOwnProperty("spaceId") && t.uint32(40).uint64(e.spaceId),
            null != e.spaceName && e.hasOwnProperty("spaceName") && t.uint32(50).string(e.spaceName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserTableInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.tableId = e.uint64();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.icon = e.string();
                    break;
                case 4:
                    r.url = e.string();
                    break;
                case 5:
                    r.spaceId = e.uint64();
                    break;
                case 6:
                    r.spaceName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserTableInfo)
                return e;
            var t = new s.HttpUserTableInfo;
            return null != e.tableId && (a.Long ? (t.tableId = a.Long.fromValue(e.tableId)).unsigned = !0 : "string" === typeof e.tableId ? t.tableId = parseInt(e.tableId, 10) : "number" === typeof e.tableId ? t.tableId = e.tableId : "object" === typeof e.tableId && (t.tableId = new a.LongBits(e.tableId.low >>> 0,e.tableId.high >>> 0).toNumber(!0))),
            null != e.name && (t.name = String(e.name)),
            null != e.icon && (t.icon = String(e.icon)),
            null != e.url && (t.url = String(e.url)),
            null != e.spaceId && (a.Long ? (t.spaceId = a.Long.fromValue(e.spaceId)).unsigned = !0 : "string" === typeof e.spaceId ? t.spaceId = parseInt(e.spaceId, 10) : "number" === typeof e.spaceId ? t.spaceId = e.spaceId : "object" === typeof e.spaceId && (t.spaceId = new a.LongBits(e.spaceId.low >>> 0,e.spaceId.high >>> 0).toNumber(!0))),
            null != e.spaceName && (t.spaceName = String(e.spaceName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.tableId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.tableId = t.longs === String ? "0" : 0;
                if (n.name = "",
                n.icon = "",
                n.url = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.spaceId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.spaceId = t.longs === String ? "0" : 0;
                n.spaceName = ""
            }
            return null != e.tableId && e.hasOwnProperty("tableId") && ("number" === typeof e.tableId ? n.tableId = t.longs === String ? String(e.tableId) : e.tableId : n.tableId = t.longs === String ? a.Long.prototype.toString.call(e.tableId) : t.longs === Number ? new a.LongBits(e.tableId.low >>> 0,e.tableId.high >>> 0).toNumber(!0) : e.tableId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.icon && e.hasOwnProperty("icon") && (n.icon = e.icon),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.spaceId && e.hasOwnProperty("spaceId") && ("number" === typeof e.spaceId ? n.spaceId = t.longs === String ? String(e.spaceId) : e.spaceId : n.spaceId = t.longs === String ? a.Long.prototype.toString.call(e.spaceId) : t.longs === Number ? new a.LongBits(e.spaceId.low >>> 0,e.spaceId.high >>> 0).toNumber(!0) : e.spaceId),
            null != e.spaceName && e.hasOwnProperty("spaceName") && (n.spaceName = e.spaceName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUserSettings = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.webOnlinePhoneMuteNotification = !1,
        e.prototype.newMessageNotification = !1,
        e.prototype.displayPushMessageDetail = !1,
        e.prototype.sound = !1,
        e.prototype.vibration = !1,
        e.prototype.muteNotification = !1,
        e.prototype.muteNotificationStart = "",
        e.prototype.muteNotificationEnd = "",
        e.prototype.timezone = "",
        e.prototype.addFriendVerify = !1,
        e.prototype.searchEmail = !1,
        e.prototype.searchPhoneNumber = !1,
        e.prototype.groupChatAddFriend = !1,
        e.prototype.qrcodeAddFriend = !1,
        e.prototype.personalCardAddFriend = !1,
        e.prototype.companyAddFriend = !1,
        e.prototype.remindMessageSound = !1,
        e.prototype.searchAccount = !1,
        e.prototype.manualModifyAccount = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.webOnlinePhoneMuteNotification && e.hasOwnProperty("webOnlinePhoneMuteNotification") && t.uint32(8).bool(e.webOnlinePhoneMuteNotification),
            null != e.newMessageNotification && e.hasOwnProperty("newMessageNotification") && t.uint32(16).bool(e.newMessageNotification),
            null != e.displayPushMessageDetail && e.hasOwnProperty("displayPushMessageDetail") && t.uint32(24).bool(e.displayPushMessageDetail),
            null != e.sound && e.hasOwnProperty("sound") && t.uint32(32).bool(e.sound),
            null != e.vibration && e.hasOwnProperty("vibration") && t.uint32(40).bool(e.vibration),
            null != e.muteNotification && e.hasOwnProperty("muteNotification") && t.uint32(48).bool(e.muteNotification),
            null != e.muteNotificationStart && e.hasOwnProperty("muteNotificationStart") && t.uint32(58).string(e.muteNotificationStart),
            null != e.muteNotificationEnd && e.hasOwnProperty("muteNotificationEnd") && t.uint32(66).string(e.muteNotificationEnd),
            null != e.timezone && e.hasOwnProperty("timezone") && t.uint32(74).string(e.timezone),
            null != e.addFriendVerify && e.hasOwnProperty("addFriendVerify") && t.uint32(80).bool(e.addFriendVerify),
            null != e.searchEmail && e.hasOwnProperty("searchEmail") && t.uint32(88).bool(e.searchEmail),
            null != e.searchPhoneNumber && e.hasOwnProperty("searchPhoneNumber") && t.uint32(96).bool(e.searchPhoneNumber),
            null != e.groupChatAddFriend && e.hasOwnProperty("groupChatAddFriend") && t.uint32(104).bool(e.groupChatAddFriend),
            null != e.qrcodeAddFriend && e.hasOwnProperty("qrcodeAddFriend") && t.uint32(112).bool(e.qrcodeAddFriend),
            null != e.personalCardAddFriend && e.hasOwnProperty("personalCardAddFriend") && t.uint32(120).bool(e.personalCardAddFriend),
            null != e.companyAddFriend && e.hasOwnProperty("companyAddFriend") && t.uint32(128).bool(e.companyAddFriend),
            null != e.remindMessageSound && e.hasOwnProperty("remindMessageSound") && t.uint32(136).bool(e.remindMessageSound),
            null != e.searchAccount && e.hasOwnProperty("searchAccount") && t.uint32(144).bool(e.searchAccount),
            null != e.manualModifyAccount && e.hasOwnProperty("manualModifyAccount") && t.uint32(152).bool(e.manualModifyAccount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.webOnlinePhoneMuteNotification = e.bool();
                    break;
                case 2:
                    r.newMessageNotification = e.bool();
                    break;
                case 3:
                    r.displayPushMessageDetail = e.bool();
                    break;
                case 4:
                    r.sound = e.bool();
                    break;
                case 5:
                    r.vibration = e.bool();
                    break;
                case 6:
                    r.muteNotification = e.bool();
                    break;
                case 7:
                    r.muteNotificationStart = e.string();
                    break;
                case 8:
                    r.muteNotificationEnd = e.string();
                    break;
                case 9:
                    r.timezone = e.string();
                    break;
                case 10:
                    r.addFriendVerify = e.bool();
                    break;
                case 11:
                    r.searchEmail = e.bool();
                    break;
                case 12:
                    r.searchPhoneNumber = e.bool();
                    break;
                case 13:
                    r.groupChatAddFriend = e.bool();
                    break;
                case 14:
                    r.qrcodeAddFriend = e.bool();
                    break;
                case 15:
                    r.personalCardAddFriend = e.bool();
                    break;
                case 16:
                    r.companyAddFriend = e.bool();
                    break;
                case 17:
                    r.remindMessageSound = e.bool();
                    break;
                case 18:
                    r.searchAccount = e.bool();
                    break;
                case 19:
                    r.manualModifyAccount = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserSettings)
                return e;
            var t = new s.HttpUserSettings;
            return null != e.webOnlinePhoneMuteNotification && (t.webOnlinePhoneMuteNotification = Boolean(e.webOnlinePhoneMuteNotification)),
            null != e.newMessageNotification && (t.newMessageNotification = Boolean(e.newMessageNotification)),
            null != e.displayPushMessageDetail && (t.displayPushMessageDetail = Boolean(e.displayPushMessageDetail)),
            null != e.sound && (t.sound = Boolean(e.sound)),
            null != e.vibration && (t.vibration = Boolean(e.vibration)),
            null != e.muteNotification && (t.muteNotification = Boolean(e.muteNotification)),
            null != e.muteNotificationStart && (t.muteNotificationStart = String(e.muteNotificationStart)),
            null != e.muteNotificationEnd && (t.muteNotificationEnd = String(e.muteNotificationEnd)),
            null != e.timezone && (t.timezone = String(e.timezone)),
            null != e.addFriendVerify && (t.addFriendVerify = Boolean(e.addFriendVerify)),
            null != e.searchEmail && (t.searchEmail = Boolean(e.searchEmail)),
            null != e.searchPhoneNumber && (t.searchPhoneNumber = Boolean(e.searchPhoneNumber)),
            null != e.groupChatAddFriend && (t.groupChatAddFriend = Boolean(e.groupChatAddFriend)),
            null != e.qrcodeAddFriend && (t.qrcodeAddFriend = Boolean(e.qrcodeAddFriend)),
            null != e.personalCardAddFriend && (t.personalCardAddFriend = Boolean(e.personalCardAddFriend)),
            null != e.companyAddFriend && (t.companyAddFriend = Boolean(e.companyAddFriend)),
            null != e.remindMessageSound && (t.remindMessageSound = Boolean(e.remindMessageSound)),
            null != e.searchAccount && (t.searchAccount = Boolean(e.searchAccount)),
            null != e.manualModifyAccount && (t.manualModifyAccount = Boolean(e.manualModifyAccount)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.webOnlinePhoneMuteNotification = !1,
            n.newMessageNotification = !1,
            n.displayPushMessageDetail = !1,
            n.sound = !1,
            n.vibration = !1,
            n.muteNotification = !1,
            n.muteNotificationStart = "",
            n.muteNotificationEnd = "",
            n.timezone = "",
            n.addFriendVerify = !1,
            n.searchEmail = !1,
            n.searchPhoneNumber = !1,
            n.groupChatAddFriend = !1,
            n.qrcodeAddFriend = !1,
            n.personalCardAddFriend = !1,
            n.companyAddFriend = !1,
            n.remindMessageSound = !1,
            n.searchAccount = !1,
            n.manualModifyAccount = !1),
            null != e.webOnlinePhoneMuteNotification && e.hasOwnProperty("webOnlinePhoneMuteNotification") && (n.webOnlinePhoneMuteNotification = e.webOnlinePhoneMuteNotification),
            null != e.newMessageNotification && e.hasOwnProperty("newMessageNotification") && (n.newMessageNotification = e.newMessageNotification),
            null != e.displayPushMessageDetail && e.hasOwnProperty("displayPushMessageDetail") && (n.displayPushMessageDetail = e.displayPushMessageDetail),
            null != e.sound && e.hasOwnProperty("sound") && (n.sound = e.sound),
            null != e.vibration && e.hasOwnProperty("vibration") && (n.vibration = e.vibration),
            null != e.muteNotification && e.hasOwnProperty("muteNotification") && (n.muteNotification = e.muteNotification),
            null != e.muteNotificationStart && e.hasOwnProperty("muteNotificationStart") && (n.muteNotificationStart = e.muteNotificationStart),
            null != e.muteNotificationEnd && e.hasOwnProperty("muteNotificationEnd") && (n.muteNotificationEnd = e.muteNotificationEnd),
            null != e.timezone && e.hasOwnProperty("timezone") && (n.timezone = e.timezone),
            null != e.addFriendVerify && e.hasOwnProperty("addFriendVerify") && (n.addFriendVerify = e.addFriendVerify),
            null != e.searchEmail && e.hasOwnProperty("searchEmail") && (n.searchEmail = e.searchEmail),
            null != e.searchPhoneNumber && e.hasOwnProperty("searchPhoneNumber") && (n.searchPhoneNumber = e.searchPhoneNumber),
            null != e.groupChatAddFriend && e.hasOwnProperty("groupChatAddFriend") && (n.groupChatAddFriend = e.groupChatAddFriend),
            null != e.qrcodeAddFriend && e.hasOwnProperty("qrcodeAddFriend") && (n.qrcodeAddFriend = e.qrcodeAddFriend),
            null != e.personalCardAddFriend && e.hasOwnProperty("personalCardAddFriend") && (n.personalCardAddFriend = e.personalCardAddFriend),
            null != e.companyAddFriend && e.hasOwnProperty("companyAddFriend") && (n.companyAddFriend = e.companyAddFriend),
            null != e.remindMessageSound && e.hasOwnProperty("remindMessageSound") && (n.remindMessageSound = e.remindMessageSound),
            null != e.searchAccount && e.hasOwnProperty("searchAccount") && (n.searchAccount = e.searchAccount),
            null != e.manualModifyAccount && e.hasOwnProperty("manualModifyAccount") && (n.manualModifyAccount = e.manualModifyAccount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpBackgroundImage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.originalImageUrl = "",
        e.prototype.thumbImageUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.originalImageUrl && e.hasOwnProperty("originalImageUrl") && t.uint32(10).string(e.originalImageUrl),
            null != e.thumbImageUrl && e.hasOwnProperty("thumbImageUrl") && t.uint32(18).string(e.thumbImageUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpBackgroundImage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.originalImageUrl = e.string();
                    break;
                case 2:
                    r.thumbImageUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpBackgroundImage)
                return e;
            var t = new s.HttpBackgroundImage;
            return null != e.originalImageUrl && (t.originalImageUrl = String(e.originalImageUrl)),
            null != e.thumbImageUrl && (t.thumbImageUrl = String(e.thumbImageUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.originalImageUrl = "",
            n.thumbImageUrl = ""),
            null != e.originalImageUrl && e.hasOwnProperty("originalImageUrl") && (n.originalImageUrl = e.originalImageUrl),
            null != e.thumbImageUrl && e.hasOwnProperty("thumbImageUrl") && (n.thumbImageUrl = e.thumbImageUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpEmotion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotionId = "",
        e.prototype.emotionUrl = "",
        e.prototype.width = 0,
        e.prototype.height = 0,
        e.prototype.orderId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.emotionId && e.hasOwnProperty("emotionId") && t.uint32(10).string(e.emotionId),
            null != e.emotionUrl && e.hasOwnProperty("emotionUrl") && t.uint32(18).string(e.emotionUrl),
            null != e.width && e.hasOwnProperty("width") && t.uint32(24).uint32(e.width),
            null != e.height && e.hasOwnProperty("height") && t.uint32(32).uint32(e.height),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(40).uint64(e.orderId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpEmotion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotionId = e.string();
                    break;
                case 2:
                    r.emotionUrl = e.string();
                    break;
                case 3:
                    r.width = e.uint32();
                    break;
                case 4:
                    r.height = e.uint32();
                    break;
                case 5:
                    r.orderId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpEmotion)
                return e;
            var t = new s.HttpEmotion;
            return null != e.emotionId && (t.emotionId = String(e.emotionId)),
            null != e.emotionUrl && (t.emotionUrl = String(e.emotionUrl)),
            null != e.width && (t.width = e.width >>> 0),
            null != e.height && (t.height = e.height >>> 0),
            null != e.orderId && (a.Long ? (t.orderId = a.Long.fromValue(e.orderId)).unsigned = !0 : "string" === typeof e.orderId ? t.orderId = parseInt(e.orderId, 10) : "number" === typeof e.orderId ? t.orderId = e.orderId : "object" === typeof e.orderId && (t.orderId = new a.LongBits(e.orderId.low >>> 0,e.orderId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.emotionId = "",
                n.emotionUrl = "",
                n.width = 0,
                n.height = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.orderId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.orderId = t.longs === String ? "0" : 0;
            return null != e.emotionId && e.hasOwnProperty("emotionId") && (n.emotionId = e.emotionId),
            null != e.emotionUrl && e.hasOwnProperty("emotionUrl") && (n.emotionUrl = e.emotionUrl),
            null != e.width && e.hasOwnProperty("width") && (n.width = e.width),
            null != e.height && e.hasOwnProperty("height") && (n.height = e.height),
            null != e.orderId && e.hasOwnProperty("orderId") && ("number" === typeof e.orderId ? n.orderId = t.longs === String ? String(e.orderId) : e.orderId : n.orderId = t.longs === String ? a.Long.prototype.toString.call(e.orderId) : t.longs === Number ? new a.LongBits(e.orderId.low >>> 0,e.orderId.high >>> 0).toNumber(!0) : e.orderId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpEmotionOrder = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotionId = "",
        e.prototype.orderId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.emotionId && e.hasOwnProperty("emotionId") && t.uint32(10).string(e.emotionId),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(16).uint64(e.orderId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpEmotionOrder;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotionId = e.string();
                    break;
                case 2:
                    r.orderId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpEmotionOrder)
                return e;
            var t = new s.HttpEmotionOrder;
            return null != e.emotionId && (t.emotionId = String(e.emotionId)),
            null != e.orderId && (a.Long ? (t.orderId = a.Long.fromValue(e.orderId)).unsigned = !0 : "string" === typeof e.orderId ? t.orderId = parseInt(e.orderId, 10) : "number" === typeof e.orderId ? t.orderId = e.orderId : "object" === typeof e.orderId && (t.orderId = new a.LongBits(e.orderId.low >>> 0,e.orderId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.emotionId = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.orderId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.orderId = t.longs === String ? "0" : 0;
            return null != e.emotionId && e.hasOwnProperty("emotionId") && (n.emotionId = e.emotionId),
            null != e.orderId && e.hasOwnProperty("orderId") && ("number" === typeof e.orderId ? n.orderId = t.longs === String ? String(e.orderId) : e.orderId : n.orderId = t.longs === String ? a.Long.prototype.toString.call(e.orderId) : t.longs === Number ? new a.LongBits(e.orderId.low >>> 0,e.orderId.high >>> 0).toNumber(!0) : e.orderId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFavoriteMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.message = null,
        e.prototype.senderId = 0,
        e.prototype.groupId = 0,
        e.prototype.senderName = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.groupName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(8).uint64(e.timestamp),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(18).fork()).ldelim(),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(24).uint32(e.senderId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(32).uint32(e.groupId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(42).string(e.senderName),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(50).string(e.thumbAvatarUrl),
            null != e.groupName && e.hasOwnProperty("groupName") && t.uint32(58).string(e.groupName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.timestamp = e.uint64();
                    break;
                case 2:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 3:
                    r.senderId = e.uint32();
                    break;
                case 4:
                    r.groupId = e.uint32();
                    break;
                case 5:
                    r.senderName = e.string();
                    break;
                case 6:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 7:
                    r.groupName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFavoriteMessage)
                return e;
            var t = new s.HttpFavoriteMessage;
            if (null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".HttpFavoriteMessage.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            null != e.groupName && (t.groupName = String(e.groupName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.message = null,
                n.senderId = 0,
                n.groupId = 0,
                n.senderName = "",
                n.thumbAvatarUrl = "",
                n.groupName = ""
            }
            return null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.groupName && e.hasOwnProperty("groupName") && (n.groupName = e.groupName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUserInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userBasicInfo = null,
        e.prototype.serviceAccountExtension = null,
        e.prototype.groupRobotExtension = null,
        e.prototype.friendExtension = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userBasicInfo && e.hasOwnProperty("userBasicInfo") && s.HttpUserBasicInfo.encode(e.userBasicInfo, t.uint32(10).fork()).ldelim(),
            null != e.serviceAccountExtension && e.hasOwnProperty("serviceAccountExtension") && s.HttpServiceAccountExtension.encode(e.serviceAccountExtension, t.uint32(18).fork()).ldelim(),
            null != e.groupRobotExtension && e.hasOwnProperty("groupRobotExtension") && s.HttpGroupRobotExtension.encode(e.groupRobotExtension, t.uint32(26).fork()).ldelim(),
            null != e.friendExtension && e.hasOwnProperty("friendExtension") && s.HttpFriendInfoExtension.encode(e.friendExtension, t.uint32(34).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userBasicInfo = s.HttpUserBasicInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.serviceAccountExtension = s.HttpServiceAccountExtension.decode(e, e.uint32());
                    break;
                case 3:
                    r.groupRobotExtension = s.HttpGroupRobotExtension.decode(e, e.uint32());
                    break;
                case 4:
                    r.friendExtension = s.HttpFriendInfoExtension.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserInfo)
                return e;
            var t = new s.HttpUserInfo;
            if (null != e.userBasicInfo) {
                if ("object" !== typeof e.userBasicInfo)
                    throw TypeError(".HttpUserInfo.userBasicInfo: object expected");
                t.userBasicInfo = s.HttpUserBasicInfo.fromObject(e.userBasicInfo)
            }
            if (null != e.serviceAccountExtension) {
                if ("object" !== typeof e.serviceAccountExtension)
                    throw TypeError(".HttpUserInfo.serviceAccountExtension: object expected");
                t.serviceAccountExtension = s.HttpServiceAccountExtension.fromObject(e.serviceAccountExtension)
            }
            if (null != e.groupRobotExtension) {
                if ("object" !== typeof e.groupRobotExtension)
                    throw TypeError(".HttpUserInfo.groupRobotExtension: object expected");
                t.groupRobotExtension = s.HttpGroupRobotExtension.fromObject(e.groupRobotExtension)
            }
            if (null != e.friendExtension) {
                if ("object" !== typeof e.friendExtension)
                    throw TypeError(".HttpUserInfo.friendExtension: object expected");
                t.friendExtension = s.HttpFriendInfoExtension.fromObject(e.friendExtension)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userBasicInfo = null,
            n.serviceAccountExtension = null,
            n.groupRobotExtension = null,
            n.friendExtension = null),
            null != e.userBasicInfo && e.hasOwnProperty("userBasicInfo") && (n.userBasicInfo = s.HttpUserBasicInfo.toObject(e.userBasicInfo, t)),
            null != e.serviceAccountExtension && e.hasOwnProperty("serviceAccountExtension") && (n.serviceAccountExtension = s.HttpServiceAccountExtension.toObject(e.serviceAccountExtension, t)),
            null != e.groupRobotExtension && e.hasOwnProperty("groupRobotExtension") && (n.groupRobotExtension = s.HttpGroupRobotExtension.toObject(e.groupRobotExtension, t)),
            null != e.friendExtension && e.hasOwnProperty("friendExtension") && (n.friendExtension = s.HttpFriendInfoExtension.toObject(e.friendExtension, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUserInfoSource = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.url && e.hasOwnProperty("url") && t.uint32(18).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserInfoSource;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserInfoSource)
                return e;
            var t = new s.HttpUserInfoSource;
            return null != e.title && (t.title = String(e.title)),
            null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.title = "",
            n.url = ""),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUserBasicInfo = function() {
        function e(e) {
            if (this.externalUserIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.account = "",
        e.prototype.name = "",
        e.prototype.region = "",
        e.prototype.signature = "",
        e.prototype.gender = 0,
        e.prototype.avatarUrl = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.userType = 0,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.contactsSettingsVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.avatarVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.joined = !1,
        e.prototype.isExternal = !1,
        e.prototype.externalUserIds = a.emptyArray,
        e.prototype.source = null,
        e.prototype.myExternalUserId = 0,
        e.prototype.manualModifyAccount = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(18).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(26).string(e.email),
            null != e.account && e.hasOwnProperty("account") && t.uint32(34).string(e.account),
            null != e.name && e.hasOwnProperty("name") && t.uint32(42).string(e.name),
            null != e.region && e.hasOwnProperty("region") && t.uint32(50).string(e.region),
            null != e.signature && e.hasOwnProperty("signature") && t.uint32(58).string(e.signature),
            null != e.gender && e.hasOwnProperty("gender") && t.uint32(64).int32(e.gender),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(74).string(e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(82).string(e.thumbAvatarUrl),
            null != e.userType && e.hasOwnProperty("userType") && t.uint32(88).int32(e.userType),
            null != e.version && e.hasOwnProperty("version") && t.uint32(96).uint64(e.version),
            null != e.contactsSettingsVersion && e.hasOwnProperty("contactsSettingsVersion") && t.uint32(104).uint64(e.contactsSettingsVersion),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && t.uint32(112).uint64(e.avatarVersion),
            null != e.joined && e.hasOwnProperty("joined") && t.uint32(120).bool(e.joined),
            null != e.isExternal && e.hasOwnProperty("isExternal") && t.uint32(128).bool(e.isExternal),
            null != e.externalUserIds && e.externalUserIds.length) {
                t.uint32(138).fork();
                for (var n = 0; n < e.externalUserIds.length; ++n)
                    t.uint32(e.externalUserIds[n]);
                t.ldelim()
            }
            return null != e.source && e.hasOwnProperty("source") && s.HttpUserInfoSource.encode(e.source, t.uint32(146).fork()).ldelim(),
            null != e.myExternalUserId && e.hasOwnProperty("myExternalUserId") && t.uint32(152).uint32(e.myExternalUserId),
            null != e.manualModifyAccount && e.hasOwnProperty("manualModifyAccount") && t.uint32(160).bool(e.manualModifyAccount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserBasicInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.phoneNumber = e.string();
                    break;
                case 3:
                    r.email = e.string();
                    break;
                case 4:
                    r.account = e.string();
                    break;
                case 5:
                    r.name = e.string();
                    break;
                case 6:
                    r.region = e.string();
                    break;
                case 7:
                    r.signature = e.string();
                    break;
                case 8:
                    r.gender = e.int32();
                    break;
                case 9:
                    r.avatarUrl = e.string();
                    break;
                case 10:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 11:
                    r.userType = e.int32();
                    break;
                case 12:
                    r.version = e.uint64();
                    break;
                case 13:
                    r.contactsSettingsVersion = e.uint64();
                    break;
                case 14:
                    r.avatarVersion = e.uint64();
                    break;
                case 15:
                    r.joined = e.bool();
                    break;
                case 16:
                    r.isExternal = e.bool();
                    break;
                case 17:
                    if (r.externalUserIds && r.externalUserIds.length || (r.externalUserIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.externalUserIds.push(e.uint32())
                    } else
                        r.externalUserIds.push(e.uint32());
                    break;
                case 18:
                    r.source = s.HttpUserInfoSource.decode(e, e.uint32());
                    break;
                case 19:
                    r.myExternalUserId = e.uint32();
                    break;
                case 20:
                    r.manualModifyAccount = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserBasicInfo)
                return e;
            var t = new s.HttpUserBasicInfo;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.account && (t.account = String(e.account)),
            null != e.name && (t.name = String(e.name)),
            null != e.region && (t.region = String(e.region)),
            null != e.signature && (t.signature = String(e.signature)),
            e.gender) {
            case "CommonUserGenderUndefined":
            case 0:
                t.gender = 0;
                break;
            case "CommonUserGenderMale":
            case 1:
                t.gender = 1;
                break;
            case "CommonUserGenderFemale":
            case 2:
                t.gender = 2;
                break
            }
            switch (null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            e.userType) {
            case "CommonUserTypeNormalUser":
            case 0:
                t.userType = 0;
                break;
            case "CommonUserTypeSystemAccount":
            case 1:
                t.userType = 1;
                break;
            case "CommonUserTypeServiceAccount":
            case 2:
                t.userType = 2;
                break;
            case "CommonUserTypeGroupRobot":
            case 3:
                t.userType = 3;
                break
            }
            if (null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.contactsSettingsVersion && (a.Long ? (t.contactsSettingsVersion = a.Long.fromValue(e.contactsSettingsVersion)).unsigned = !0 : "string" === typeof e.contactsSettingsVersion ? t.contactsSettingsVersion = parseInt(e.contactsSettingsVersion, 10) : "number" === typeof e.contactsSettingsVersion ? t.contactsSettingsVersion = e.contactsSettingsVersion : "object" === typeof e.contactsSettingsVersion && (t.contactsSettingsVersion = new a.LongBits(e.contactsSettingsVersion.low >>> 0,e.contactsSettingsVersion.high >>> 0).toNumber(!0))),
            null != e.avatarVersion && (a.Long ? (t.avatarVersion = a.Long.fromValue(e.avatarVersion)).unsigned = !0 : "string" === typeof e.avatarVersion ? t.avatarVersion = parseInt(e.avatarVersion, 10) : "number" === typeof e.avatarVersion ? t.avatarVersion = e.avatarVersion : "object" === typeof e.avatarVersion && (t.avatarVersion = new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0))),
            null != e.joined && (t.joined = Boolean(e.joined)),
            null != e.isExternal && (t.isExternal = Boolean(e.isExternal)),
            e.externalUserIds) {
                if (!Array.isArray(e.externalUserIds))
                    throw TypeError(".HttpUserBasicInfo.externalUserIds: array expected");
                t.externalUserIds = [];
                for (var n = 0; n < e.externalUserIds.length; ++n)
                    t.externalUserIds[n] = e.externalUserIds[n] >>> 0
            }
            if (null != e.source) {
                if ("object" !== typeof e.source)
                    throw TypeError(".HttpUserBasicInfo.source: object expected");
                t.source = s.HttpUserInfoSource.fromObject(e.source)
            }
            return null != e.myExternalUserId && (t.myExternalUserId = e.myExternalUserId >>> 0),
            null != e.manualModifyAccount && (t.manualModifyAccount = Boolean(e.manualModifyAccount)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.externalUserIds = []),
            t.defaults) {
                if (n.userId = 0,
                n.phoneNumber = "",
                n.email = "",
                n.account = "",
                n.name = "",
                n.region = "",
                n.signature = "",
                n.gender = t.enums === String ? "CommonUserGenderUndefined" : 0,
                n.avatarUrl = "",
                n.thumbAvatarUrl = "",
                n.userType = t.enums === String ? "CommonUserTypeNormalUser" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.contactsSettingsVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.contactsSettingsVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.avatarVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.avatarVersion = t.longs === String ? "0" : 0;
                n.joined = !1,
                n.isExternal = !1,
                n.source = null,
                n.myExternalUserId = 0,
                n.manualModifyAccount = !1
            }
            if (null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.account && e.hasOwnProperty("account") && (n.account = e.account),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.region && e.hasOwnProperty("region") && (n.region = e.region),
            null != e.signature && e.hasOwnProperty("signature") && (n.signature = e.signature),
            null != e.gender && e.hasOwnProperty("gender") && (n.gender = t.enums === String ? s.CommonUserGender[e.gender] : e.gender),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.userType && e.hasOwnProperty("userType") && (n.userType = t.enums === String ? s.CommonUserType[e.userType] : e.userType),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.contactsSettingsVersion && e.hasOwnProperty("contactsSettingsVersion") && ("number" === typeof e.contactsSettingsVersion ? n.contactsSettingsVersion = t.longs === String ? String(e.contactsSettingsVersion) : e.contactsSettingsVersion : n.contactsSettingsVersion = t.longs === String ? a.Long.prototype.toString.call(e.contactsSettingsVersion) : t.longs === Number ? new a.LongBits(e.contactsSettingsVersion.low >>> 0,e.contactsSettingsVersion.high >>> 0).toNumber(!0) : e.contactsSettingsVersion),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && ("number" === typeof e.avatarVersion ? n.avatarVersion = t.longs === String ? String(e.avatarVersion) : e.avatarVersion : n.avatarVersion = t.longs === String ? a.Long.prototype.toString.call(e.avatarVersion) : t.longs === Number ? new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0) : e.avatarVersion),
            null != e.joined && e.hasOwnProperty("joined") && (n.joined = e.joined),
            null != e.isExternal && e.hasOwnProperty("isExternal") && (n.isExternal = e.isExternal),
            e.externalUserIds && e.externalUserIds.length) {
                n.externalUserIds = [];
                for (var o = 0; o < e.externalUserIds.length; ++o)
                    n.externalUserIds[o] = e.externalUserIds[o]
            }
            return null != e.source && e.hasOwnProperty("source") && (n.source = s.HttpUserInfoSource.toObject(e.source, t)),
            null != e.myExternalUserId && e.hasOwnProperty("myExternalUserId") && (n.myExternalUserId = e.myExternalUserId),
            null != e.manualModifyAccount && e.hasOwnProperty("manualModifyAccount") && (n.manualModifyAccount = e.manualModifyAccount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFriendInfoExtension = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.alias = "",
        e.prototype.addFriendTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.alias && e.hasOwnProperty("alias") && t.uint32(10).string(e.alias),
            null != e.addFriendTimestamp && e.hasOwnProperty("addFriendTimestamp") && t.uint32(16).uint64(e.addFriendTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFriendInfoExtension;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.alias = e.string();
                    break;
                case 2:
                    r.addFriendTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFriendInfoExtension)
                return e;
            var t = new s.HttpFriendInfoExtension;
            return null != e.alias && (t.alias = String(e.alias)),
            null != e.addFriendTimestamp && (a.Long ? (t.addFriendTimestamp = a.Long.fromValue(e.addFriendTimestamp)).unsigned = !0 : "string" === typeof e.addFriendTimestamp ? t.addFriendTimestamp = parseInt(e.addFriendTimestamp, 10) : "number" === typeof e.addFriendTimestamp ? t.addFriendTimestamp = e.addFriendTimestamp : "object" === typeof e.addFriendTimestamp && (t.addFriendTimestamp = new a.LongBits(e.addFriendTimestamp.low >>> 0,e.addFriendTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.alias = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.addFriendTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.addFriendTimestamp = t.longs === String ? "0" : 0;
            return null != e.alias && e.hasOwnProperty("alias") && (n.alias = e.alias),
            null != e.addFriendTimestamp && e.hasOwnProperty("addFriendTimestamp") && ("number" === typeof e.addFriendTimestamp ? n.addFriendTimestamp = t.longs === String ? String(e.addFriendTimestamp) : e.addFriendTimestamp : n.addFriendTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.addFriendTimestamp) : t.longs === Number ? new a.LongBits(e.addFriendTimestamp.low >>> 0,e.addFriendTimestamp.high >>> 0).toNumber(!0) : e.addFriendTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpServiceAccountExtensionMenu = function() {
        function e(e) {
            if (this.menus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.menuId = 0,
        e.prototype.parentMenuId = 0,
        e.prototype.name = "",
        e.prototype.menuType = 0,
        e.prototype.url = "",
        e.prototype.menus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.menuId && e.hasOwnProperty("menuId") && t.uint32(8).uint32(e.menuId),
            null != e.parentMenuId && e.hasOwnProperty("parentMenuId") && t.uint32(16).uint32(e.parentMenuId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(26).string(e.name),
            null != e.menuType && e.hasOwnProperty("menuType") && t.uint32(32).int32(e.menuType),
            null != e.url && e.hasOwnProperty("url") && t.uint32(42).string(e.url),
            null != e.menus && e.menus.length)
                for (var n = 0; n < e.menus.length; ++n)
                    s.HttpServiceAccountExtensionMenu.encode(e.menus[n], t.uint32(50).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpServiceAccountExtensionMenu;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.menuId = e.uint32();
                    break;
                case 2:
                    r.parentMenuId = e.uint32();
                    break;
                case 3:
                    r.name = e.string();
                    break;
                case 4:
                    r.menuType = e.int32();
                    break;
                case 5:
                    r.url = e.string();
                    break;
                case 6:
                    r.menus && r.menus.length || (r.menus = []),
                    r.menus.push(s.HttpServiceAccountExtensionMenu.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpServiceAccountExtensionMenu)
                return e;
            var t = new s.HttpServiceAccountExtensionMenu;
            switch (null != e.menuId && (t.menuId = e.menuId >>> 0),
            null != e.parentMenuId && (t.parentMenuId = e.parentMenuId >>> 0),
            null != e.name && (t.name = String(e.name)),
            e.menuType) {
            case "CommonMenuTypeUndefined":
            case 0:
                t.menuType = 0;
                break;
            case "CommonMenuTypeSendMessage":
            case 1:
                t.menuType = 1;
                break;
            case "CommonMenuTypeOpenUrl":
            case 2:
                t.menuType = 2;
                break;
            case "CommonMenuTypeCallback":
            case 3:
                t.menuType = 3;
                break
            }
            if (null != e.url && (t.url = String(e.url)),
            e.menus) {
                if (!Array.isArray(e.menus))
                    throw TypeError(".HttpServiceAccountExtensionMenu.menus: array expected");
                t.menus = [];
                for (var n = 0; n < e.menus.length; ++n) {
                    if ("object" !== typeof e.menus[n])
                        throw TypeError(".HttpServiceAccountExtensionMenu.menus: object expected");
                    t.menus[n] = s.HttpServiceAccountExtensionMenu.fromObject(e.menus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.menus = []),
            t.defaults && (n.menuId = 0,
            n.parentMenuId = 0,
            n.name = "",
            n.menuType = t.enums === String ? "CommonMenuTypeUndefined" : 0,
            n.url = ""),
            null != e.menuId && e.hasOwnProperty("menuId") && (n.menuId = e.menuId),
            null != e.parentMenuId && e.hasOwnProperty("parentMenuId") && (n.parentMenuId = e.parentMenuId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.menuType && e.hasOwnProperty("menuType") && (n.menuType = t.enums === String ? s.CommonMenuType[e.menuType] : e.menuType),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            e.menus && e.menus.length) {
                n.menus = [];
                for (var r = 0; r < e.menus.length; ++r)
                    n.menus[r] = s.HttpServiceAccountExtensionMenu.toObject(e.menus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpServiceAccountExtension = function() {
        function e(e) {
            if (this.menus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.authenticationEntityId = 0,
        e.prototype.authenticationEntityType = 0,
        e.prototype.authenticationEntityInfo = "",
        e.prototype.token = "",
        e.prototype.state = 0,
        e.prototype.unfollow = !1,
        e.prototype.edit = !1,
        e.prototype.reply = !1,
        e.prototype.menus = a.emptyArray,
        e.prototype.appId = "",
        e.prototype.messageCallback = "",
        e.prototype.menuState = !1,
        e.prototype.autoReply = !1,
        e.prototype.disableStatus = !1,
        e.prototype.extend = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.authenticationEntityId && e.hasOwnProperty("authenticationEntityId") && t.uint32(8).uint32(e.authenticationEntityId),
            null != e.authenticationEntityType && e.hasOwnProperty("authenticationEntityType") && t.uint32(16).int32(e.authenticationEntityType),
            null != e.authenticationEntityInfo && e.hasOwnProperty("authenticationEntityInfo") && t.uint32(26).string(e.authenticationEntityInfo),
            null != e.token && e.hasOwnProperty("token") && t.uint32(34).string(e.token),
            null != e.state && e.hasOwnProperty("state") && t.uint32(40).uint32(e.state),
            null != e.unfollow && e.hasOwnProperty("unfollow") && t.uint32(48).bool(e.unfollow),
            null != e.edit && e.hasOwnProperty("edit") && t.uint32(56).bool(e.edit),
            null != e.reply && e.hasOwnProperty("reply") && t.uint32(64).bool(e.reply),
            null != e.menus && e.menus.length)
                for (var n = 0; n < e.menus.length; ++n)
                    s.HttpServiceAccountExtensionMenu.encode(e.menus[n], t.uint32(74).fork()).ldelim();
            return null != e.appId && e.hasOwnProperty("appId") && t.uint32(82).string(e.appId),
            null != e.messageCallback && e.hasOwnProperty("messageCallback") && t.uint32(90).string(e.messageCallback),
            null != e.menuState && e.hasOwnProperty("menuState") && t.uint32(96).bool(e.menuState),
            null != e.autoReply && e.hasOwnProperty("autoReply") && t.uint32(104).bool(e.autoReply),
            null != e.disableStatus && e.hasOwnProperty("disableStatus") && t.uint32(112).bool(e.disableStatus),
            null != e.extend && e.hasOwnProperty("extend") && t.uint32(120).bool(e.extend),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpServiceAccountExtension;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.authenticationEntityId = e.uint32();
                    break;
                case 2:
                    r.authenticationEntityType = e.int32();
                    break;
                case 3:
                    r.authenticationEntityInfo = e.string();
                    break;
                case 4:
                    r.token = e.string();
                    break;
                case 5:
                    r.state = e.uint32();
                    break;
                case 6:
                    r.unfollow = e.bool();
                    break;
                case 7:
                    r.edit = e.bool();
                    break;
                case 8:
                    r.reply = e.bool();
                    break;
                case 9:
                    r.menus && r.menus.length || (r.menus = []),
                    r.menus.push(s.HttpServiceAccountExtensionMenu.decode(e, e.uint32()));
                    break;
                case 10:
                    r.appId = e.string();
                    break;
                case 11:
                    r.messageCallback = e.string();
                    break;
                case 12:
                    r.menuState = e.bool();
                    break;
                case 13:
                    r.autoReply = e.bool();
                    break;
                case 14:
                    r.disableStatus = e.bool();
                    break;
                case 15:
                    r.extend = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpServiceAccountExtension)
                return e;
            var t = new s.HttpServiceAccountExtension;
            switch (null != e.authenticationEntityId && (t.authenticationEntityId = e.authenticationEntityId >>> 0),
            e.authenticationEntityType) {
            case "CommonAuthenticationEntityTypeCompany":
            case 0:
                t.authenticationEntityType = 0;
                break;
            case "CommonAuthenticationEntityTypePersonal":
            case 1:
                t.authenticationEntityType = 1;
                break
            }
            if (null != e.authenticationEntityInfo && (t.authenticationEntityInfo = String(e.authenticationEntityInfo)),
            null != e.token && (t.token = String(e.token)),
            null != e.state && (t.state = e.state >>> 0),
            null != e.unfollow && (t.unfollow = Boolean(e.unfollow)),
            null != e.edit && (t.edit = Boolean(e.edit)),
            null != e.reply && (t.reply = Boolean(e.reply)),
            e.menus) {
                if (!Array.isArray(e.menus))
                    throw TypeError(".HttpServiceAccountExtension.menus: array expected");
                t.menus = [];
                for (var n = 0; n < e.menus.length; ++n) {
                    if ("object" !== typeof e.menus[n])
                        throw TypeError(".HttpServiceAccountExtension.menus: object expected");
                    t.menus[n] = s.HttpServiceAccountExtensionMenu.fromObject(e.menus[n])
                }
            }
            return null != e.appId && (t.appId = String(e.appId)),
            null != e.messageCallback && (t.messageCallback = String(e.messageCallback)),
            null != e.menuState && (t.menuState = Boolean(e.menuState)),
            null != e.autoReply && (t.autoReply = Boolean(e.autoReply)),
            null != e.disableStatus && (t.disableStatus = Boolean(e.disableStatus)),
            null != e.extend && (t.extend = Boolean(e.extend)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.menus = []),
            t.defaults && (n.authenticationEntityId = 0,
            n.authenticationEntityType = t.enums === String ? "CommonAuthenticationEntityTypeCompany" : 0,
            n.authenticationEntityInfo = "",
            n.token = "",
            n.state = 0,
            n.unfollow = !1,
            n.edit = !1,
            n.reply = !1,
            n.appId = "",
            n.messageCallback = "",
            n.menuState = !1,
            n.autoReply = !1,
            n.disableStatus = !1,
            n.extend = !1),
            null != e.authenticationEntityId && e.hasOwnProperty("authenticationEntityId") && (n.authenticationEntityId = e.authenticationEntityId),
            null != e.authenticationEntityType && e.hasOwnProperty("authenticationEntityType") && (n.authenticationEntityType = t.enums === String ? s.CommonAuthenticationEntityType[e.authenticationEntityType] : e.authenticationEntityType),
            null != e.authenticationEntityInfo && e.hasOwnProperty("authenticationEntityInfo") && (n.authenticationEntityInfo = e.authenticationEntityInfo),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            null != e.unfollow && e.hasOwnProperty("unfollow") && (n.unfollow = e.unfollow),
            null != e.edit && e.hasOwnProperty("edit") && (n.edit = e.edit),
            null != e.reply && e.hasOwnProperty("reply") && (n.reply = e.reply),
            e.menus && e.menus.length) {
                n.menus = [];
                for (var r = 0; r < e.menus.length; ++r)
                    n.menus[r] = s.HttpServiceAccountExtensionMenu.toObject(e.menus[r], t)
            }
            return null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.messageCallback && e.hasOwnProperty("messageCallback") && (n.messageCallback = e.messageCallback),
            null != e.menuState && e.hasOwnProperty("menuState") && (n.menuState = e.menuState),
            null != e.autoReply && e.hasOwnProperty("autoReply") && (n.autoReply = e.autoReply),
            null != e.disableStatus && e.hasOwnProperty("disableStatus") && (n.disableStatus = e.disableStatus),
            null != e.extend && e.hasOwnProperty("extend") && (n.extend = e.extend),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpContactPrivateSetting = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.top = !1,
        e.prototype.muteNotifications = !1,
        e.prototype.privateCountDown = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.top && e.hasOwnProperty("top") && t.uint32(16).bool(e.top),
            null != e.muteNotifications && e.hasOwnProperty("muteNotifications") && t.uint32(24).bool(e.muteNotifications),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && t.uint32(32).uint32(e.privateCountDown),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpContactPrivateSetting;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.top = e.bool();
                    break;
                case 3:
                    r.muteNotifications = e.bool();
                    break;
                case 4:
                    r.privateCountDown = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpContactPrivateSetting)
                return e;
            var t = new s.HttpContactPrivateSetting;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.top && (t.top = Boolean(e.top)),
            null != e.muteNotifications && (t.muteNotifications = Boolean(e.muteNotifications)),
            null != e.privateCountDown && (t.privateCountDown = e.privateCountDown >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.top = !1,
            n.muteNotifications = !1,
            n.privateCountDown = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.top && e.hasOwnProperty("top") && (n.top = e.top),
            null != e.muteNotifications && e.hasOwnProperty("muteNotifications") && (n.muteNotifications = e.muteNotifications),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && (n.privateCountDown = e.privateCountDown),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpPhoneAddressBook = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.name = "",
        e.prototype.phoneNumber = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.name && e.hasOwnProperty("name") && t.uint32(10).string(e.name),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(18).string(e.phoneNumber),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpPhoneAddressBook;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.name = e.string();
                    break;
                case 2:
                    r.phoneNumber = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpPhoneAddressBook)
                return e;
            var t = new s.HttpPhoneAddressBook;
            return null != e.name && (t.name = String(e.name)),
            null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.name = "",
            n.phoneNumber = ""),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFriendRequestStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.status = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.requestMessage = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.status && e.hasOwnProperty("status") && t.uint32(16).int32(e.status),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(24).uint64(e.timestamp),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(34).string(e.requestMessage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFriendRequestStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.status = e.int32();
                    break;
                case 3:
                    r.timestamp = e.uint64();
                    break;
                case 4:
                    r.requestMessage = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFriendRequestStatus)
                return e;
            var t = new s.HttpFriendRequestStatus;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.status) {
            case "CommonFriendStatusTypeUndefined":
            case 0:
                t.status = 0;
                break;
            case "CommonFriendStatusTypeSentRequest":
            case 1:
                t.status = 1;
                break;
            case "CommonFriendStatusTypeNotAccepted":
            case 2:
                t.status = 2;
                break;
            case "CommonFriendStatusTypeFriend":
            case 3:
                t.status = 3;
                break
            }
            return null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.userId = 0,
                n.status = t.enums === String ? "CommonFriendStatusTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.requestMessage = ""
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonFriendStatusType[e.status] : e.status),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFriendInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.friendId = 0,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.friendId && e.hasOwnProperty("friendId") && t.uint32(8).uint32(e.friendId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFriendInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.friendId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFriendInfo)
                return e;
            var t = new s.HttpFriendInfo;
            return null != e.friendId && (t.friendId = e.friendId >>> 0),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.friendId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.friendId && e.hasOwnProperty("friendId") && (n.friendId = e.friendId),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpCompany = function() {
        function e(e) {
            if (this.starDepartmentIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.companyName = "",
        e.prototype.companyAvatarUrl = "",
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.myVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.starDepartmentIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && t.uint32(18).string(e.companyName),
            null != e.companyAvatarUrl && e.hasOwnProperty("companyAvatarUrl") && t.uint32(26).string(e.companyAvatarUrl),
            null != e.version && e.hasOwnProperty("version") && t.uint32(32).uint64(e.version),
            null != e.myVersion && e.hasOwnProperty("myVersion") && t.uint32(40).uint64(e.myVersion),
            null != e.starDepartmentIds && e.starDepartmentIds.length)
                for (var n = 0; n < e.starDepartmentIds.length; ++n)
                    t.uint32(50).string(e.starDepartmentIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpCompany;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.companyName = e.string();
                    break;
                case 3:
                    r.companyAvatarUrl = e.string();
                    break;
                case 4:
                    r.version = e.uint64();
                    break;
                case 5:
                    r.myVersion = e.uint64();
                    break;
                case 6:
                    r.starDepartmentIds && r.starDepartmentIds.length || (r.starDepartmentIds = []),
                    r.starDepartmentIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpCompany)
                return e;
            var t = new s.HttpCompany;
            if (null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.companyName && (t.companyName = String(e.companyName)),
            null != e.companyAvatarUrl && (t.companyAvatarUrl = String(e.companyAvatarUrl)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.myVersion && (a.Long ? (t.myVersion = a.Long.fromValue(e.myVersion)).unsigned = !0 : "string" === typeof e.myVersion ? t.myVersion = parseInt(e.myVersion, 10) : "number" === typeof e.myVersion ? t.myVersion = e.myVersion : "object" === typeof e.myVersion && (t.myVersion = new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0))),
            e.starDepartmentIds) {
                if (!Array.isArray(e.starDepartmentIds))
                    throw TypeError(".HttpCompany.starDepartmentIds: array expected");
                t.starDepartmentIds = [];
                for (var n = 0; n < e.starDepartmentIds.length; ++n)
                    t.starDepartmentIds[n] = String(e.starDepartmentIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.starDepartmentIds = []),
            t.defaults) {
                if (n.companyId = "",
                n.companyName = "",
                n.companyAvatarUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.myVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.myVersion = t.longs === String ? "0" : 0
            }
            if (null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && (n.companyName = e.companyName),
            null != e.companyAvatarUrl && e.hasOwnProperty("companyAvatarUrl") && (n.companyAvatarUrl = e.companyAvatarUrl),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.myVersion && e.hasOwnProperty("myVersion") && ("number" === typeof e.myVersion ? n.myVersion = t.longs === String ? String(e.myVersion) : e.myVersion : n.myVersion = t.longs === String ? a.Long.prototype.toString.call(e.myVersion) : t.longs === Number ? new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0) : e.myVersion),
            e.starDepartmentIds && e.starDepartmentIds.length) {
                n.starDepartmentIds = [];
                for (var o = 0; o < e.starDepartmentIds.length; ++o)
                    n.starDepartmentIds[o] = e.starDepartmentIds[o]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpCompanyDepartment = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.departmentId = "",
        e.prototype.departmentName = "",
        e.prototype.parentDepartmentId = "",
        e.prototype.companyId = "",
        e.prototype.memberNumber = 0,
        e.prototype.orderId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.departmentId && e.hasOwnProperty("departmentId") && t.uint32(10).string(e.departmentId),
            null != e.departmentName && e.hasOwnProperty("departmentName") && t.uint32(18).string(e.departmentName),
            null != e.parentDepartmentId && e.hasOwnProperty("parentDepartmentId") && t.uint32(26).string(e.parentDepartmentId),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(34).string(e.companyId),
            null != e.memberNumber && e.hasOwnProperty("memberNumber") && t.uint32(40).uint32(e.memberNumber),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(48).int32(e.orderId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpCompanyDepartment;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.departmentId = e.string();
                    break;
                case 2:
                    r.departmentName = e.string();
                    break;
                case 3:
                    r.parentDepartmentId = e.string();
                    break;
                case 4:
                    r.companyId = e.string();
                    break;
                case 5:
                    r.memberNumber = e.uint32();
                    break;
                case 6:
                    r.orderId = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpCompanyDepartment)
                return e;
            var t = new s.HttpCompanyDepartment;
            return null != e.departmentId && (t.departmentId = String(e.departmentId)),
            null != e.departmentName && (t.departmentName = String(e.departmentName)),
            null != e.parentDepartmentId && (t.parentDepartmentId = String(e.parentDepartmentId)),
            null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.memberNumber && (t.memberNumber = e.memberNumber >>> 0),
            null != e.orderId && (t.orderId = 0 | e.orderId),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.departmentId = "",
            n.departmentName = "",
            n.parentDepartmentId = "",
            n.companyId = "",
            n.memberNumber = 0,
            n.orderId = 0),
            null != e.departmentId && e.hasOwnProperty("departmentId") && (n.departmentId = e.departmentId),
            null != e.departmentName && e.hasOwnProperty("departmentName") && (n.departmentName = e.departmentName),
            null != e.parentDepartmentId && e.hasOwnProperty("parentDepartmentId") && (n.parentDepartmentId = e.parentDepartmentId),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.memberNumber && e.hasOwnProperty("memberNumber") && (n.memberNumber = e.memberNumber),
            null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpCompanyMember = function() {
        function e(e) {
            if (this.departmentIds = [],
            this.orderIds = [],
            this.departmentLeaders = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.memberId = "",
        e.prototype.companyId = "",
        e.prototype.departmentIds = a.emptyArray,
        e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.memberName = "",
        e.prototype.position = "",
        e.prototype.gender = 0,
        e.prototype.avatarUrl = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.joined = !1,
        e.prototype.orderIds = a.emptyArray,
        e.prototype.departmentLeaders = a.emptyArray,
        e.prototype.disable = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.memberId && e.hasOwnProperty("memberId") && t.uint32(18).string(e.memberId),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(26).string(e.companyId),
            null != e.departmentIds && e.departmentIds.length)
                for (var n = 0; n < e.departmentIds.length; ++n)
                    t.uint32(34).string(e.departmentIds[n]);
            if (null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(42).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(50).string(e.email),
            null != e.memberName && e.hasOwnProperty("memberName") && t.uint32(58).string(e.memberName),
            null != e.position && e.hasOwnProperty("position") && t.uint32(66).string(e.position),
            null != e.gender && e.hasOwnProperty("gender") && t.uint32(72).int32(e.gender),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(82).string(e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(90).string(e.thumbAvatarUrl),
            null != e.joined && e.hasOwnProperty("joined") && t.uint32(96).bool(e.joined),
            null != e.orderIds && e.orderIds.length) {
                t.uint32(106).fork();
                for (n = 0; n < e.orderIds.length; ++n)
                    t.int32(e.orderIds[n]);
                t.ldelim()
            }
            if (null != e.departmentLeaders && e.departmentLeaders.length)
                for (n = 0; n < e.departmentLeaders.length; ++n)
                    t.uint32(114).string(e.departmentLeaders[n]);
            return null != e.disable && e.hasOwnProperty("disable") && t.uint32(120).bool(e.disable),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpCompanyMember;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.memberId = e.string();
                    break;
                case 3:
                    r.companyId = e.string();
                    break;
                case 4:
                    r.departmentIds && r.departmentIds.length || (r.departmentIds = []),
                    r.departmentIds.push(e.string());
                    break;
                case 5:
                    r.phoneNumber = e.string();
                    break;
                case 6:
                    r.email = e.string();
                    break;
                case 7:
                    r.memberName = e.string();
                    break;
                case 8:
                    r.position = e.string();
                    break;
                case 9:
                    r.gender = e.int32();
                    break;
                case 10:
                    r.avatarUrl = e.string();
                    break;
                case 11:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 12:
                    r.joined = e.bool();
                    break;
                case 13:
                    if (r.orderIds && r.orderIds.length || (r.orderIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.orderIds.push(e.int32())
                    } else
                        r.orderIds.push(e.int32());
                    break;
                case 14:
                    r.departmentLeaders && r.departmentLeaders.length || (r.departmentLeaders = []),
                    r.departmentLeaders.push(e.string());
                    break;
                case 15:
                    r.disable = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpCompanyMember)
                return e;
            var t = new s.HttpCompanyMember;
            if (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.memberId && (t.memberId = String(e.memberId)),
            null != e.companyId && (t.companyId = String(e.companyId)),
            e.departmentIds) {
                if (!Array.isArray(e.departmentIds))
                    throw TypeError(".HttpCompanyMember.departmentIds: array expected");
                t.departmentIds = [];
                for (var n = 0; n < e.departmentIds.length; ++n)
                    t.departmentIds[n] = String(e.departmentIds[n])
            }
            switch (null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.memberName && (t.memberName = String(e.memberName)),
            null != e.position && (t.position = String(e.position)),
            e.gender) {
            case "CommonUserGenderUndefined":
            case 0:
                t.gender = 0;
                break;
            case "CommonUserGenderMale":
            case 1:
                t.gender = 1;
                break;
            case "CommonUserGenderFemale":
            case 2:
                t.gender = 2;
                break
            }
            if (null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            null != e.joined && (t.joined = Boolean(e.joined)),
            e.orderIds) {
                if (!Array.isArray(e.orderIds))
                    throw TypeError(".HttpCompanyMember.orderIds: array expected");
                t.orderIds = [];
                for (n = 0; n < e.orderIds.length; ++n)
                    t.orderIds[n] = 0 | e.orderIds[n]
            }
            if (e.departmentLeaders) {
                if (!Array.isArray(e.departmentLeaders))
                    throw TypeError(".HttpCompanyMember.departmentLeaders: array expected");
                t.departmentLeaders = [];
                for (n = 0; n < e.departmentLeaders.length; ++n)
                    t.departmentLeaders[n] = String(e.departmentLeaders[n])
            }
            return null != e.disable && (t.disable = Boolean(e.disable)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.departmentIds = [],
            n.orderIds = [],
            n.departmentLeaders = []),
            t.defaults && (n.userId = 0,
            n.memberId = "",
            n.companyId = "",
            n.phoneNumber = "",
            n.email = "",
            n.memberName = "",
            n.position = "",
            n.gender = t.enums === String ? "CommonUserGenderUndefined" : 0,
            n.avatarUrl = "",
            n.thumbAvatarUrl = "",
            n.joined = !1,
            n.disable = !1),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.memberId && e.hasOwnProperty("memberId") && (n.memberId = e.memberId),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            e.departmentIds && e.departmentIds.length) {
                n.departmentIds = [];
                for (var r = 0; r < e.departmentIds.length; ++r)
                    n.departmentIds[r] = e.departmentIds[r]
            }
            if (null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.memberName && e.hasOwnProperty("memberName") && (n.memberName = e.memberName),
            null != e.position && e.hasOwnProperty("position") && (n.position = e.position),
            null != e.gender && e.hasOwnProperty("gender") && (n.gender = t.enums === String ? s.CommonUserGender[e.gender] : e.gender),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.joined && e.hasOwnProperty("joined") && (n.joined = e.joined),
            e.orderIds && e.orderIds.length) {
                n.orderIds = [];
                for (r = 0; r < e.orderIds.length; ++r)
                    n.orderIds[r] = e.orderIds[r]
            }
            if (e.departmentLeaders && e.departmentLeaders.length) {
                n.departmentLeaders = [];
                for (r = 0; r < e.departmentLeaders.length; ++r)
                    n.departmentLeaders[r] = e.departmentLeaders[r]
            }
            return null != e.disable && e.hasOwnProperty("disable") && (n.disable = e.disable),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupAllInfo = function() {
        function e(e) {
            if (this.groupMembers = [],
            this.groupCompanyInfos = [],
            this.livePptItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.group = null,
        e.prototype.groupMembers = a.emptyArray,
        e.prototype.groupCompanyInfos = a.emptyArray,
        e.prototype.liveCourse = null,
        e.prototype.liveRoom = null,
        e.prototype.livePptItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.group && e.hasOwnProperty("group") && s.HttpGroup.encode(e.group, t.uint32(10).fork()).ldelim(),
            null != e.groupMembers && e.groupMembers.length)
                for (var n = 0; n < e.groupMembers.length; ++n)
                    s.HttpGroupMember.encode(e.groupMembers[n], t.uint32(18).fork()).ldelim();
            if (null != e.groupCompanyInfos && e.groupCompanyInfos.length)
                for (n = 0; n < e.groupCompanyInfos.length; ++n)
                    s.HttpGroupCompanyInfo.encode(e.groupCompanyInfos[n], t.uint32(26).fork()).ldelim();
            if (null != e.liveCourse && e.hasOwnProperty("liveCourse") && s.HttpLiveCourse.encode(e.liveCourse, t.uint32(34).fork()).ldelim(),
            null != e.liveRoom && e.hasOwnProperty("liveRoom") && s.HttpLiveRoom.encode(e.liveRoom, t.uint32(42).fork()).ldelim(),
            null != e.livePptItems && e.livePptItems.length)
                for (n = 0; n < e.livePptItems.length; ++n)
                    s.HttpLivePpt.encode(e.livePptItems[n], t.uint32(50).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupAllInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.group = s.HttpGroup.decode(e, e.uint32());
                    break;
                case 2:
                    r.groupMembers && r.groupMembers.length || (r.groupMembers = []),
                    r.groupMembers.push(s.HttpGroupMember.decode(e, e.uint32()));
                    break;
                case 3:
                    r.groupCompanyInfos && r.groupCompanyInfos.length || (r.groupCompanyInfos = []),
                    r.groupCompanyInfos.push(s.HttpGroupCompanyInfo.decode(e, e.uint32()));
                    break;
                case 4:
                    r.liveCourse = s.HttpLiveCourse.decode(e, e.uint32());
                    break;
                case 5:
                    r.liveRoom = s.HttpLiveRoom.decode(e, e.uint32());
                    break;
                case 6:
                    r.livePptItems && r.livePptItems.length || (r.livePptItems = []),
                    r.livePptItems.push(s.HttpLivePpt.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupAllInfo)
                return e;
            var t = new s.HttpGroupAllInfo;
            if (null != e.group) {
                if ("object" !== typeof e.group)
                    throw TypeError(".HttpGroupAllInfo.group: object expected");
                t.group = s.HttpGroup.fromObject(e.group)
            }
            if (e.groupMembers) {
                if (!Array.isArray(e.groupMembers))
                    throw TypeError(".HttpGroupAllInfo.groupMembers: array expected");
                t.groupMembers = [];
                for (var n = 0; n < e.groupMembers.length; ++n) {
                    if ("object" !== typeof e.groupMembers[n])
                        throw TypeError(".HttpGroupAllInfo.groupMembers: object expected");
                    t.groupMembers[n] = s.HttpGroupMember.fromObject(e.groupMembers[n])
                }
            }
            if (e.groupCompanyInfos) {
                if (!Array.isArray(e.groupCompanyInfos))
                    throw TypeError(".HttpGroupAllInfo.groupCompanyInfos: array expected");
                t.groupCompanyInfos = [];
                for (n = 0; n < e.groupCompanyInfos.length; ++n) {
                    if ("object" !== typeof e.groupCompanyInfos[n])
                        throw TypeError(".HttpGroupAllInfo.groupCompanyInfos: object expected");
                    t.groupCompanyInfos[n] = s.HttpGroupCompanyInfo.fromObject(e.groupCompanyInfos[n])
                }
            }
            if (null != e.liveCourse) {
                if ("object" !== typeof e.liveCourse)
                    throw TypeError(".HttpGroupAllInfo.liveCourse: object expected");
                t.liveCourse = s.HttpLiveCourse.fromObject(e.liveCourse)
            }
            if (null != e.liveRoom) {
                if ("object" !== typeof e.liveRoom)
                    throw TypeError(".HttpGroupAllInfo.liveRoom: object expected");
                t.liveRoom = s.HttpLiveRoom.fromObject(e.liveRoom)
            }
            if (e.livePptItems) {
                if (!Array.isArray(e.livePptItems))
                    throw TypeError(".HttpGroupAllInfo.livePptItems: array expected");
                t.livePptItems = [];
                for (n = 0; n < e.livePptItems.length; ++n) {
                    if ("object" !== typeof e.livePptItems[n])
                        throw TypeError(".HttpGroupAllInfo.livePptItems: object expected");
                    t.livePptItems[n] = s.HttpLivePpt.fromObject(e.livePptItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupMembers = [],
            n.groupCompanyInfos = [],
            n.livePptItems = []),
            t.defaults && (n.group = null,
            n.liveCourse = null,
            n.liveRoom = null),
            null != e.group && e.hasOwnProperty("group") && (n.group = s.HttpGroup.toObject(e.group, t)),
            e.groupMembers && e.groupMembers.length) {
                n.groupMembers = [];
                for (var r = 0; r < e.groupMembers.length; ++r)
                    n.groupMembers[r] = s.HttpGroupMember.toObject(e.groupMembers[r], t)
            }
            if (e.groupCompanyInfos && e.groupCompanyInfos.length) {
                n.groupCompanyInfos = [];
                for (r = 0; r < e.groupCompanyInfos.length; ++r)
                    n.groupCompanyInfos[r] = s.HttpGroupCompanyInfo.toObject(e.groupCompanyInfos[r], t)
            }
            if (null != e.liveCourse && e.hasOwnProperty("liveCourse") && (n.liveCourse = s.HttpLiveCourse.toObject(e.liveCourse, t)),
            null != e.liveRoom && e.hasOwnProperty("liveRoom") && (n.liveRoom = s.HttpLiveRoom.toObject(e.liveRoom, t)),
            e.livePptItems && e.livePptItems.length) {
                n.livePptItems = [];
                for (r = 0; r < e.livePptItems.length; ++r)
                    n.livePptItems[r] = s.HttpLivePpt.toObject(e.livePptItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupCompanyInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.companyId = "",
        e.prototype.companyName = "",
        e.prototype.companyAvatarUrl = "",
        e.prototype.departmentId = "",
        e.prototype.departmentName = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(18).string(e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && t.uint32(26).string(e.companyName),
            null != e.companyAvatarUrl && e.hasOwnProperty("companyAvatarUrl") && t.uint32(34).string(e.companyAvatarUrl),
            null != e.departmentId && e.hasOwnProperty("departmentId") && t.uint32(42).string(e.departmentId),
            null != e.departmentName && e.hasOwnProperty("departmentName") && t.uint32(50).string(e.departmentName),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(56).uint64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupCompanyInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.companyId = e.string();
                    break;
                case 3:
                    r.companyName = e.string();
                    break;
                case 4:
                    r.companyAvatarUrl = e.string();
                    break;
                case 5:
                    r.departmentId = e.string();
                    break;
                case 6:
                    r.departmentName = e.string();
                    break;
                case 7:
                    r.timestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupCompanyInfo)
                return e;
            var t = new s.HttpGroupCompanyInfo;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.companyName && (t.companyName = String(e.companyName)),
            null != e.companyAvatarUrl && (t.companyAvatarUrl = String(e.companyAvatarUrl)),
            null != e.departmentId && (t.departmentId = String(e.departmentId)),
            null != e.departmentName && (t.departmentName = String(e.departmentName)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                n.companyId = "",
                n.companyName = "",
                n.companyAvatarUrl = "",
                n.departmentId = "",
                n.departmentName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && (n.companyName = e.companyName),
            null != e.companyAvatarUrl && e.hasOwnProperty("companyAvatarUrl") && (n.companyAvatarUrl = e.companyAvatarUrl),
            null != e.departmentId && e.hasOwnProperty("departmentId") && (n.departmentId = e.departmentId),
            null != e.departmentName && e.hasOwnProperty("departmentName") && (n.departmentName = e.departmentName),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupDepartment = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.departmentId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.departmentId && e.hasOwnProperty("departmentId") && t.uint32(18).string(e.departmentId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupDepartment;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.departmentId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupDepartment)
                return e;
            var t = new s.HttpGroupDepartment;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.departmentId && (t.departmentId = String(e.departmentId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = "",
            n.departmentId = ""),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.departmentId && e.hasOwnProperty("departmentId") && (n.departmentId = e.departmentId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroup = function() {
        function e(e) {
            if (this.adminMemberIds = [],
            this.blackList = [],
            this.whiteList = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.groupName = "",
        e.prototype.ownerId = 0,
        e.prototype.avatarUrl = "",
        e.prototype.groupNotice = "",
        e.prototype.groupNoticeUpdateTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupNoticeUpdateUserId = 0,
        e.prototype.invitationVerification = !1,
        e.prototype.everyoneAddRobot = !1,
        e.prototype.everyoneBindTable = !1,
        e.prototype.memberCount = 0,
        e.prototype.robotCount = 0,
        e.prototype.myAlias = "",
        e.prototype.top = !1,
        e.prototype.muteNotifications = !1,
        e.prototype.star = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.myVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.avatarVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.isPrivate = !1,
        e.prototype.privateCountDown = 0,
        e.prototype.everyoneSendRemindMessage = !1,
        e.prototype.privacyProtect = !1,
        e.prototype.canGetHistoryBeforeJoinedTimestamp = !1,
        e.prototype.topMessage = null,
        e.prototype.processingInviteCount = 0,
        e.prototype.topMessageTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.adminMemberIds = a.emptyArray,
        e.prototype.everyoneSendMessage = !1,
        e.prototype.notAllowAddFriend = !1,
        e.prototype.blackList = a.emptyArray,
        e.prototype.whiteList = a.emptyArray,
        e.prototype.groupType = 0,
        e.prototype.companyId = "",
        e.prototype.departmentId = "",
        e.prototype.qrcodeStatus = !1,
        e.prototype.qrcodeExpiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.isInBlackList = !1,
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.groupName && e.hasOwnProperty("groupName") && t.uint32(18).string(e.groupName),
            null != e.ownerId && e.hasOwnProperty("ownerId") && t.uint32(24).uint32(e.ownerId),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(34).string(e.avatarUrl),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && t.uint32(42).string(e.groupNotice),
            null != e.groupNoticeUpdateTimestamp && e.hasOwnProperty("groupNoticeUpdateTimestamp") && t.uint32(48).uint64(e.groupNoticeUpdateTimestamp),
            null != e.groupNoticeUpdateUserId && e.hasOwnProperty("groupNoticeUpdateUserId") && t.uint32(56).uint32(e.groupNoticeUpdateUserId),
            null != e.invitationVerification && e.hasOwnProperty("invitationVerification") && t.uint32(64).bool(e.invitationVerification),
            null != e.everyoneAddRobot && e.hasOwnProperty("everyoneAddRobot") && t.uint32(72).bool(e.everyoneAddRobot),
            null != e.everyoneBindTable && e.hasOwnProperty("everyoneBindTable") && t.uint32(80).bool(e.everyoneBindTable),
            null != e.memberCount && e.hasOwnProperty("memberCount") && t.uint32(88).uint32(e.memberCount),
            null != e.robotCount && e.hasOwnProperty("robotCount") && t.uint32(96).uint32(e.robotCount),
            null != e.myAlias && e.hasOwnProperty("myAlias") && t.uint32(106).string(e.myAlias),
            null != e.top && e.hasOwnProperty("top") && t.uint32(112).bool(e.top),
            null != e.muteNotifications && e.hasOwnProperty("muteNotifications") && t.uint32(120).bool(e.muteNotifications),
            null != e.star && e.hasOwnProperty("star") && t.uint32(128).bool(e.star),
            null != e.version && e.hasOwnProperty("version") && t.uint32(136).uint64(e.version),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(144).uint64(e.memberVersion),
            null != e.myVersion && e.hasOwnProperty("myVersion") && t.uint32(152).uint64(e.myVersion),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && t.uint32(160).uint64(e.avatarVersion),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && t.uint32(168).bool(e.isPrivate),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && t.uint32(176).uint32(e.privateCountDown),
            null != e.everyoneSendRemindMessage && e.hasOwnProperty("everyoneSendRemindMessage") && t.uint32(184).bool(e.everyoneSendRemindMessage),
            null != e.privacyProtect && e.hasOwnProperty("privacyProtect") && t.uint32(192).bool(e.privacyProtect),
            null != e.canGetHistoryBeforeJoinedTimestamp && e.hasOwnProperty("canGetHistoryBeforeJoinedTimestamp") && t.uint32(200).bool(e.canGetHistoryBeforeJoinedTimestamp),
            null != e.topMessage && e.hasOwnProperty("topMessage") && s.CommonMessage.encode(e.topMessage, t.uint32(210).fork()).ldelim(),
            null != e.processingInviteCount && e.hasOwnProperty("processingInviteCount") && t.uint32(216).uint32(e.processingInviteCount),
            null != e.topMessageTimestamp && e.hasOwnProperty("topMessageTimestamp") && t.uint32(224).uint64(e.topMessageTimestamp),
            null != e.adminMemberIds && e.adminMemberIds.length) {
                t.uint32(234).fork();
                for (var n = 0; n < e.adminMemberIds.length; ++n)
                    t.uint32(e.adminMemberIds[n]);
                t.ldelim()
            }
            if (null != e.everyoneSendMessage && e.hasOwnProperty("everyoneSendMessage") && t.uint32(240).bool(e.everyoneSendMessage),
            null != e.notAllowAddFriend && e.hasOwnProperty("notAllowAddFriend") && t.uint32(248).bool(e.notAllowAddFriend),
            null != e.blackList && e.blackList.length) {
                t.uint32(258).fork();
                for (n = 0; n < e.blackList.length; ++n)
                    t.uint32(e.blackList[n]);
                t.ldelim()
            }
            if (null != e.whiteList && e.whiteList.length) {
                t.uint32(266).fork();
                for (n = 0; n < e.whiteList.length; ++n)
                    t.uint32(e.whiteList[n]);
                t.ldelim()
            }
            return null != e.groupType && e.hasOwnProperty("groupType") && t.uint32(272).int32(e.groupType),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(282).string(e.companyId),
            null != e.departmentId && e.hasOwnProperty("departmentId") && t.uint32(290).string(e.departmentId),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && t.uint32(296).bool(e.qrcodeStatus),
            null != e.qrcodeExpiredTimestamp && e.hasOwnProperty("qrcodeExpiredTimestamp") && t.uint32(304).uint64(e.qrcodeExpiredTimestamp),
            null != e.isInBlackList && e.hasOwnProperty("isInBlackList") && t.uint32(312).bool(e.isInBlackList),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(320).uint64(e.liveVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.groupName = e.string();
                    break;
                case 3:
                    r.ownerId = e.uint32();
                    break;
                case 4:
                    r.avatarUrl = e.string();
                    break;
                case 5:
                    r.groupNotice = e.string();
                    break;
                case 6:
                    r.groupNoticeUpdateTimestamp = e.uint64();
                    break;
                case 7:
                    r.groupNoticeUpdateUserId = e.uint32();
                    break;
                case 8:
                    r.invitationVerification = e.bool();
                    break;
                case 9:
                    r.everyoneAddRobot = e.bool();
                    break;
                case 10:
                    r.everyoneBindTable = e.bool();
                    break;
                case 11:
                    r.memberCount = e.uint32();
                    break;
                case 12:
                    r.robotCount = e.uint32();
                    break;
                case 13:
                    r.myAlias = e.string();
                    break;
                case 14:
                    r.top = e.bool();
                    break;
                case 15:
                    r.muteNotifications = e.bool();
                    break;
                case 16:
                    r.star = e.bool();
                    break;
                case 17:
                    r.version = e.uint64();
                    break;
                case 18:
                    r.memberVersion = e.uint64();
                    break;
                case 19:
                    r.myVersion = e.uint64();
                    break;
                case 20:
                    r.avatarVersion = e.uint64();
                    break;
                case 21:
                    r.isPrivate = e.bool();
                    break;
                case 22:
                    r.privateCountDown = e.uint32();
                    break;
                case 23:
                    r.everyoneSendRemindMessage = e.bool();
                    break;
                case 24:
                    r.privacyProtect = e.bool();
                    break;
                case 25:
                    r.canGetHistoryBeforeJoinedTimestamp = e.bool();
                    break;
                case 26:
                    r.topMessage = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 27:
                    r.processingInviteCount = e.uint32();
                    break;
                case 28:
                    r.topMessageTimestamp = e.uint64();
                    break;
                case 29:
                    if (r.adminMemberIds && r.adminMemberIds.length || (r.adminMemberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.adminMemberIds.push(e.uint32())
                    } else
                        r.adminMemberIds.push(e.uint32());
                    break;
                case 30:
                    r.everyoneSendMessage = e.bool();
                    break;
                case 31:
                    r.notAllowAddFriend = e.bool();
                    break;
                case 32:
                    if (r.blackList && r.blackList.length || (r.blackList = []),
                    2 === (7 & i)) {
                        a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.blackList.push(e.uint32())
                    } else
                        r.blackList.push(e.uint32());
                    break;
                case 33:
                    if (r.whiteList && r.whiteList.length || (r.whiteList = []),
                    2 === (7 & i)) {
                        a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.whiteList.push(e.uint32())
                    } else
                        r.whiteList.push(e.uint32());
                    break;
                case 34:
                    r.groupType = e.int32();
                    break;
                case 35:
                    r.companyId = e.string();
                    break;
                case 36:
                    r.departmentId = e.string();
                    break;
                case 37:
                    r.qrcodeStatus = e.bool();
                    break;
                case 38:
                    r.qrcodeExpiredTimestamp = e.uint64();
                    break;
                case 39:
                    r.isInBlackList = e.bool();
                    break;
                case 40:
                    r.liveVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroup)
                return e;
            var t = new s.HttpGroup;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.groupName && (t.groupName = String(e.groupName)),
            null != e.ownerId && (t.ownerId = e.ownerId >>> 0),
            null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.groupNotice && (t.groupNotice = String(e.groupNotice)),
            null != e.groupNoticeUpdateTimestamp && (a.Long ? (t.groupNoticeUpdateTimestamp = a.Long.fromValue(e.groupNoticeUpdateTimestamp)).unsigned = !0 : "string" === typeof e.groupNoticeUpdateTimestamp ? t.groupNoticeUpdateTimestamp = parseInt(e.groupNoticeUpdateTimestamp, 10) : "number" === typeof e.groupNoticeUpdateTimestamp ? t.groupNoticeUpdateTimestamp = e.groupNoticeUpdateTimestamp : "object" === typeof e.groupNoticeUpdateTimestamp && (t.groupNoticeUpdateTimestamp = new a.LongBits(e.groupNoticeUpdateTimestamp.low >>> 0,e.groupNoticeUpdateTimestamp.high >>> 0).toNumber(!0))),
            null != e.groupNoticeUpdateUserId && (t.groupNoticeUpdateUserId = e.groupNoticeUpdateUserId >>> 0),
            null != e.invitationVerification && (t.invitationVerification = Boolean(e.invitationVerification)),
            null != e.everyoneAddRobot && (t.everyoneAddRobot = Boolean(e.everyoneAddRobot)),
            null != e.everyoneBindTable && (t.everyoneBindTable = Boolean(e.everyoneBindTable)),
            null != e.memberCount && (t.memberCount = e.memberCount >>> 0),
            null != e.robotCount && (t.robotCount = e.robotCount >>> 0),
            null != e.myAlias && (t.myAlias = String(e.myAlias)),
            null != e.top && (t.top = Boolean(e.top)),
            null != e.muteNotifications && (t.muteNotifications = Boolean(e.muteNotifications)),
            null != e.star && (t.star = Boolean(e.star)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            null != e.myVersion && (a.Long ? (t.myVersion = a.Long.fromValue(e.myVersion)).unsigned = !0 : "string" === typeof e.myVersion ? t.myVersion = parseInt(e.myVersion, 10) : "number" === typeof e.myVersion ? t.myVersion = e.myVersion : "object" === typeof e.myVersion && (t.myVersion = new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0))),
            null != e.avatarVersion && (a.Long ? (t.avatarVersion = a.Long.fromValue(e.avatarVersion)).unsigned = !0 : "string" === typeof e.avatarVersion ? t.avatarVersion = parseInt(e.avatarVersion, 10) : "number" === typeof e.avatarVersion ? t.avatarVersion = e.avatarVersion : "object" === typeof e.avatarVersion && (t.avatarVersion = new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0))),
            null != e.isPrivate && (t.isPrivate = Boolean(e.isPrivate)),
            null != e.privateCountDown && (t.privateCountDown = e.privateCountDown >>> 0),
            null != e.everyoneSendRemindMessage && (t.everyoneSendRemindMessage = Boolean(e.everyoneSendRemindMessage)),
            null != e.privacyProtect && (t.privacyProtect = Boolean(e.privacyProtect)),
            null != e.canGetHistoryBeforeJoinedTimestamp && (t.canGetHistoryBeforeJoinedTimestamp = Boolean(e.canGetHistoryBeforeJoinedTimestamp)),
            null != e.topMessage) {
                if ("object" !== typeof e.topMessage)
                    throw TypeError(".HttpGroup.topMessage: object expected");
                t.topMessage = s.CommonMessage.fromObject(e.topMessage)
            }
            if (null != e.processingInviteCount && (t.processingInviteCount = e.processingInviteCount >>> 0),
            null != e.topMessageTimestamp && (a.Long ? (t.topMessageTimestamp = a.Long.fromValue(e.topMessageTimestamp)).unsigned = !0 : "string" === typeof e.topMessageTimestamp ? t.topMessageTimestamp = parseInt(e.topMessageTimestamp, 10) : "number" === typeof e.topMessageTimestamp ? t.topMessageTimestamp = e.topMessageTimestamp : "object" === typeof e.topMessageTimestamp && (t.topMessageTimestamp = new a.LongBits(e.topMessageTimestamp.low >>> 0,e.topMessageTimestamp.high >>> 0).toNumber(!0))),
            e.adminMemberIds) {
                if (!Array.isArray(e.adminMemberIds))
                    throw TypeError(".HttpGroup.adminMemberIds: array expected");
                t.adminMemberIds = [];
                for (var n = 0; n < e.adminMemberIds.length; ++n)
                    t.adminMemberIds[n] = e.adminMemberIds[n] >>> 0
            }
            if (null != e.everyoneSendMessage && (t.everyoneSendMessage = Boolean(e.everyoneSendMessage)),
            null != e.notAllowAddFriend && (t.notAllowAddFriend = Boolean(e.notAllowAddFriend)),
            e.blackList) {
                if (!Array.isArray(e.blackList))
                    throw TypeError(".HttpGroup.blackList: array expected");
                t.blackList = [];
                for (n = 0; n < e.blackList.length; ++n)
                    t.blackList[n] = e.blackList[n] >>> 0
            }
            if (e.whiteList) {
                if (!Array.isArray(e.whiteList))
                    throw TypeError(".HttpGroup.whiteList: array expected");
                t.whiteList = [];
                for (n = 0; n < e.whiteList.length; ++n)
                    t.whiteList[n] = e.whiteList[n] >>> 0
            }
            switch (e.groupType) {
            case "CommonGroupTypeUndefined":
            case 0:
                t.groupType = 0;
                break;
            case "CommonGroupTypeGeneral":
            case 1:
                t.groupType = 1;
                break;
            case "CommonGroupTypeCompany":
            case 2:
                t.groupType = 2;
                break;
            case "CommonGroupTypeDepartment":
            case 3:
                t.groupType = 3;
                break;
            case "CommonGroupTypeLive":
            case 4:
                t.groupType = 4;
                break
            }
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.departmentId && (t.departmentId = String(e.departmentId)),
            null != e.qrcodeStatus && (t.qrcodeStatus = Boolean(e.qrcodeStatus)),
            null != e.qrcodeExpiredTimestamp && (a.Long ? (t.qrcodeExpiredTimestamp = a.Long.fromValue(e.qrcodeExpiredTimestamp)).unsigned = !0 : "string" === typeof e.qrcodeExpiredTimestamp ? t.qrcodeExpiredTimestamp = parseInt(e.qrcodeExpiredTimestamp, 10) : "number" === typeof e.qrcodeExpiredTimestamp ? t.qrcodeExpiredTimestamp = e.qrcodeExpiredTimestamp : "object" === typeof e.qrcodeExpiredTimestamp && (t.qrcodeExpiredTimestamp = new a.LongBits(e.qrcodeExpiredTimestamp.low >>> 0,e.qrcodeExpiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.isInBlackList && (t.isInBlackList = Boolean(e.isInBlackList)),
            null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.adminMemberIds = [],
            n.blackList = [],
            n.whiteList = []),
            t.defaults) {
                if (n.groupId = 0,
                n.groupName = "",
                n.ownerId = 0,
                n.avatarUrl = "",
                n.groupNotice = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.groupNoticeUpdateTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.groupNoticeUpdateTimestamp = t.longs === String ? "0" : 0;
                if (n.groupNoticeUpdateUserId = 0,
                n.invitationVerification = !1,
                n.everyoneAddRobot = !1,
                n.everyoneBindTable = !1,
                n.memberCount = 0,
                n.robotCount = 0,
                n.myAlias = "",
                n.top = !1,
                n.muteNotifications = !1,
                n.star = !1,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.myVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.myVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.avatarVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.avatarVersion = t.longs === String ? "0" : 0;
                if (n.isPrivate = !1,
                n.privateCountDown = 0,
                n.everyoneSendRemindMessage = !1,
                n.privacyProtect = !1,
                n.canGetHistoryBeforeJoinedTimestamp = !1,
                n.topMessage = null,
                n.processingInviteCount = 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.topMessageTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.topMessageTimestamp = t.longs === String ? "0" : 0;
                if (n.everyoneSendMessage = !1,
                n.notAllowAddFriend = !1,
                n.groupType = t.enums === String ? "CommonGroupTypeUndefined" : 0,
                n.companyId = "",
                n.departmentId = "",
                n.qrcodeStatus = !1,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.qrcodeExpiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.qrcodeExpiredTimestamp = t.longs === String ? "0" : 0;
                if (n.isInBlackList = !1,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0
            }
            if (null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.groupName && e.hasOwnProperty("groupName") && (n.groupName = e.groupName),
            null != e.ownerId && e.hasOwnProperty("ownerId") && (n.ownerId = e.ownerId),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && (n.groupNotice = e.groupNotice),
            null != e.groupNoticeUpdateTimestamp && e.hasOwnProperty("groupNoticeUpdateTimestamp") && ("number" === typeof e.groupNoticeUpdateTimestamp ? n.groupNoticeUpdateTimestamp = t.longs === String ? String(e.groupNoticeUpdateTimestamp) : e.groupNoticeUpdateTimestamp : n.groupNoticeUpdateTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.groupNoticeUpdateTimestamp) : t.longs === Number ? new a.LongBits(e.groupNoticeUpdateTimestamp.low >>> 0,e.groupNoticeUpdateTimestamp.high >>> 0).toNumber(!0) : e.groupNoticeUpdateTimestamp),
            null != e.groupNoticeUpdateUserId && e.hasOwnProperty("groupNoticeUpdateUserId") && (n.groupNoticeUpdateUserId = e.groupNoticeUpdateUserId),
            null != e.invitationVerification && e.hasOwnProperty("invitationVerification") && (n.invitationVerification = e.invitationVerification),
            null != e.everyoneAddRobot && e.hasOwnProperty("everyoneAddRobot") && (n.everyoneAddRobot = e.everyoneAddRobot),
            null != e.everyoneBindTable && e.hasOwnProperty("everyoneBindTable") && (n.everyoneBindTable = e.everyoneBindTable),
            null != e.memberCount && e.hasOwnProperty("memberCount") && (n.memberCount = e.memberCount),
            null != e.robotCount && e.hasOwnProperty("robotCount") && (n.robotCount = e.robotCount),
            null != e.myAlias && e.hasOwnProperty("myAlias") && (n.myAlias = e.myAlias),
            null != e.top && e.hasOwnProperty("top") && (n.top = e.top),
            null != e.muteNotifications && e.hasOwnProperty("muteNotifications") && (n.muteNotifications = e.muteNotifications),
            null != e.star && e.hasOwnProperty("star") && (n.star = e.star),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            null != e.myVersion && e.hasOwnProperty("myVersion") && ("number" === typeof e.myVersion ? n.myVersion = t.longs === String ? String(e.myVersion) : e.myVersion : n.myVersion = t.longs === String ? a.Long.prototype.toString.call(e.myVersion) : t.longs === Number ? new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0) : e.myVersion),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && ("number" === typeof e.avatarVersion ? n.avatarVersion = t.longs === String ? String(e.avatarVersion) : e.avatarVersion : n.avatarVersion = t.longs === String ? a.Long.prototype.toString.call(e.avatarVersion) : t.longs === Number ? new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0) : e.avatarVersion),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && (n.isPrivate = e.isPrivate),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && (n.privateCountDown = e.privateCountDown),
            null != e.everyoneSendRemindMessage && e.hasOwnProperty("everyoneSendRemindMessage") && (n.everyoneSendRemindMessage = e.everyoneSendRemindMessage),
            null != e.privacyProtect && e.hasOwnProperty("privacyProtect") && (n.privacyProtect = e.privacyProtect),
            null != e.canGetHistoryBeforeJoinedTimestamp && e.hasOwnProperty("canGetHistoryBeforeJoinedTimestamp") && (n.canGetHistoryBeforeJoinedTimestamp = e.canGetHistoryBeforeJoinedTimestamp),
            null != e.topMessage && e.hasOwnProperty("topMessage") && (n.topMessage = s.CommonMessage.toObject(e.topMessage, t)),
            null != e.processingInviteCount && e.hasOwnProperty("processingInviteCount") && (n.processingInviteCount = e.processingInviteCount),
            null != e.topMessageTimestamp && e.hasOwnProperty("topMessageTimestamp") && ("number" === typeof e.topMessageTimestamp ? n.topMessageTimestamp = t.longs === String ? String(e.topMessageTimestamp) : e.topMessageTimestamp : n.topMessageTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.topMessageTimestamp) : t.longs === Number ? new a.LongBits(e.topMessageTimestamp.low >>> 0,e.topMessageTimestamp.high >>> 0).toNumber(!0) : e.topMessageTimestamp),
            e.adminMemberIds && e.adminMemberIds.length) {
                n.adminMemberIds = [];
                for (var o = 0; o < e.adminMemberIds.length; ++o)
                    n.adminMemberIds[o] = e.adminMemberIds[o]
            }
            if (null != e.everyoneSendMessage && e.hasOwnProperty("everyoneSendMessage") && (n.everyoneSendMessage = e.everyoneSendMessage),
            null != e.notAllowAddFriend && e.hasOwnProperty("notAllowAddFriend") && (n.notAllowAddFriend = e.notAllowAddFriend),
            e.blackList && e.blackList.length) {
                n.blackList = [];
                for (o = 0; o < e.blackList.length; ++o)
                    n.blackList[o] = e.blackList[o]
            }
            if (e.whiteList && e.whiteList.length) {
                n.whiteList = [];
                for (o = 0; o < e.whiteList.length; ++o)
                    n.whiteList[o] = e.whiteList[o]
            }
            return null != e.groupType && e.hasOwnProperty("groupType") && (n.groupType = t.enums === String ? s.CommonGroupType[e.groupType] : e.groupType),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.departmentId && e.hasOwnProperty("departmentId") && (n.departmentId = e.departmentId),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && (n.qrcodeStatus = e.qrcodeStatus),
            null != e.qrcodeExpiredTimestamp && e.hasOwnProperty("qrcodeExpiredTimestamp") && ("number" === typeof e.qrcodeExpiredTimestamp ? n.qrcodeExpiredTimestamp = t.longs === String ? String(e.qrcodeExpiredTimestamp) : e.qrcodeExpiredTimestamp : n.qrcodeExpiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.qrcodeExpiredTimestamp) : t.longs === Number ? new a.LongBits(e.qrcodeExpiredTimestamp.low >>> 0,e.qrcodeExpiredTimestamp.high >>> 0).toNumber(!0) : e.qrcodeExpiredTimestamp),
            null != e.isInBlackList && e.hasOwnProperty("isInBlackList") && (n.isInBlackList = e.isInBlackList),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupMember = function() {
        function e(e) {
            if (this.departments = [],
            this.departmentLeaders = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.groupMemberType = 0,
        e.prototype.name = "",
        e.prototype.alias = "",
        e.prototype.joinTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.robotExtension = null,
        e.prototype.joined = !1,
        e.prototype.existSingleJoined = !1,
        e.prototype.departments = a.emptyArray,
        e.prototype.departmentLeaders = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.groupMemberType && e.hasOwnProperty("groupMemberType") && t.uint32(16).int32(e.groupMemberType),
            null != e.name && e.hasOwnProperty("name") && t.uint32(26).string(e.name),
            null != e.alias && e.hasOwnProperty("alias") && t.uint32(34).string(e.alias),
            null != e.joinTimestamp && e.hasOwnProperty("joinTimestamp") && t.uint32(40).uint64(e.joinTimestamp),
            null != e.robotExtension && e.hasOwnProperty("robotExtension") && s.HttpGroupRobotExtension.encode(e.robotExtension, t.uint32(50).fork()).ldelim(),
            null != e.joined && e.hasOwnProperty("joined") && t.uint32(56).bool(e.joined),
            null != e.existSingleJoined && e.hasOwnProperty("existSingleJoined") && t.uint32(64).bool(e.existSingleJoined),
            null != e.departments && e.departments.length)
                for (var n = 0; n < e.departments.length; ++n)
                    s.HttpGroupDepartment.encode(e.departments[n], t.uint32(74).fork()).ldelim();
            if (null != e.departmentLeaders && e.departmentLeaders.length)
                for (n = 0; n < e.departmentLeaders.length; ++n)
                    s.HttpGroupDepartment.encode(e.departmentLeaders[n], t.uint32(82).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupMember;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.groupMemberType = e.int32();
                    break;
                case 3:
                    r.name = e.string();
                    break;
                case 4:
                    r.alias = e.string();
                    break;
                case 5:
                    r.joinTimestamp = e.uint64();
                    break;
                case 6:
                    r.robotExtension = s.HttpGroupRobotExtension.decode(e, e.uint32());
                    break;
                case 7:
                    r.joined = e.bool();
                    break;
                case 8:
                    r.existSingleJoined = e.bool();
                    break;
                case 9:
                    r.departments && r.departments.length || (r.departments = []),
                    r.departments.push(s.HttpGroupDepartment.decode(e, e.uint32()));
                    break;
                case 10:
                    r.departmentLeaders && r.departmentLeaders.length || (r.departmentLeaders = []),
                    r.departmentLeaders.push(s.HttpGroupDepartment.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupMember)
                return e;
            var t = new s.HttpGroupMember;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.groupMemberType) {
            case "CommonGroupMemberTypeNormalUser":
            case 0:
                t.groupMemberType = 0;
                break;
            case "CommonGroupMemberTypeRobot":
            case 1:
                t.groupMemberType = 1;
                break;
            case "CommonGroupMemberTypeDepartment":
            case 2:
                t.groupMemberType = 2;
                break
            }
            if (null != e.name && (t.name = String(e.name)),
            null != e.alias && (t.alias = String(e.alias)),
            null != e.joinTimestamp && (a.Long ? (t.joinTimestamp = a.Long.fromValue(e.joinTimestamp)).unsigned = !0 : "string" === typeof e.joinTimestamp ? t.joinTimestamp = parseInt(e.joinTimestamp, 10) : "number" === typeof e.joinTimestamp ? t.joinTimestamp = e.joinTimestamp : "object" === typeof e.joinTimestamp && (t.joinTimestamp = new a.LongBits(e.joinTimestamp.low >>> 0,e.joinTimestamp.high >>> 0).toNumber(!0))),
            null != e.robotExtension) {
                if ("object" !== typeof e.robotExtension)
                    throw TypeError(".HttpGroupMember.robotExtension: object expected");
                t.robotExtension = s.HttpGroupRobotExtension.fromObject(e.robotExtension)
            }
            if (null != e.joined && (t.joined = Boolean(e.joined)),
            null != e.existSingleJoined && (t.existSingleJoined = Boolean(e.existSingleJoined)),
            e.departments) {
                if (!Array.isArray(e.departments))
                    throw TypeError(".HttpGroupMember.departments: array expected");
                t.departments = [];
                for (var n = 0; n < e.departments.length; ++n) {
                    if ("object" !== typeof e.departments[n])
                        throw TypeError(".HttpGroupMember.departments: object expected");
                    t.departments[n] = s.HttpGroupDepartment.fromObject(e.departments[n])
                }
            }
            if (e.departmentLeaders) {
                if (!Array.isArray(e.departmentLeaders))
                    throw TypeError(".HttpGroupMember.departmentLeaders: array expected");
                t.departmentLeaders = [];
                for (n = 0; n < e.departmentLeaders.length; ++n) {
                    if ("object" !== typeof e.departmentLeaders[n])
                        throw TypeError(".HttpGroupMember.departmentLeaders: object expected");
                    t.departmentLeaders[n] = s.HttpGroupDepartment.fromObject(e.departmentLeaders[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.departments = [],
            n.departmentLeaders = []),
            t.defaults) {
                if (n.userId = 0,
                n.groupMemberType = t.enums === String ? "CommonGroupMemberTypeNormalUser" : 0,
                n.name = "",
                n.alias = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.joinTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.joinTimestamp = t.longs === String ? "0" : 0;
                n.robotExtension = null,
                n.joined = !1,
                n.existSingleJoined = !1
            }
            if (null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.groupMemberType && e.hasOwnProperty("groupMemberType") && (n.groupMemberType = t.enums === String ? s.CommonGroupMemberType[e.groupMemberType] : e.groupMemberType),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.alias && e.hasOwnProperty("alias") && (n.alias = e.alias),
            null != e.joinTimestamp && e.hasOwnProperty("joinTimestamp") && ("number" === typeof e.joinTimestamp ? n.joinTimestamp = t.longs === String ? String(e.joinTimestamp) : e.joinTimestamp : n.joinTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.joinTimestamp) : t.longs === Number ? new a.LongBits(e.joinTimestamp.low >>> 0,e.joinTimestamp.high >>> 0).toNumber(!0) : e.joinTimestamp),
            null != e.robotExtension && e.hasOwnProperty("robotExtension") && (n.robotExtension = s.HttpGroupRobotExtension.toObject(e.robotExtension, t)),
            null != e.joined && e.hasOwnProperty("joined") && (n.joined = e.joined),
            null != e.existSingleJoined && e.hasOwnProperty("existSingleJoined") && (n.existSingleJoined = e.existSingleJoined),
            e.departments && e.departments.length) {
                n.departments = [];
                for (var o = 0; o < e.departments.length; ++o)
                    n.departments[o] = s.HttpGroupDepartment.toObject(e.departments[o], t)
            }
            if (e.departmentLeaders && e.departmentLeaders.length) {
                n.departmentLeaders = [];
                for (o = 0; o < e.departmentLeaders.length; ++o)
                    n.departmentLeaders[o] = s.HttpGroupDepartment.toObject(e.departmentLeaders[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupInviteMember = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.prototype.thumbAvatarUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(26).string(e.thumbAvatarUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupInviteMember;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.thumbAvatarUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupInviteMember)
                return e;
            var t = new s.HttpGroupInviteMember;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.name = "",
            n.thumbAvatarUrl = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupVersion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.myVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.avatarVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(24).uint64(e.memberVersion),
            null != e.myVersion && e.hasOwnProperty("myVersion") && t.uint32(32).uint64(e.myVersion),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && t.uint32(40).uint64(e.avatarVersion),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(48).uint64(e.liveVersion),
            null != e.groupType && e.hasOwnProperty("groupType") && t.uint32(56).int32(e.groupType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupVersion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                case 3:
                    r.memberVersion = e.uint64();
                    break;
                case 4:
                    r.myVersion = e.uint64();
                    break;
                case 5:
                    r.avatarVersion = e.uint64();
                    break;
                case 6:
                    r.liveVersion = e.uint64();
                    break;
                case 7:
                    r.groupType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupVersion)
                return e;
            var t = new s.HttpGroupVersion;
            switch (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            null != e.myVersion && (a.Long ? (t.myVersion = a.Long.fromValue(e.myVersion)).unsigned = !0 : "string" === typeof e.myVersion ? t.myVersion = parseInt(e.myVersion, 10) : "number" === typeof e.myVersion ? t.myVersion = e.myVersion : "object" === typeof e.myVersion && (t.myVersion = new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0))),
            null != e.avatarVersion && (a.Long ? (t.avatarVersion = a.Long.fromValue(e.avatarVersion)).unsigned = !0 : "string" === typeof e.avatarVersion ? t.avatarVersion = parseInt(e.avatarVersion, 10) : "number" === typeof e.avatarVersion ? t.avatarVersion = e.avatarVersion : "object" === typeof e.avatarVersion && (t.avatarVersion = new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0))),
            null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            e.groupType) {
            case "CommonGroupTypeUndefined":
            case 0:
                t.groupType = 0;
                break;
            case "CommonGroupTypeGeneral":
            case 1:
                t.groupType = 1;
                break;
            case "CommonGroupTypeCompany":
            case 2:
                t.groupType = 2;
                break;
            case "CommonGroupTypeDepartment":
            case 3:
                t.groupType = 3;
                break;
            case "CommonGroupTypeLive":
            case 4:
                t.groupType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.myVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.myVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.avatarVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.avatarVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0;
                n.groupType = t.enums === String ? "CommonGroupTypeUndefined" : 0
            }
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            null != e.myVersion && e.hasOwnProperty("myVersion") && ("number" === typeof e.myVersion ? n.myVersion = t.longs === String ? String(e.myVersion) : e.myVersion : n.myVersion = t.longs === String ? a.Long.prototype.toString.call(e.myVersion) : t.longs === Number ? new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0) : e.myVersion),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && ("number" === typeof e.avatarVersion ? n.avatarVersion = t.longs === String ? String(e.avatarVersion) : e.avatarVersion : n.avatarVersion = t.longs === String ? a.Long.prototype.toString.call(e.avatarVersion) : t.longs === Number ? new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0) : e.avatarVersion),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            null != e.groupType && e.hasOwnProperty("groupType") && (n.groupType = t.enums === String ? s.CommonGroupType[e.groupType] : e.groupType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupRobotExtension = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.templateId = 0,
        e.prototype.creatorId = 0,
        e.prototype.webhook = "",
        e.prototype.webhookToken = "",
        e.prototype.sendMessage = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.templateId && e.hasOwnProperty("templateId") && t.uint32(16).uint32(e.templateId),
            null != e.creatorId && e.hasOwnProperty("creatorId") && t.uint32(24).uint32(e.creatorId),
            null != e.webhook && e.hasOwnProperty("webhook") && t.uint32(34).string(e.webhook),
            null != e.webhookToken && e.hasOwnProperty("webhookToken") && t.uint32(42).string(e.webhookToken),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && t.uint32(48).bool(e.sendMessage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupRobotExtension;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.templateId = e.uint32();
                    break;
                case 3:
                    r.creatorId = e.uint32();
                    break;
                case 4:
                    r.webhook = e.string();
                    break;
                case 5:
                    r.webhookToken = e.string();
                    break;
                case 6:
                    r.sendMessage = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupRobotExtension)
                return e;
            var t = new s.HttpGroupRobotExtension;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.templateId && (t.templateId = e.templateId >>> 0),
            null != e.creatorId && (t.creatorId = e.creatorId >>> 0),
            null != e.webhook && (t.webhook = String(e.webhook)),
            null != e.webhookToken && (t.webhookToken = String(e.webhookToken)),
            null != e.sendMessage && (t.sendMessage = Boolean(e.sendMessage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.templateId = 0,
            n.creatorId = 0,
            n.webhook = "",
            n.webhookToken = "",
            n.sendMessage = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.templateId && e.hasOwnProperty("templateId") && (n.templateId = e.templateId),
            null != e.creatorId && e.hasOwnProperty("creatorId") && (n.creatorId = e.creatorId),
            null != e.webhook && e.hasOwnProperty("webhook") && (n.webhook = e.webhook),
            null != e.webhookToken && e.hasOwnProperty("webhookToken") && (n.webhookToken = e.webhookToken),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && (n.sendMessage = e.sendMessage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupRobotTemplateInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.templateId = 0,
        e.prototype.templateType = 0,
        e.prototype.templateName = "",
        e.prototype.avatarUrl = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.detailIntroduce = "",
        e.prototype.briefIntroduce = "",
        e.prototype.messagePreview = "",
        e.prototype.sourceUrl = "",
        e.prototype.settingsIntroduceUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.templateId && e.hasOwnProperty("templateId") && t.uint32(8).uint32(e.templateId),
            null != e.templateType && e.hasOwnProperty("templateType") && t.uint32(16).uint32(e.templateType),
            null != e.templateName && e.hasOwnProperty("templateName") && t.uint32(26).string(e.templateName),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(34).string(e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(42).string(e.thumbAvatarUrl),
            null != e.detailIntroduce && e.hasOwnProperty("detailIntroduce") && t.uint32(50).string(e.detailIntroduce),
            null != e.briefIntroduce && e.hasOwnProperty("briefIntroduce") && t.uint32(58).string(e.briefIntroduce),
            null != e.messagePreview && e.hasOwnProperty("messagePreview") && t.uint32(66).string(e.messagePreview),
            null != e.sourceUrl && e.hasOwnProperty("sourceUrl") && t.uint32(74).string(e.sourceUrl),
            null != e.settingsIntroduceUrl && e.hasOwnProperty("settingsIntroduceUrl") && t.uint32(82).string(e.settingsIntroduceUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupRobotTemplateInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.templateId = e.uint32();
                    break;
                case 2:
                    r.templateType = e.uint32();
                    break;
                case 3:
                    r.templateName = e.string();
                    break;
                case 4:
                    r.avatarUrl = e.string();
                    break;
                case 5:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 6:
                    r.detailIntroduce = e.string();
                    break;
                case 7:
                    r.briefIntroduce = e.string();
                    break;
                case 8:
                    r.messagePreview = e.string();
                    break;
                case 9:
                    r.sourceUrl = e.string();
                    break;
                case 10:
                    r.settingsIntroduceUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupRobotTemplateInfo)
                return e;
            var t = new s.HttpGroupRobotTemplateInfo;
            return null != e.templateId && (t.templateId = e.templateId >>> 0),
            null != e.templateType && (t.templateType = e.templateType >>> 0),
            null != e.templateName && (t.templateName = String(e.templateName)),
            null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            null != e.detailIntroduce && (t.detailIntroduce = String(e.detailIntroduce)),
            null != e.briefIntroduce && (t.briefIntroduce = String(e.briefIntroduce)),
            null != e.messagePreview && (t.messagePreview = String(e.messagePreview)),
            null != e.sourceUrl && (t.sourceUrl = String(e.sourceUrl)),
            null != e.settingsIntroduceUrl && (t.settingsIntroduceUrl = String(e.settingsIntroduceUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.templateId = 0,
            n.templateType = 0,
            n.templateName = "",
            n.avatarUrl = "",
            n.thumbAvatarUrl = "",
            n.detailIntroduce = "",
            n.briefIntroduce = "",
            n.messagePreview = "",
            n.sourceUrl = "",
            n.settingsIntroduceUrl = ""),
            null != e.templateId && e.hasOwnProperty("templateId") && (n.templateId = e.templateId),
            null != e.templateType && e.hasOwnProperty("templateType") && (n.templateType = e.templateType),
            null != e.templateName && e.hasOwnProperty("templateName") && (n.templateName = e.templateName),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.detailIntroduce && e.hasOwnProperty("detailIntroduce") && (n.detailIntroduce = e.detailIntroduce),
            null != e.briefIntroduce && e.hasOwnProperty("briefIntroduce") && (n.briefIntroduce = e.briefIntroduce),
            null != e.messagePreview && e.hasOwnProperty("messagePreview") && (n.messagePreview = e.messagePreview),
            null != e.sourceUrl && e.hasOwnProperty("sourceUrl") && (n.sourceUrl = e.sourceUrl),
            null != e.settingsIntroduceUrl && e.hasOwnProperty("settingsIntroduceUrl") && (n.settingsIntroduceUrl = e.settingsIntroduceUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLiveCourse = function() {
        function e(e) {
            if (this.assistantIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.title = "",
        e.prototype.coverUrl = "",
        e.prototype.courseType = 0,
        e.prototype.introduction = "",
        e.prototype.preStartTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.duration = 0,
        e.prototype.maxMemberCount = 0,
        e.prototype.playbackSupport = !1,
        e.prototype.memberSendVoiceSupport = !1,
        e.prototype.memberMessageUpperLectureAreaSupport = !1,
        e.prototype.courseStatus = 0,
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.creatorId = 0,
        e.prototype.lecturerId = 0,
        e.prototype.assistantIds = a.emptyArray,
        e.prototype.groupId = 0,
        e.prototype.onlineCount = 0,
        e.prototype.useDefaultCover = !1,
        e.prototype.thumbCoverUrl = "",
        e.prototype.orderId = "",
        e.prototype.isInvalid = !1,
        e.prototype.deviceType = 0,
        e.prototype.h5LiveCourseDetailUrl = "",
        e.prototype.isAbnormal = !1,
        e.prototype.closeCamera = !1,
        e.prototype.itemId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && t.uint32(26).string(e.coverUrl),
            null != e.courseType && e.hasOwnProperty("courseType") && t.uint32(32).int32(e.courseType),
            null != e.introduction && e.hasOwnProperty("introduction") && t.uint32(42).string(e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && t.uint32(48).uint64(e.preStartTimestamp),
            null != e.duration && e.hasOwnProperty("duration") && t.uint32(56).uint32(e.duration),
            null != e.maxMemberCount && e.hasOwnProperty("maxMemberCount") && t.uint32(64).uint32(e.maxMemberCount),
            null != e.playbackSupport && e.hasOwnProperty("playbackSupport") && t.uint32(72).bool(e.playbackSupport),
            null != e.memberSendVoiceSupport && e.hasOwnProperty("memberSendVoiceSupport") && t.uint32(80).bool(e.memberSendVoiceSupport),
            null != e.memberMessageUpperLectureAreaSupport && e.hasOwnProperty("memberMessageUpperLectureAreaSupport") && t.uint32(88).bool(e.memberMessageUpperLectureAreaSupport),
            null != e.courseStatus && e.hasOwnProperty("courseStatus") && t.uint32(96).int32(e.courseStatus),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(104).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(112).uint64(e.endTimestamp),
            null != e.creatorId && e.hasOwnProperty("creatorId") && t.uint32(120).uint32(e.creatorId),
            null != e.lecturerId && e.hasOwnProperty("lecturerId") && t.uint32(128).uint32(e.lecturerId),
            null != e.assistantIds && e.assistantIds.length) {
                t.uint32(138).fork();
                for (var n = 0; n < e.assistantIds.length; ++n)
                    t.uint32(e.assistantIds[n]);
                t.ldelim()
            }
            return null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(144).uint32(e.groupId),
            null != e.onlineCount && e.hasOwnProperty("onlineCount") && t.uint32(152).uint32(e.onlineCount),
            null != e.useDefaultCover && e.hasOwnProperty("useDefaultCover") && t.uint32(160).bool(e.useDefaultCover),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && t.uint32(170).string(e.thumbCoverUrl),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(178).string(e.orderId),
            null != e.isInvalid && e.hasOwnProperty("isInvalid") && t.uint32(184).bool(e.isInvalid),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(192).int32(e.deviceType),
            null != e.h5LiveCourseDetailUrl && e.hasOwnProperty("h5LiveCourseDetailUrl") && t.uint32(202).string(e.h5LiveCourseDetailUrl),
            null != e.isAbnormal && e.hasOwnProperty("isAbnormal") && t.uint32(208).bool(e.isAbnormal),
            null != e.closeCamera && e.hasOwnProperty("closeCamera") && t.uint32(216).bool(e.closeCamera),
            null != e.itemId && e.hasOwnProperty("itemId") && t.uint32(226).string(e.itemId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.coverUrl = e.string();
                    break;
                case 4:
                    r.courseType = e.int32();
                    break;
                case 5:
                    r.introduction = e.string();
                    break;
                case 6:
                    r.preStartTimestamp = e.uint64();
                    break;
                case 7:
                    r.duration = e.uint32();
                    break;
                case 8:
                    r.maxMemberCount = e.uint32();
                    break;
                case 9:
                    r.playbackSupport = e.bool();
                    break;
                case 10:
                    r.memberSendVoiceSupport = e.bool();
                    break;
                case 11:
                    r.memberMessageUpperLectureAreaSupport = e.bool();
                    break;
                case 12:
                    r.courseStatus = e.int32();
                    break;
                case 13:
                    r.startTimestamp = e.uint64();
                    break;
                case 14:
                    r.endTimestamp = e.uint64();
                    break;
                case 15:
                    r.creatorId = e.uint32();
                    break;
                case 16:
                    r.lecturerId = e.uint32();
                    break;
                case 17:
                    if (r.assistantIds && r.assistantIds.length || (r.assistantIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.assistantIds.push(e.uint32())
                    } else
                        r.assistantIds.push(e.uint32());
                    break;
                case 18:
                    r.groupId = e.uint32();
                    break;
                case 19:
                    r.onlineCount = e.uint32();
                    break;
                case 20:
                    r.useDefaultCover = e.bool();
                    break;
                case 21:
                    r.thumbCoverUrl = e.string();
                    break;
                case 22:
                    r.orderId = e.string();
                    break;
                case 23:
                    r.isInvalid = e.bool();
                    break;
                case 24:
                    r.deviceType = e.int32();
                    break;
                case 25:
                    r.h5LiveCourseDetailUrl = e.string();
                    break;
                case 26:
                    r.isAbnormal = e.bool();
                    break;
                case 27:
                    r.closeCamera = e.bool();
                    break;
                case 28:
                    r.itemId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLiveCourse)
                return e;
            var t = new s.HttpLiveCourse;
            switch (null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.title && (t.title = String(e.title)),
            null != e.coverUrl && (t.coverUrl = String(e.coverUrl)),
            e.courseType) {
            case "CommonLiveTypeUndefined":
            case 0:
                t.courseType = 0;
                break;
            case "CommonLiveTypeVoiceAndText":
            case 1:
                t.courseType = 1;
                break;
            case "CommonLiveTypePPT":
            case 2:
                t.courseType = 2;
                break;
            case "CommonLiveTypeVideo":
            case 3:
                t.courseType = 3;
                break;
            case "CommonLiveTypeDesktopShare":
            case 4:
                t.courseType = 4;
                break
            }
            switch (null != e.introduction && (t.introduction = String(e.introduction)),
            null != e.preStartTimestamp && (a.Long ? (t.preStartTimestamp = a.Long.fromValue(e.preStartTimestamp)).unsigned = !0 : "string" === typeof e.preStartTimestamp ? t.preStartTimestamp = parseInt(e.preStartTimestamp, 10) : "number" === typeof e.preStartTimestamp ? t.preStartTimestamp = e.preStartTimestamp : "object" === typeof e.preStartTimestamp && (t.preStartTimestamp = new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0))),
            null != e.duration && (t.duration = e.duration >>> 0),
            null != e.maxMemberCount && (t.maxMemberCount = e.maxMemberCount >>> 0),
            null != e.playbackSupport && (t.playbackSupport = Boolean(e.playbackSupport)),
            null != e.memberSendVoiceSupport && (t.memberSendVoiceSupport = Boolean(e.memberSendVoiceSupport)),
            null != e.memberMessageUpperLectureAreaSupport && (t.memberMessageUpperLectureAreaSupport = Boolean(e.memberMessageUpperLectureAreaSupport)),
            e.courseStatus) {
            case "CommonLiveStatusNotStarted":
            case 0:
                t.courseStatus = 0;
                break;
            case "CommonLiveStatusLive":
            case 1:
                t.courseStatus = 1;
                break;
            case "CommonLiveStatusEnd":
            case 2:
                t.courseStatus = 2;
                break
            }
            if (null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.creatorId && (t.creatorId = e.creatorId >>> 0),
            null != e.lecturerId && (t.lecturerId = e.lecturerId >>> 0),
            e.assistantIds) {
                if (!Array.isArray(e.assistantIds))
                    throw TypeError(".HttpLiveCourse.assistantIds: array expected");
                t.assistantIds = [];
                for (var n = 0; n < e.assistantIds.length; ++n)
                    t.assistantIds[n] = e.assistantIds[n] >>> 0
            }
            switch (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.onlineCount && (t.onlineCount = e.onlineCount >>> 0),
            null != e.useDefaultCover && (t.useDefaultCover = Boolean(e.useDefaultCover)),
            null != e.thumbCoverUrl && (t.thumbCoverUrl = String(e.thumbCoverUrl)),
            null != e.orderId && (t.orderId = String(e.orderId)),
            null != e.isInvalid && (t.isInvalid = Boolean(e.isInvalid)),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return null != e.h5LiveCourseDetailUrl && (t.h5LiveCourseDetailUrl = String(e.h5LiveCourseDetailUrl)),
            null != e.isAbnormal && (t.isAbnormal = Boolean(e.isAbnormal)),
            null != e.closeCamera && (t.closeCamera = Boolean(e.closeCamera)),
            null != e.itemId && (t.itemId = String(e.itemId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.assistantIds = []),
            t.defaults) {
                if (n.courseId = "",
                n.title = "",
                n.coverUrl = "",
                n.courseType = t.enums === String ? "CommonLiveTypeUndefined" : 0,
                n.introduction = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.preStartTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.preStartTimestamp = t.longs === String ? "0" : 0;
                if (n.duration = 0,
                n.maxMemberCount = 0,
                n.playbackSupport = !1,
                n.memberSendVoiceSupport = !1,
                n.memberMessageUpperLectureAreaSupport = !1,
                n.courseStatus = t.enums === String ? "CommonLiveStatusNotStarted" : 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.creatorId = 0,
                n.lecturerId = 0,
                n.groupId = 0,
                n.onlineCount = 0,
                n.useDefaultCover = !1,
                n.thumbCoverUrl = "",
                n.orderId = "",
                n.isInvalid = !1,
                n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0,
                n.h5LiveCourseDetailUrl = "",
                n.isAbnormal = !1,
                n.closeCamera = !1,
                n.itemId = ""
            }
            if (null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && (n.coverUrl = e.coverUrl),
            null != e.courseType && e.hasOwnProperty("courseType") && (n.courseType = t.enums === String ? s.CommonLiveType[e.courseType] : e.courseType),
            null != e.introduction && e.hasOwnProperty("introduction") && (n.introduction = e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && ("number" === typeof e.preStartTimestamp ? n.preStartTimestamp = t.longs === String ? String(e.preStartTimestamp) : e.preStartTimestamp : n.preStartTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.preStartTimestamp) : t.longs === Number ? new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0) : e.preStartTimestamp),
            null != e.duration && e.hasOwnProperty("duration") && (n.duration = e.duration),
            null != e.maxMemberCount && e.hasOwnProperty("maxMemberCount") && (n.maxMemberCount = e.maxMemberCount),
            null != e.playbackSupport && e.hasOwnProperty("playbackSupport") && (n.playbackSupport = e.playbackSupport),
            null != e.memberSendVoiceSupport && e.hasOwnProperty("memberSendVoiceSupport") && (n.memberSendVoiceSupport = e.memberSendVoiceSupport),
            null != e.memberMessageUpperLectureAreaSupport && e.hasOwnProperty("memberMessageUpperLectureAreaSupport") && (n.memberMessageUpperLectureAreaSupport = e.memberMessageUpperLectureAreaSupport),
            null != e.courseStatus && e.hasOwnProperty("courseStatus") && (n.courseStatus = t.enums === String ? s.CommonLiveStatus[e.courseStatus] : e.courseStatus),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.creatorId && e.hasOwnProperty("creatorId") && (n.creatorId = e.creatorId),
            null != e.lecturerId && e.hasOwnProperty("lecturerId") && (n.lecturerId = e.lecturerId),
            e.assistantIds && e.assistantIds.length) {
                n.assistantIds = [];
                for (var o = 0; o < e.assistantIds.length; ++o)
                    n.assistantIds[o] = e.assistantIds[o]
            }
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.onlineCount && e.hasOwnProperty("onlineCount") && (n.onlineCount = e.onlineCount),
            null != e.useDefaultCover && e.hasOwnProperty("useDefaultCover") && (n.useDefaultCover = e.useDefaultCover),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && (n.thumbCoverUrl = e.thumbCoverUrl),
            null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            null != e.isInvalid && e.hasOwnProperty("isInvalid") && (n.isInvalid = e.isInvalid),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            null != e.h5LiveCourseDetailUrl && e.hasOwnProperty("h5LiveCourseDetailUrl") && (n.h5LiveCourseDetailUrl = e.h5LiveCourseDetailUrl),
            null != e.isAbnormal && e.hasOwnProperty("isAbnormal") && (n.isAbnormal = e.isAbnormal),
            null != e.closeCamera && e.hasOwnProperty("closeCamera") && (n.closeCamera = e.closeCamera),
            null != e.itemId && e.hasOwnProperty("itemId") && (n.itemId = e.itemId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLiveCourseBasicInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.title = "",
        e.prototype.thumbCoverUrl = "",
        e.prototype.coverUrl = "",
        e.prototype.introduction = "",
        e.prototype.preStartTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.courseStatus = 0,
        e.prototype.groupId = 0,
        e.prototype.isInvalid = !1,
        e.prototype.lecturerName = "",
        e.prototype.remainderMemberCount = 0,
        e.prototype.itemId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && t.uint32(26).string(e.thumbCoverUrl),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && t.uint32(34).string(e.coverUrl),
            null != e.introduction && e.hasOwnProperty("introduction") && t.uint32(42).string(e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && t.uint32(48).uint64(e.preStartTimestamp),
            null != e.courseStatus && e.hasOwnProperty("courseStatus") && t.uint32(56).int32(e.courseStatus),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(64).uint32(e.groupId),
            null != e.isInvalid && e.hasOwnProperty("isInvalid") && t.uint32(72).bool(e.isInvalid),
            null != e.lecturerName && e.hasOwnProperty("lecturerName") && t.uint32(82).string(e.lecturerName),
            null != e.remainderMemberCount && e.hasOwnProperty("remainderMemberCount") && t.uint32(88).uint32(e.remainderMemberCount),
            null != e.itemId && e.hasOwnProperty("itemId") && t.uint32(98).string(e.itemId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLiveCourseBasicInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.thumbCoverUrl = e.string();
                    break;
                case 4:
                    r.coverUrl = e.string();
                    break;
                case 5:
                    r.introduction = e.string();
                    break;
                case 6:
                    r.preStartTimestamp = e.uint64();
                    break;
                case 7:
                    r.courseStatus = e.int32();
                    break;
                case 8:
                    r.groupId = e.uint32();
                    break;
                case 9:
                    r.isInvalid = e.bool();
                    break;
                case 10:
                    r.lecturerName = e.string();
                    break;
                case 11:
                    r.remainderMemberCount = e.uint32();
                    break;
                case 12:
                    r.itemId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLiveCourseBasicInfo)
                return e;
            var t = new s.HttpLiveCourseBasicInfo;
            switch (null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.title && (t.title = String(e.title)),
            null != e.thumbCoverUrl && (t.thumbCoverUrl = String(e.thumbCoverUrl)),
            null != e.coverUrl && (t.coverUrl = String(e.coverUrl)),
            null != e.introduction && (t.introduction = String(e.introduction)),
            null != e.preStartTimestamp && (a.Long ? (t.preStartTimestamp = a.Long.fromValue(e.preStartTimestamp)).unsigned = !0 : "string" === typeof e.preStartTimestamp ? t.preStartTimestamp = parseInt(e.preStartTimestamp, 10) : "number" === typeof e.preStartTimestamp ? t.preStartTimestamp = e.preStartTimestamp : "object" === typeof e.preStartTimestamp && (t.preStartTimestamp = new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0))),
            e.courseStatus) {
            case "CommonLiveStatusNotStarted":
            case 0:
                t.courseStatus = 0;
                break;
            case "CommonLiveStatusLive":
            case 1:
                t.courseStatus = 1;
                break;
            case "CommonLiveStatusEnd":
            case 2:
                t.courseStatus = 2;
                break
            }
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.isInvalid && (t.isInvalid = Boolean(e.isInvalid)),
            null != e.lecturerName && (t.lecturerName = String(e.lecturerName)),
            null != e.remainderMemberCount && (t.remainderMemberCount = e.remainderMemberCount >>> 0),
            null != e.itemId && (t.itemId = String(e.itemId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.courseId = "",
                n.title = "",
                n.thumbCoverUrl = "",
                n.coverUrl = "",
                n.introduction = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.preStartTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.preStartTimestamp = t.longs === String ? "0" : 0;
                n.courseStatus = t.enums === String ? "CommonLiveStatusNotStarted" : 0,
                n.groupId = 0,
                n.isInvalid = !1,
                n.lecturerName = "",
                n.remainderMemberCount = 0,
                n.itemId = ""
            }
            return null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && (n.thumbCoverUrl = e.thumbCoverUrl),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && (n.coverUrl = e.coverUrl),
            null != e.introduction && e.hasOwnProperty("introduction") && (n.introduction = e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && ("number" === typeof e.preStartTimestamp ? n.preStartTimestamp = t.longs === String ? String(e.preStartTimestamp) : e.preStartTimestamp : n.preStartTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.preStartTimestamp) : t.longs === Number ? new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0) : e.preStartTimestamp),
            null != e.courseStatus && e.hasOwnProperty("courseStatus") && (n.courseStatus = t.enums === String ? s.CommonLiveStatus[e.courseStatus] : e.courseStatus),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.isInvalid && e.hasOwnProperty("isInvalid") && (n.isInvalid = e.isInvalid),
            null != e.lecturerName && e.hasOwnProperty("lecturerName") && (n.lecturerName = e.lecturerName),
            null != e.remainderMemberCount && e.hasOwnProperty("remainderMemberCount") && (n.remainderMemberCount = e.remainderMemberCount),
            null != e.itemId && e.hasOwnProperty("itemId") && (n.itemId = e.itemId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLiveOrder = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.orderId = "",
        e.prototype.payPrice = 0,
        e.prototype.payTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.payType = 0,
        e.prototype.refundStatus = 0,
        e.prototype.originAmount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(10).string(e.orderId),
            null != e.payPrice && e.hasOwnProperty("payPrice") && t.uint32(16).uint32(e.payPrice),
            null != e.payTimestamp && e.hasOwnProperty("payTimestamp") && t.uint32(24).uint64(e.payTimestamp),
            null != e.payType && e.hasOwnProperty("payType") && t.uint32(32).int32(e.payType),
            null != e.refundStatus && e.hasOwnProperty("refundStatus") && t.uint32(40).int32(e.refundStatus),
            null != e.originAmount && e.hasOwnProperty("originAmount") && t.uint32(48).uint32(e.originAmount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLiveOrder;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.orderId = e.string();
                    break;
                case 2:
                    r.payPrice = e.uint32();
                    break;
                case 3:
                    r.payTimestamp = e.uint64();
                    break;
                case 4:
                    r.payType = e.int32();
                    break;
                case 5:
                    r.refundStatus = e.int32();
                    break;
                case 6:
                    r.originAmount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLiveOrder)
                return e;
            var t = new s.HttpLiveOrder;
            switch (null != e.orderId && (t.orderId = String(e.orderId)),
            null != e.payPrice && (t.payPrice = e.payPrice >>> 0),
            null != e.payTimestamp && (a.Long ? (t.payTimestamp = a.Long.fromValue(e.payTimestamp)).unsigned = !0 : "string" === typeof e.payTimestamp ? t.payTimestamp = parseInt(e.payTimestamp, 10) : "number" === typeof e.payTimestamp ? t.payTimestamp = e.payTimestamp : "object" === typeof e.payTimestamp && (t.payTimestamp = new a.LongBits(e.payTimestamp.low >>> 0,e.payTimestamp.high >>> 0).toNumber(!0))),
            e.payType) {
            case "CommonPayTypeUndefined":
            case 0:
                t.payType = 0;
                break;
            case "CommonPayTypeWeChat":
            case 1:
                t.payType = 1;
                break;
            case "CommonPayTypeAli":
            case 2:
                t.payType = 2;
                break;
            case "CommonPayTypeCoupon":
            case 3:
                t.payType = 3;
                break
            }
            switch (e.refundStatus) {
            case "CommonRefundStatusNone":
            case 0:
                t.refundStatus = 0;
                break;
            case "CommonRefundStatusApply":
            case 1:
                t.refundStatus = 1;
                break;
            case "CommonRefundStatusSuccess":
            case 2:
                t.refundStatus = 2;
                break;
            case "CommonRefundStatusFailure":
            case 3:
                t.refundStatus = 3;
                break
            }
            return null != e.originAmount && (t.originAmount = e.originAmount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.orderId = "",
                n.payPrice = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.payTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.payTimestamp = t.longs === String ? "0" : 0;
                n.payType = t.enums === String ? "CommonPayTypeUndefined" : 0,
                n.refundStatus = t.enums === String ? "CommonRefundStatusNone" : 0,
                n.originAmount = 0
            }
            return null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            null != e.payPrice && e.hasOwnProperty("payPrice") && (n.payPrice = e.payPrice),
            null != e.payTimestamp && e.hasOwnProperty("payTimestamp") && ("number" === typeof e.payTimestamp ? n.payTimestamp = t.longs === String ? String(e.payTimestamp) : e.payTimestamp : n.payTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.payTimestamp) : t.longs === Number ? new a.LongBits(e.payTimestamp.low >>> 0,e.payTimestamp.high >>> 0).toNumber(!0) : e.payTimestamp),
            null != e.payType && e.hasOwnProperty("payType") && (n.payType = t.enums === String ? s.CommonPayType[e.payType] : e.payType),
            null != e.refundStatus && e.hasOwnProperty("refundStatus") && (n.refundStatus = t.enums === String ? s.CommonRefundStatus[e.refundStatus] : e.refundStatus),
            null != e.originAmount && e.hasOwnProperty("originAmount") && (n.originAmount = e.originAmount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLiveRoom = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelId = "",
        e.prototype.channelName = "",
        e.prototype.pushUrl = "",
        e.prototype.httpPullUrl = "",
        e.prototype.hlsPullUrl = "",
        e.prototype.rtmpPullUrl = "",
        e.prototype.playbackUrl = "",
        e.prototype.groupId = 0,
        e.prototype.liveChannelName = "",
        e.prototype.videoDuration = 0,
        e.prototype.videoImageUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelId && e.hasOwnProperty("channelId") && t.uint32(10).string(e.channelId),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(18).string(e.channelName),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && t.uint32(26).string(e.pushUrl),
            null != e.httpPullUrl && e.hasOwnProperty("httpPullUrl") && t.uint32(34).string(e.httpPullUrl),
            null != e.hlsPullUrl && e.hasOwnProperty("hlsPullUrl") && t.uint32(42).string(e.hlsPullUrl),
            null != e.rtmpPullUrl && e.hasOwnProperty("rtmpPullUrl") && t.uint32(50).string(e.rtmpPullUrl),
            null != e.playbackUrl && e.hasOwnProperty("playbackUrl") && t.uint32(58).string(e.playbackUrl),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(64).uint32(e.groupId),
            null != e.liveChannelName && e.hasOwnProperty("liveChannelName") && t.uint32(74).string(e.liveChannelName),
            null != e.videoDuration && e.hasOwnProperty("videoDuration") && t.uint32(80).uint32(e.videoDuration),
            null != e.videoImageUrl && e.hasOwnProperty("videoImageUrl") && t.uint32(90).string(e.videoImageUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLiveRoom;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelId = e.string();
                    break;
                case 2:
                    r.channelName = e.string();
                    break;
                case 3:
                    r.pushUrl = e.string();
                    break;
                case 4:
                    r.httpPullUrl = e.string();
                    break;
                case 5:
                    r.hlsPullUrl = e.string();
                    break;
                case 6:
                    r.rtmpPullUrl = e.string();
                    break;
                case 7:
                    r.playbackUrl = e.string();
                    break;
                case 8:
                    r.groupId = e.uint32();
                    break;
                case 9:
                    r.liveChannelName = e.string();
                    break;
                case 10:
                    r.videoDuration = e.uint32();
                    break;
                case 11:
                    r.videoImageUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLiveRoom)
                return e;
            var t = new s.HttpLiveRoom;
            return null != e.channelId && (t.channelId = String(e.channelId)),
            null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.pushUrl && (t.pushUrl = String(e.pushUrl)),
            null != e.httpPullUrl && (t.httpPullUrl = String(e.httpPullUrl)),
            null != e.hlsPullUrl && (t.hlsPullUrl = String(e.hlsPullUrl)),
            null != e.rtmpPullUrl && (t.rtmpPullUrl = String(e.rtmpPullUrl)),
            null != e.playbackUrl && (t.playbackUrl = String(e.playbackUrl)),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.liveChannelName && (t.liveChannelName = String(e.liveChannelName)),
            null != e.videoDuration && (t.videoDuration = e.videoDuration >>> 0),
            null != e.videoImageUrl && (t.videoImageUrl = String(e.videoImageUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelId = "",
            n.channelName = "",
            n.pushUrl = "",
            n.httpPullUrl = "",
            n.hlsPullUrl = "",
            n.rtmpPullUrl = "",
            n.playbackUrl = "",
            n.groupId = 0,
            n.liveChannelName = "",
            n.videoDuration = 0,
            n.videoImageUrl = ""),
            null != e.channelId && e.hasOwnProperty("channelId") && (n.channelId = e.channelId),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && (n.pushUrl = e.pushUrl),
            null != e.httpPullUrl && e.hasOwnProperty("httpPullUrl") && (n.httpPullUrl = e.httpPullUrl),
            null != e.hlsPullUrl && e.hasOwnProperty("hlsPullUrl") && (n.hlsPullUrl = e.hlsPullUrl),
            null != e.rtmpPullUrl && e.hasOwnProperty("rtmpPullUrl") && (n.rtmpPullUrl = e.rtmpPullUrl),
            null != e.playbackUrl && e.hasOwnProperty("playbackUrl") && (n.playbackUrl = e.playbackUrl),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.liveChannelName && e.hasOwnProperty("liveChannelName") && (n.liveChannelName = e.liveChannelName),
            null != e.videoDuration && e.hasOwnProperty("videoDuration") && (n.videoDuration = e.videoDuration),
            null != e.videoImageUrl && e.hasOwnProperty("videoImageUrl") && (n.videoImageUrl = e.videoImageUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLiveAllInfo = function() {
        function e(e) {
            if (this.livePptItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveCourse = null,
        e.prototype.liveRoom = null,
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.liveOrder = null,
        e.prototype.livePptItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.liveCourse && e.hasOwnProperty("liveCourse") && s.HttpLiveCourse.encode(e.liveCourse, t.uint32(10).fork()).ldelim(),
            null != e.liveRoom && e.hasOwnProperty("liveRoom") && s.HttpLiveRoom.encode(e.liveRoom, t.uint32(18).fork()).ldelim(),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(24).uint64(e.liveVersion),
            null != e.liveOrder && e.hasOwnProperty("liveOrder") && s.HttpLiveOrder.encode(e.liveOrder, t.uint32(34).fork()).ldelim(),
            null != e.livePptItems && e.livePptItems.length)
                for (var n = 0; n < e.livePptItems.length; ++n)
                    s.HttpLivePpt.encode(e.livePptItems[n], t.uint32(42).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLiveAllInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveCourse = s.HttpLiveCourse.decode(e, e.uint32());
                    break;
                case 2:
                    r.liveRoom = s.HttpLiveRoom.decode(e, e.uint32());
                    break;
                case 3:
                    r.liveVersion = e.uint64();
                    break;
                case 4:
                    r.liveOrder = s.HttpLiveOrder.decode(e, e.uint32());
                    break;
                case 5:
                    r.livePptItems && r.livePptItems.length || (r.livePptItems = []),
                    r.livePptItems.push(s.HttpLivePpt.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLiveAllInfo)
                return e;
            var t = new s.HttpLiveAllInfo;
            if (null != e.liveCourse) {
                if ("object" !== typeof e.liveCourse)
                    throw TypeError(".HttpLiveAllInfo.liveCourse: object expected");
                t.liveCourse = s.HttpLiveCourse.fromObject(e.liveCourse)
            }
            if (null != e.liveRoom) {
                if ("object" !== typeof e.liveRoom)
                    throw TypeError(".HttpLiveAllInfo.liveRoom: object expected");
                t.liveRoom = s.HttpLiveRoom.fromObject(e.liveRoom)
            }
            if (null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            null != e.liveOrder) {
                if ("object" !== typeof e.liveOrder)
                    throw TypeError(".HttpLiveAllInfo.liveOrder: object expected");
                t.liveOrder = s.HttpLiveOrder.fromObject(e.liveOrder)
            }
            if (e.livePptItems) {
                if (!Array.isArray(e.livePptItems))
                    throw TypeError(".HttpLiveAllInfo.livePptItems: array expected");
                t.livePptItems = [];
                for (var n = 0; n < e.livePptItems.length; ++n) {
                    if ("object" !== typeof e.livePptItems[n])
                        throw TypeError(".HttpLiveAllInfo.livePptItems: object expected");
                    t.livePptItems[n] = s.HttpLivePpt.fromObject(e.livePptItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.livePptItems = []),
            t.defaults) {
                if (n.liveCourse = null,
                n.liveRoom = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0;
                n.liveOrder = null
            }
            if (null != e.liveCourse && e.hasOwnProperty("liveCourse") && (n.liveCourse = s.HttpLiveCourse.toObject(e.liveCourse, t)),
            null != e.liveRoom && e.hasOwnProperty("liveRoom") && (n.liveRoom = s.HttpLiveRoom.toObject(e.liveRoom, t)),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            null != e.liveOrder && e.hasOwnProperty("liveOrder") && (n.liveOrder = s.HttpLiveOrder.toObject(e.liveOrder, t)),
            e.livePptItems && e.livePptItems.length) {
                n.livePptItems = [];
                for (var o = 0; o < e.livePptItems.length; ++o)
                    n.livePptItems[o] = s.HttpLivePpt.toObject(e.livePptItems[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpCoupon = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.couponCode = "",
        e.prototype.couponScope = 0,
        e.prototype.couponType = 0,
        e.prototype.couponStatus = 0,
        e.prototype.amount = 0,
        e.prototype.discount = 0,
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.orderId = "",
        e.prototype.creator = "",
        e.prototype.createTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.couponCode && e.hasOwnProperty("couponCode") && t.uint32(10).string(e.couponCode),
            null != e.couponScope && e.hasOwnProperty("couponScope") && t.uint32(16).int32(e.couponScope),
            null != e.couponType && e.hasOwnProperty("couponType") && t.uint32(24).int32(e.couponType),
            null != e.couponStatus && e.hasOwnProperty("couponStatus") && t.uint32(32).int32(e.couponStatus),
            null != e.amount && e.hasOwnProperty("amount") && t.uint32(40).uint32(e.amount),
            null != e.discount && e.hasOwnProperty("discount") && t.uint32(48).uint32(e.discount),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(56).uint64(e.startTimestamp),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(64).uint64(e.expiredTimestamp),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(74).string(e.orderId),
            null != e.creator && e.hasOwnProperty("creator") && t.uint32(82).string(e.creator),
            null != e.createTimestamp && e.hasOwnProperty("createTimestamp") && t.uint32(88).uint64(e.createTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpCoupon;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.couponCode = e.string();
                    break;
                case 2:
                    r.couponScope = e.int32();
                    break;
                case 3:
                    r.couponType = e.int32();
                    break;
                case 4:
                    r.couponStatus = e.int32();
                    break;
                case 5:
                    r.amount = e.uint32();
                    break;
                case 6:
                    r.discount = e.uint32();
                    break;
                case 7:
                    r.startTimestamp = e.uint64();
                    break;
                case 8:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 9:
                    r.orderId = e.string();
                    break;
                case 10:
                    r.creator = e.string();
                    break;
                case 11:
                    r.createTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpCoupon)
                return e;
            var t = new s.HttpCoupon;
            switch (null != e.couponCode && (t.couponCode = String(e.couponCode)),
            e.couponScope) {
            case "CommonCouponScopeNone":
            case 0:
                t.couponScope = 0;
                break;
            case "CommonCouponScopeAll":
            case 1:
                t.couponScope = 1;
                break;
            case "CommonCouponScopeLiveVideo":
            case 2:
                t.couponScope = 2;
                break;
            case "CommonCouponScopeLiveDesktopShare":
            case 3:
                t.couponScope = 3;
                break
            }
            switch (e.couponType) {
            case "CommonCouponTypeUndefined":
            case 0:
                t.couponType = 0;
                break;
            case "CommonCouponTypeDeduct":
            case 1:
                t.couponType = 1;
                break;
            case "CommonCouponTypeDiscount":
            case 2:
                t.couponType = 2;
                break;
            case "CommonCouponTypeAllDeduct":
            case 3:
                t.couponType = 3;
                break
            }
            switch (e.couponStatus) {
            case "CommonCouponStatusNotUsed":
            case 0:
                t.couponStatus = 0;
                break;
            case "CommonCouponStatusUsed":
            case 1:
                t.couponStatus = 1;
                break;
            case "CommonCouponStatusInvalid":
            case 2:
                t.couponStatus = 2;
                break
            }
            return null != e.amount && (t.amount = e.amount >>> 0),
            null != e.discount && (t.discount = e.discount >>> 0),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.orderId && (t.orderId = String(e.orderId)),
            null != e.creator && (t.creator = String(e.creator)),
            null != e.createTimestamp && (a.Long ? (t.createTimestamp = a.Long.fromValue(e.createTimestamp)).unsigned = !0 : "string" === typeof e.createTimestamp ? t.createTimestamp = parseInt(e.createTimestamp, 10) : "number" === typeof e.createTimestamp ? t.createTimestamp = e.createTimestamp : "object" === typeof e.createTimestamp && (t.createTimestamp = new a.LongBits(e.createTimestamp.low >>> 0,e.createTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.couponCode = "",
                n.couponScope = t.enums === String ? "CommonCouponScopeNone" : 0,
                n.couponType = t.enums === String ? "CommonCouponTypeUndefined" : 0,
                n.couponStatus = t.enums === String ? "CommonCouponStatusNotUsed" : 0,
                n.amount = 0,
                n.discount = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                if (n.orderId = "",
                n.creator = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.createTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.createTimestamp = t.longs === String ? "0" : 0
            }
            return null != e.couponCode && e.hasOwnProperty("couponCode") && (n.couponCode = e.couponCode),
            null != e.couponScope && e.hasOwnProperty("couponScope") && (n.couponScope = t.enums === String ? s.CommonCouponScope[e.couponScope] : e.couponScope),
            null != e.couponType && e.hasOwnProperty("couponType") && (n.couponType = t.enums === String ? s.CommonCouponType[e.couponType] : e.couponType),
            null != e.couponStatus && e.hasOwnProperty("couponStatus") && (n.couponStatus = t.enums === String ? s.CommonCouponStatus[e.couponStatus] : e.couponStatus),
            null != e.amount && e.hasOwnProperty("amount") && (n.amount = e.amount),
            null != e.discount && e.hasOwnProperty("discount") && (n.discount = e.discount),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            null != e.creator && e.hasOwnProperty("creator") && (n.creator = e.creator),
            null != e.createTimestamp && e.hasOwnProperty("createTimestamp") && ("number" === typeof e.createTimestamp ? n.createTimestamp = t.longs === String ? String(e.createTimestamp) : e.createTimestamp : n.createTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.createTimestamp) : t.longs === Number ? new a.LongBits(e.createTimestamp.low >>> 0,e.createTimestamp.high >>> 0).toNumber(!0) : e.createTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLivePpt = function() {
        function e(e) {
            if (this.sequenceItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.fileId = "",
        e.prototype.imageInfo = null,
        e.prototype.sortIndex = 0,
        e.prototype.status = 0,
        e.prototype.sequenceItems = a.emptyArray,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.fileId && e.hasOwnProperty("fileId") && t.uint32(10).string(e.fileId),
            null != e.imageInfo && e.hasOwnProperty("imageInfo") && s.HttpImage.encode(e.imageInfo, t.uint32(18).fork()).ldelim(),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && t.uint32(24).uint32(e.sortIndex),
            null != e.status && e.hasOwnProperty("status") && t.uint32(32).uint32(e.status),
            null != e.sequenceItems && e.sequenceItems.length) {
                t.uint32(42).fork();
                for (var n = 0; n < e.sequenceItems.length; ++n)
                    t.uint64(e.sequenceItems[n]);
                t.ldelim()
            }
            return null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(48).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.fileId = e.string();
                    break;
                case 2:
                    r.imageInfo = s.HttpImage.decode(e, e.uint32());
                    break;
                case 3:
                    r.sortIndex = e.uint32();
                    break;
                case 4:
                    r.status = e.uint32();
                    break;
                case 5:
                    if (r.sequenceItems && r.sequenceItems.length || (r.sequenceItems = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.sequenceItems.push(e.uint64())
                    } else
                        r.sequenceItems.push(e.uint64());
                    break;
                case 6:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLivePpt)
                return e;
            var t = new s.HttpLivePpt;
            if (null != e.fileId && (t.fileId = String(e.fileId)),
            null != e.imageInfo) {
                if ("object" !== typeof e.imageInfo)
                    throw TypeError(".HttpLivePpt.imageInfo: object expected");
                t.imageInfo = s.HttpImage.fromObject(e.imageInfo)
            }
            if (null != e.sortIndex && (t.sortIndex = e.sortIndex >>> 0),
            null != e.status && (t.status = e.status >>> 0),
            e.sequenceItems) {
                if (!Array.isArray(e.sequenceItems))
                    throw TypeError(".HttpLivePpt.sequenceItems: array expected");
                t.sequenceItems = [];
                for (var n = 0; n < e.sequenceItems.length; ++n)
                    a.Long ? (t.sequenceItems[n] = a.Long.fromValue(e.sequenceItems[n])).unsigned = !0 : "string" === typeof e.sequenceItems[n] ? t.sequenceItems[n] = parseInt(e.sequenceItems[n], 10) : "number" === typeof e.sequenceItems[n] ? t.sequenceItems[n] = e.sequenceItems[n] : "object" === typeof e.sequenceItems[n] && (t.sequenceItems[n] = new a.LongBits(e.sequenceItems[n].low >>> 0,e.sequenceItems[n].high >>> 0).toNumber(!0))
            }
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.sequenceItems = []),
            t.defaults && (n.fileId = "",
            n.imageInfo = null,
            n.sortIndex = 0,
            n.status = 0,
            n.groupId = 0),
            null != e.fileId && e.hasOwnProperty("fileId") && (n.fileId = e.fileId),
            null != e.imageInfo && e.hasOwnProperty("imageInfo") && (n.imageInfo = s.HttpImage.toObject(e.imageInfo, t)),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && (n.sortIndex = e.sortIndex),
            null != e.status && e.hasOwnProperty("status") && (n.status = e.status),
            e.sequenceItems && e.sequenceItems.length) {
                n.sequenceItems = [];
                for (var r = 0; r < e.sequenceItems.length; ++r)
                    "number" === typeof e.sequenceItems[r] ? n.sequenceItems[r] = t.longs === String ? String(e.sequenceItems[r]) : e.sequenceItems[r] : n.sequenceItems[r] = t.longs === String ? a.Long.prototype.toString.call(e.sequenceItems[r]) : t.longs === Number ? new a.LongBits(e.sequenceItems[r].low >>> 0,e.sequenceItems[r].high >>> 0).toNumber(!0) : e.sequenceItems[r]
            }
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUploadLivePpt = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.fileId = "",
        e.prototype.imageInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.fileId && e.hasOwnProperty("fileId") && t.uint32(10).string(e.fileId),
            null != e.imageInfo && e.hasOwnProperty("imageInfo") && s.HttpImage.encode(e.imageInfo, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUploadLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.fileId = e.string();
                    break;
                case 2:
                    r.imageInfo = s.HttpImage.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUploadLivePpt)
                return e;
            var t = new s.HttpUploadLivePpt;
            if (null != e.fileId && (t.fileId = String(e.fileId)),
            null != e.imageInfo) {
                if ("object" !== typeof e.imageInfo)
                    throw TypeError(".HttpUploadLivePpt.imageInfo: object expected");
                t.imageInfo = s.HttpImage.fromObject(e.imageInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.fileId = "",
            n.imageInfo = null),
            null != e.fileId && e.hasOwnProperty("fileId") && (n.fileId = e.fileId),
            null != e.imageInfo && e.hasOwnProperty("imageInfo") && (n.imageInfo = s.HttpImage.toObject(e.imageInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpImage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.originImageInfo = null,
        e.prototype.thumbImageInfo = null,
        e.prototype.middleImageInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.originImageInfo && e.hasOwnProperty("originImageInfo") && s.CommonImageInfo.encode(e.originImageInfo, t.uint32(10).fork()).ldelim(),
            null != e.thumbImageInfo && e.hasOwnProperty("thumbImageInfo") && s.CommonImageInfo.encode(e.thumbImageInfo, t.uint32(18).fork()).ldelim(),
            null != e.middleImageInfo && e.hasOwnProperty("middleImageInfo") && s.CommonImageInfo.encode(e.middleImageInfo, t.uint32(26).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpImage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.originImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.thumbImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                case 3:
                    r.middleImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpImage)
                return e;
            var t = new s.HttpImage;
            if (null != e.originImageInfo) {
                if ("object" !== typeof e.originImageInfo)
                    throw TypeError(".HttpImage.originImageInfo: object expected");
                t.originImageInfo = s.CommonImageInfo.fromObject(e.originImageInfo)
            }
            if (null != e.thumbImageInfo) {
                if ("object" !== typeof e.thumbImageInfo)
                    throw TypeError(".HttpImage.thumbImageInfo: object expected");
                t.thumbImageInfo = s.CommonImageInfo.fromObject(e.thumbImageInfo)
            }
            if (null != e.middleImageInfo) {
                if ("object" !== typeof e.middleImageInfo)
                    throw TypeError(".HttpImage.middleImageInfo: object expected");
                t.middleImageInfo = s.CommonImageInfo.fromObject(e.middleImageInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.originImageInfo = null,
            n.thumbImageInfo = null,
            n.middleImageInfo = null),
            null != e.originImageInfo && e.hasOwnProperty("originImageInfo") && (n.originImageInfo = s.CommonImageInfo.toObject(e.originImageInfo, t)),
            null != e.thumbImageInfo && e.hasOwnProperty("thumbImageInfo") && (n.thumbImageInfo = s.CommonImageInfo.toObject(e.thumbImageInfo, t)),
            null != e.middleImageInfo && e.hasOwnProperty("middleImageInfo") && (n.middleImageInfo = s.CommonImageInfo.toObject(e.middleImageInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.minSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.message = null,
        e.prototype.unread = 0,
        e.prototype.readSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(24).uint64(e.timestamp),
            null != e.minSequence && e.hasOwnProperty("minSequence") && t.uint32(32).uint64(e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && t.uint32(40).uint64(e.maxSequence),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(50).fork()).ldelim(),
            null != e.unread && e.hasOwnProperty("unread") && t.uint32(56).uint32(e.unread),
            null != e.readSequence && e.hasOwnProperty("readSequence") && t.uint32(64).uint64(e.readSequence),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(72).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.timestamp = e.uint64();
                    break;
                case 4:
                    r.minSequence = e.uint64();
                    break;
                case 5:
                    r.maxSequence = e.uint64();
                    break;
                case 6:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 7:
                    r.unread = e.uint32();
                    break;
                case 8:
                    r.readSequence = e.uint64();
                    break;
                case 9:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpConversation)
                return e;
            var t = new s.HttpConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.minSequence && (a.Long ? (t.minSequence = a.Long.fromValue(e.minSequence)).unsigned = !0 : "string" === typeof e.minSequence ? t.minSequence = parseInt(e.minSequence, 10) : "number" === typeof e.minSequence ? t.minSequence = e.minSequence : "object" === typeof e.minSequence && (t.minSequence = new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0))),
            null != e.maxSequence && (a.Long ? (t.maxSequence = a.Long.fromValue(e.maxSequence)).unsigned = !0 : "string" === typeof e.maxSequence ? t.maxSequence = parseInt(e.maxSequence, 10) : "number" === typeof e.maxSequence ? t.maxSequence = e.maxSequence : "object" === typeof e.maxSequence && (t.maxSequence = new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0))),
            null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".HttpConversation.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return null != e.unread && (t.unread = e.unread >>> 0),
            null != e.readSequence && (a.Long ? (t.readSequence = a.Long.fromValue(e.readSequence)).unsigned = !0 : "string" === typeof e.readSequence ? t.readSequence = parseInt(e.readSequence, 10) : "number" === typeof e.readSequence ? t.readSequence = e.readSequence : "object" === typeof e.readSequence && (t.readSequence = new a.LongBits(e.readSequence.low >>> 0,e.readSequence.high >>> 0).toNumber(!0))),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.minSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.minSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.maxSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.maxSequence = t.longs === String ? "0" : 0;
                if (n.message = null,
                n.unread = 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.readSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.readSequence = t.longs === String ? "0" : 0;
                n.userId = 0
            }
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.minSequence && e.hasOwnProperty("minSequence") && ("number" === typeof e.minSequence ? n.minSequence = t.longs === String ? String(e.minSequence) : e.minSequence : n.minSequence = t.longs === String ? a.Long.prototype.toString.call(e.minSequence) : t.longs === Number ? new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0) : e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && ("number" === typeof e.maxSequence ? n.maxSequence = t.longs === String ? String(e.maxSequence) : e.maxSequence : n.maxSequence = t.longs === String ? a.Long.prototype.toString.call(e.maxSequence) : t.longs === Number ? new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0) : e.maxSequence),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            null != e.unread && e.hasOwnProperty("unread") && (n.unread = e.unread),
            null != e.readSequence && e.hasOwnProperty("readSequence") && ("number" === typeof e.readSequence ? n.readSequence = t.longs === String ? String(e.readSequence) : e.readSequence : n.readSequence = t.longs === String ? a.Long.prototype.toString.call(e.readSequence) : t.longs === Number ? new a.LongBits(e.readSequence.low >>> 0,e.readSequence.high >>> 0).toNumber(!0) : e.readSequence),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpTopConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.minSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.message = null,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.minSequence && e.hasOwnProperty("minSequence") && t.uint32(24).uint64(e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && t.uint32(32).uint64(e.maxSequence),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(42).fork()).ldelim(),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(48).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpTopConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.minSequence = e.uint64();
                    break;
                case 4:
                    r.maxSequence = e.uint64();
                    break;
                case 5:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 6:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpTopConversation)
                return e;
            var t = new s.HttpTopConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.minSequence && (a.Long ? (t.minSequence = a.Long.fromValue(e.minSequence)).unsigned = !0 : "string" === typeof e.minSequence ? t.minSequence = parseInt(e.minSequence, 10) : "number" === typeof e.minSequence ? t.minSequence = e.minSequence : "object" === typeof e.minSequence && (t.minSequence = new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0))),
            null != e.maxSequence && (a.Long ? (t.maxSequence = a.Long.fromValue(e.maxSequence)).unsigned = !0 : "string" === typeof e.maxSequence ? t.maxSequence = parseInt(e.maxSequence, 10) : "number" === typeof e.maxSequence ? t.maxSequence = e.maxSequence : "object" === typeof e.maxSequence && (t.maxSequence = new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0))),
            null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".HttpTopConversation.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.minSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.minSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.maxSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.maxSequence = t.longs === String ? "0" : 0;
                n.message = null,
                n.userId = 0
            }
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.minSequence && e.hasOwnProperty("minSequence") && ("number" === typeof e.minSequence ? n.minSequence = t.longs === String ? String(e.minSequence) : e.minSequence : n.minSequence = t.longs === String ? a.Long.prototype.toString.call(e.minSequence) : t.longs === Number ? new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0) : e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && ("number" === typeof e.maxSequence ? n.maxSequence = t.longs === String ? String(e.maxSequence) : e.maxSequence : n.maxSequence = t.longs === String ? a.Long.prototype.toString.call(e.maxSequence) : t.longs === Number ? new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0) : e.maxSequence),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpConversationSequence = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(16).uint64(e.sequence),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpConversationSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.sequence = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpConversationSequence)
                return e;
            var t = new s.HttpConversationSequence;
            return null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !0 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.conversationId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0) : e.sequence),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpConversationCalendarDay = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.count = 0,
        e.prototype.chatDay = "",
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.count && e.hasOwnProperty("count") && t.uint32(8).int32(e.count),
            null != e.chatDay && e.hasOwnProperty("chatDay") && t.uint32(18).string(e.chatDay),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(24).int64(e.sequence),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpConversationCalendarDay;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.count = e.int32();
                    break;
                case 2:
                    r.chatDay = e.string();
                    break;
                case 3:
                    r.sequence = e.int64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpConversationCalendarDay)
                return e;
            var t = new s.HttpConversationCalendarDay;
            return null != e.count && (t.count = 0 | e.count),
            null != e.chatDay && (t.chatDay = String(e.chatDay)),
            null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !1 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber())),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.count = 0,
                n.chatDay = "",
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
            return null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.chatDay && e.hasOwnProperty("chatDay") && (n.chatDay = e.chatDay),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber() : e.sequence),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpMessageUnreadStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.status = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.status && e.hasOwnProperty("status") && t.uint32(16).uint32(e.status),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpMessageUnreadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.status = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpMessageUnreadStatus)
                return e;
            var t = new s.HttpMessageUnreadStatus;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.status && (t.status = e.status >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.status = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.status && e.hasOwnProperty("status") && (n.status = e.status),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRedpacketsSentItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.redpacketType = 0,
        e.prototype.totalNumber = 0,
        e.prototype.hasReveivedNumber = 0,
        e.prototype.hasExpired = !1,
        e.prototype.price = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(16).int32(e.redpacketType),
            null != e.totalNumber && e.hasOwnProperty("totalNumber") && t.uint32(24).uint32(e.totalNumber),
            null != e.hasReveivedNumber && e.hasOwnProperty("hasReveivedNumber") && t.uint32(32).uint32(e.hasReveivedNumber),
            null != e.hasExpired && e.hasOwnProperty("hasExpired") && t.uint32(40).bool(e.hasExpired),
            null != e.price && e.hasOwnProperty("price") && t.uint32(48).uint32(e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(56).uint64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRedpacketsSentItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.redpacketType = e.int32();
                    break;
                case 3:
                    r.totalNumber = e.uint32();
                    break;
                case 4:
                    r.hasReveivedNumber = e.uint32();
                    break;
                case 5:
                    r.hasExpired = e.bool();
                    break;
                case 6:
                    r.price = e.uint32();
                    break;
                case 7:
                    r.timestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRedpacketsSentItem)
                return e;
            var t = new s.HttpRedpacketsSentItem;
            switch (null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            e.redpacketType) {
            case "CommonRedpacketTypeUndefined":
            case 0:
                t.redpacketType = 0;
                break;
            case "CommonRedpacketTypePersonal":
            case 1:
                t.redpacketType = 1;
                break;
            case "CommonRedpacketTypeGroupNormal":
            case 2:
                t.redpacketType = 2;
                break;
            case "CommonRedpacketTypeGroupRandom":
            case 3:
                t.redpacketType = 3;
                break
            }
            return null != e.totalNumber && (t.totalNumber = e.totalNumber >>> 0),
            null != e.hasReveivedNumber && (t.hasReveivedNumber = e.hasReveivedNumber >>> 0),
            null != e.hasExpired && (t.hasExpired = Boolean(e.hasExpired)),
            null != e.price && (t.price = e.price >>> 0),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.redpacketId = "",
                n.redpacketType = t.enums === String ? "CommonRedpacketTypeUndefined" : 0,
                n.totalNumber = 0,
                n.hasReveivedNumber = 0,
                n.hasExpired = !1,
                n.price = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = t.enums === String ? s.CommonRedpacketType[e.redpacketType] : e.redpacketType),
            null != e.totalNumber && e.hasOwnProperty("totalNumber") && (n.totalNumber = e.totalNumber),
            null != e.hasReveivedNumber && e.hasOwnProperty("hasReveivedNumber") && (n.hasReveivedNumber = e.hasReveivedNumber),
            null != e.hasExpired && e.hasOwnProperty("hasExpired") && (n.hasExpired = e.hasExpired),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRedpacketReceivedItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.redpacketType = 0,
        e.prototype.senderId = 0,
        e.prototype.senderName = "",
        e.prototype.price = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(16).int32(e.redpacketType),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(24).uint32(e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(34).string(e.senderName),
            null != e.price && e.hasOwnProperty("price") && t.uint32(40).uint32(e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(48).uint64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRedpacketReceivedItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.redpacketType = e.int32();
                    break;
                case 3:
                    r.senderId = e.uint32();
                    break;
                case 4:
                    r.senderName = e.string();
                    break;
                case 5:
                    r.price = e.uint32();
                    break;
                case 6:
                    r.timestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRedpacketReceivedItem)
                return e;
            var t = new s.HttpRedpacketReceivedItem;
            switch (null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            e.redpacketType) {
            case "CommonRedpacketTypeUndefined":
            case 0:
                t.redpacketType = 0;
                break;
            case "CommonRedpacketTypePersonal":
            case 1:
                t.redpacketType = 1;
                break;
            case "CommonRedpacketTypeGroupNormal":
            case 2:
                t.redpacketType = 2;
                break;
            case "CommonRedpacketTypeGroupRandom":
            case 3:
                t.redpacketType = 3;
                break
            }
            return null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.price && (t.price = e.price >>> 0),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.redpacketId = "",
                n.redpacketType = t.enums === String ? "CommonRedpacketTypeUndefined" : 0,
                n.senderId = 0,
                n.senderName = "",
                n.price = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = t.enums === String ? s.CommonRedpacketType[e.redpacketType] : e.redpacketType),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRedpacketReceiver = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.prototype.price = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.comment = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.price && e.hasOwnProperty("price") && t.uint32(24).uint32(e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(32).uint64(e.timestamp),
            null != e.comment && e.hasOwnProperty("comment") && t.uint32(42).string(e.comment),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRedpacketReceiver;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.price = e.uint32();
                    break;
                case 4:
                    r.timestamp = e.uint64();
                    break;
                case 5:
                    r.comment = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRedpacketReceiver)
                return e;
            var t = new s.HttpRedpacketReceiver;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.price && (t.price = e.price >>> 0),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.comment && (t.comment = String(e.comment)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.userId = 0,
                n.name = "",
                n.price = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.comment = ""
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.comment && e.hasOwnProperty("comment") && (n.comment = e.comment),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGifSearchPagination = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.totalCount = 0,
        e.prototype.totalPage = 0,
        e.prototype.count = 0,
        e.prototype.offset = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.totalCount && e.hasOwnProperty("totalCount") && t.uint32(8).uint32(e.totalCount),
            null != e.totalPage && e.hasOwnProperty("totalPage") && t.uint32(16).uint32(e.totalPage),
            null != e.count && e.hasOwnProperty("count") && t.uint32(24).uint32(e.count),
            null != e.offset && e.hasOwnProperty("offset") && t.uint32(32).uint32(e.offset),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGifSearchPagination;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.totalCount = e.uint32();
                    break;
                case 2:
                    r.totalPage = e.uint32();
                    break;
                case 3:
                    r.count = e.uint32();
                    break;
                case 4:
                    r.offset = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGifSearchPagination)
                return e;
            var t = new s.HttpGifSearchPagination;
            return null != e.totalCount && (t.totalCount = e.totalCount >>> 0),
            null != e.totalPage && (t.totalPage = e.totalPage >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            null != e.offset && (t.offset = e.offset >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.totalCount = 0,
            n.totalPage = 0,
            n.count = 0,
            n.offset = 0),
            null != e.totalCount && e.hasOwnProperty("totalCount") && (n.totalCount = e.totalCount),
            null != e.totalPage && e.hasOwnProperty("totalPage") && (n.totalPage = e.totalPage),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.offset && e.hasOwnProperty("offset") && (n.offset = e.offset),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGifSearchItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.origin = null,
        e.prototype.thumb = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.origin && e.hasOwnProperty("origin") && s.HttpGifSearchItemDetail.encode(e.origin, t.uint32(10).fork()).ldelim(),
            null != e.thumb && e.hasOwnProperty("thumb") && s.HttpGifSearchItemDetail.encode(e.thumb, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGifSearchItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.origin = s.HttpGifSearchItemDetail.decode(e, e.uint32());
                    break;
                case 2:
                    r.thumb = s.HttpGifSearchItemDetail.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGifSearchItem)
                return e;
            var t = new s.HttpGifSearchItem;
            if (null != e.origin) {
                if ("object" !== typeof e.origin)
                    throw TypeError(".HttpGifSearchItem.origin: object expected");
                t.origin = s.HttpGifSearchItemDetail.fromObject(e.origin)
            }
            if (null != e.thumb) {
                if ("object" !== typeof e.thumb)
                    throw TypeError(".HttpGifSearchItem.thumb: object expected");
                t.thumb = s.HttpGifSearchItemDetail.fromObject(e.thumb)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.origin = null,
            n.thumb = null),
            null != e.origin && e.hasOwnProperty("origin") && (n.origin = s.HttpGifSearchItemDetail.toObject(e.origin, t)),
            null != e.thumb && e.hasOwnProperty("thumb") && (n.thumb = s.HttpGifSearchItemDetail.toObject(e.thumb, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGifSearchItemDetail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.width = 0,
        e.prototype.height = 0,
        e.prototype.gifUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.width && e.hasOwnProperty("width") && t.uint32(8).uint32(e.width),
            null != e.height && e.hasOwnProperty("height") && t.uint32(16).uint32(e.height),
            null != e.gifUrl && e.hasOwnProperty("gifUrl") && t.uint32(26).string(e.gifUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGifSearchItemDetail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.width = e.uint32();
                    break;
                case 2:
                    r.height = e.uint32();
                    break;
                case 3:
                    r.gifUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGifSearchItemDetail)
                return e;
            var t = new s.HttpGifSearchItemDetail;
            return null != e.width && (t.width = e.width >>> 0),
            null != e.height && (t.height = e.height >>> 0),
            null != e.gifUrl && (t.gifUrl = String(e.gifUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.width = 0,
            n.height = 0,
            n.gifUrl = ""),
            null != e.width && e.hasOwnProperty("width") && (n.width = e.width),
            null != e.height && e.hasOwnProperty("height") && (n.height = e.height),
            null != e.gifUrl && e.hasOwnProperty("gifUrl") && (n.gifUrl = e.gifUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFileInfoImageItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.originImageInfo = null,
        e.prototype.thumbImageInfo = null,
        e.prototype.middleImageInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.originImageInfo && e.hasOwnProperty("originImageInfo") && s.CommonImageInfo.encode(e.originImageInfo, t.uint32(10).fork()).ldelim(),
            null != e.thumbImageInfo && e.hasOwnProperty("thumbImageInfo") && s.CommonImageInfo.encode(e.thumbImageInfo, t.uint32(18).fork()).ldelim(),
            null != e.middleImageInfo && e.hasOwnProperty("middleImageInfo") && s.CommonImageInfo.encode(e.middleImageInfo, t.uint32(26).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFileInfoImageItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.originImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.thumbImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                case 3:
                    r.middleImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFileInfoImageItem)
                return e;
            var t = new s.HttpFileInfoImageItem;
            if (null != e.originImageInfo) {
                if ("object" !== typeof e.originImageInfo)
                    throw TypeError(".HttpFileInfoImageItem.originImageInfo: object expected");
                t.originImageInfo = s.CommonImageInfo.fromObject(e.originImageInfo)
            }
            if (null != e.thumbImageInfo) {
                if ("object" !== typeof e.thumbImageInfo)
                    throw TypeError(".HttpFileInfoImageItem.thumbImageInfo: object expected");
                t.thumbImageInfo = s.CommonImageInfo.fromObject(e.thumbImageInfo)
            }
            if (null != e.middleImageInfo) {
                if ("object" !== typeof e.middleImageInfo)
                    throw TypeError(".HttpFileInfoImageItem.middleImageInfo: object expected");
                t.middleImageInfo = s.CommonImageInfo.fromObject(e.middleImageInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.originImageInfo = null,
            n.thumbImageInfo = null,
            n.middleImageInfo = null),
            null != e.originImageInfo && e.hasOwnProperty("originImageInfo") && (n.originImageInfo = s.CommonImageInfo.toObject(e.originImageInfo, t)),
            null != e.thumbImageInfo && e.hasOwnProperty("thumbImageInfo") && (n.thumbImageInfo = s.CommonImageInfo.toObject(e.thumbImageInfo, t)),
            null != e.middleImageInfo && e.hasOwnProperty("middleImageInfo") && (n.middleImageInfo = s.CommonImageInfo.toObject(e.middleImageInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFileUploadBlock = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.blockIndex = 0,
        e.prototype.chunkIndex = 0,
        e.prototype.chunkCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.blockIndex && e.hasOwnProperty("blockIndex") && t.uint32(8).uint32(e.blockIndex),
            null != e.chunkIndex && e.hasOwnProperty("chunkIndex") && t.uint32(16).uint32(e.chunkIndex),
            null != e.chunkCount && e.hasOwnProperty("chunkCount") && t.uint32(24).uint32(e.chunkCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFileUploadBlock;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.blockIndex = e.uint32();
                    break;
                case 2:
                    r.chunkIndex = e.uint32();
                    break;
                case 3:
                    r.chunkCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFileUploadBlock)
                return e;
            var t = new s.HttpFileUploadBlock;
            return null != e.blockIndex && (t.blockIndex = e.blockIndex >>> 0),
            null != e.chunkIndex && (t.chunkIndex = e.chunkIndex >>> 0),
            null != e.chunkCount && (t.chunkCount = e.chunkCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.blockIndex = 0,
            n.chunkIndex = 0,
            n.chunkCount = 0),
            null != e.blockIndex && e.hasOwnProperty("blockIndex") && (n.blockIndex = e.blockIndex),
            null != e.chunkIndex && e.hasOwnProperty("chunkIndex") && (n.chunkIndex = e.chunkIndex),
            null != e.chunkCount && e.hasOwnProperty("chunkCount") && (n.chunkCount = e.chunkCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpTaskInfo = function() {
        function e(e) {
            if (this.receiverMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskId = 0,
        e.prototype.taskType = 0,
        e.prototype.receiverMemberIds = a.emptyArray,
        e.prototype.content = "",
        e.prototype.sortIndex = 0,
        e.prototype.version = 0,
        e.prototype.finishTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(8).uint32(e.taskId),
            null != e.taskType && e.hasOwnProperty("taskType") && t.uint32(16).int32(e.taskType),
            null != e.receiverMemberIds && e.receiverMemberIds.length)
                for (var n = 0; n < e.receiverMemberIds.length; ++n)
                    s.CommonAtUserInfo.encode(e.receiverMemberIds[n], t.uint32(26).fork()).ldelim();
            return null != e.content && e.hasOwnProperty("content") && t.uint32(34).string(e.content),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && t.uint32(40).uint32(e.sortIndex),
            null != e.version && e.hasOwnProperty("version") && t.uint32(48).uint32(e.version),
            null != e.finishTimestamp && e.hasOwnProperty("finishTimestamp") && t.uint32(56).uint64(e.finishTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpTaskInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskId = e.uint32();
                    break;
                case 2:
                    r.taskType = e.int32();
                    break;
                case 3:
                    r.receiverMemberIds && r.receiverMemberIds.length || (r.receiverMemberIds = []),
                    r.receiverMemberIds.push(s.CommonAtUserInfo.decode(e, e.uint32()));
                    break;
                case 4:
                    r.content = e.string();
                    break;
                case 5:
                    r.sortIndex = e.uint32();
                    break;
                case 6:
                    r.version = e.uint32();
                    break;
                case 7:
                    r.finishTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpTaskInfo)
                return e;
            var t = new s.HttpTaskInfo;
            switch (null != e.taskId && (t.taskId = e.taskId >>> 0),
            e.taskType) {
            case "CommonTaskTypeNone":
            case 0:
                t.taskType = 0;
                break;
            case "CommonTaskTypeTask":
            case 1:
                t.taskType = 1;
                break;
            case "CommonTaskTypeGroup":
            case 2:
                t.taskType = 2;
                break
            }
            if (e.receiverMemberIds) {
                if (!Array.isArray(e.receiverMemberIds))
                    throw TypeError(".HttpTaskInfo.receiverMemberIds: array expected");
                t.receiverMemberIds = [];
                for (var n = 0; n < e.receiverMemberIds.length; ++n) {
                    if ("object" !== typeof e.receiverMemberIds[n])
                        throw TypeError(".HttpTaskInfo.receiverMemberIds: object expected");
                    t.receiverMemberIds[n] = s.CommonAtUserInfo.fromObject(e.receiverMemberIds[n])
                }
            }
            return null != e.content && (t.content = String(e.content)),
            null != e.sortIndex && (t.sortIndex = e.sortIndex >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            null != e.finishTimestamp && (a.Long ? (t.finishTimestamp = a.Long.fromValue(e.finishTimestamp)).unsigned = !0 : "string" === typeof e.finishTimestamp ? t.finishTimestamp = parseInt(e.finishTimestamp, 10) : "number" === typeof e.finishTimestamp ? t.finishTimestamp = e.finishTimestamp : "object" === typeof e.finishTimestamp && (t.finishTimestamp = new a.LongBits(e.finishTimestamp.low >>> 0,e.finishTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.receiverMemberIds = []),
            t.defaults)
                if (n.taskId = 0,
                n.taskType = t.enums === String ? "CommonTaskTypeNone" : 0,
                n.content = "",
                n.sortIndex = 0,
                n.version = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.finishTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.finishTimestamp = t.longs === String ? "0" : 0;
            if (null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.taskType && e.hasOwnProperty("taskType") && (n.taskType = t.enums === String ? s.CommonTaskType[e.taskType] : e.taskType),
            e.receiverMemberIds && e.receiverMemberIds.length) {
                n.receiverMemberIds = [];
                for (var o = 0; o < e.receiverMemberIds.length; ++o)
                    n.receiverMemberIds[o] = s.CommonAtUserInfo.toObject(e.receiverMemberIds[o], t)
            }
            return null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && (n.sortIndex = e.sortIndex),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.finishTimestamp && e.hasOwnProperty("finishTimestamp") && ("number" === typeof e.finishTimestamp ? n.finishTimestamp = t.longs === String ? String(e.finishTimestamp) : e.finishTimestamp : n.finishTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.finishTimestamp) : t.longs === Number ? new a.LongBits(e.finishTimestamp.low >>> 0,e.finishTimestamp.high >>> 0).toNumber(!0) : e.finishTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpTaskConversation = function() {
        function e(e) {
            if (this.groupOwnerId = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.name = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupOwnerId = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.name && e.hasOwnProperty("name") && t.uint32(26).string(e.name),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(34).string(e.thumbAvatarUrl),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(40).uint64(e.timestamp),
            null != e.groupOwnerId && e.groupOwnerId.length) {
                t.uint32(50).fork();
                for (var n = 0; n < e.groupOwnerId.length; ++n)
                    t.uint32(e.groupOwnerId[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpTaskConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.name = e.string();
                    break;
                case 4:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 5:
                    r.timestamp = e.uint64();
                    break;
                case 6:
                    if (r.groupOwnerId && r.groupOwnerId.length || (r.groupOwnerId = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.groupOwnerId.push(e.uint32())
                    } else
                        r.groupOwnerId.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpTaskConversation)
                return e;
            var t = new s.HttpTaskConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.name && (t.name = String(e.name)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            e.groupOwnerId) {
                if (!Array.isArray(e.groupOwnerId))
                    throw TypeError(".HttpTaskConversation.groupOwnerId: array expected");
                t.groupOwnerId = [];
                for (var n = 0; n < e.groupOwnerId.length; ++n)
                    t.groupOwnerId[n] = e.groupOwnerId[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupOwnerId = []),
            t.defaults)
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                n.name = "",
                n.thumbAvatarUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            if (null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            e.groupOwnerId && e.groupOwnerId.length) {
                n.groupOwnerId = [];
                for (var o = 0; o < e.groupOwnerId.length; ++o)
                    n.groupOwnerId[o] = e.groupOwnerId[o]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpLogItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.date = "",
        e.prototype.content = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.date && e.hasOwnProperty("date") && t.uint32(10).string(e.date),
            null != e.content && e.hasOwnProperty("content") && t.uint32(18).string(e.content),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpLogItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.date = e.string();
                    break;
                case 2:
                    r.content = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpLogItem)
                return e;
            var t = new s.HttpLogItem;
            return null != e.date && (t.date = String(e.date)),
            null != e.content && (t.content = String(e.content)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.date = "",
            n.content = ""),
            null != e.date && e.hasOwnProperty("date") && (n.date = e.date),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpQrCodePathParams = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "HttpQrCodePathParamsDeviceLoginType"] = 0,
        t[e[1] = "HttpQrCodePathParamsQRCodeAuthType"] = 1,
        t
    }(),
    s.HttpSetPushInfoStyle = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "HttpSetPushInfoStyleNotificationMsg"] = 0,
        t[e[1] = "HttpSetPushInfoStylePassThroughMsg"] = 1,
        t
    }(),
    s.HttpErrorParams = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "HttpErrorParamsFavoriteTotalByteLimit"] = 0,
        t[e[1] = "HttpErrorParamsFavoriteSingleByteLimit"] = 1,
        t[e[2] = "HttpErrorParamsThirdLoginErrorInfo"] = 2,
        t[e[3] = "HttpErrorParamsFavoriteTotalCountLimit"] = 3,
        t[e[4] = "HttpErrorParamsVoteEndTimeLimit"] = 4,
        t[e[5] = "HttpErrorParamsTextLength"] = 5,
        t[e[6] = "HttpErrorParamsUnFinishTaskCountLimit"] = 6,
        t[e[7] = "HttpErrorParamsFormEndTimeLimit"] = 7,
        t[e[8] = "HttpErrorParamsFormDataLimit"] = 8,
        t[e[9] = "HttpErrorParamsGroupMemberLimit"] = 9,
        t[e[10] = "HttpErrorParamsGroupSyncMessageLimit"] = 10,
        t[e[11] = "HttpErrorParamsGroupAdminLimit"] = 11,
        t[e[12] = "HttpErrorParamsGroupAdminOp"] = 12,
        t[e[13] = "HttpErrorParamsGroupInviteConfirmStatus"] = 13,
        t[e[14] = "HttpErrorParamsGroupDeleteMemberInDepartName"] = 14,
        t
    }(),
    s.HttpResponseCode = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "HttpResponseCodeSuccess"] = 0,
        t[e[22e3] = "HttpResponseCodeFailed"] = 22e3,
        t[e[100] = "HttpResponseCodeParamError"] = 100,
        t[e[101] = "HttpResponseCodeSendSMSError"] = 101,
        t[e[102] = "HttpResponseCodeSendEmailError"] = 102,
        t[e[103] = "HttpResponseCodeResgiterCodeError"] = 103,
        t[e[104] = "HttpResponseCodeResgiterAccoutExisted"] = 104,
        t[e[105] = "HttpResponseCodeAccountNotExisted"] = 105,
        t[e[106] = "HttpResponseCodePasswordError"] = 106,
        t[e[107] = "HttpResponseCodeTokenError"] = 107,
        t[e[108] = "HttpResponseCodeNewPasswordIsEqualOld"] = 108,
        t[e[109] = "HttpResponseCodeForgetCodeError"] = 109,
        t[e[110] = "HttpResponseCodePasswordTooShort"] = 110,
        t[e[111] = "HttpResponseCodePasswordTooLong"] = 111,
        t[e[112] = "HttpResponseCodePasswordTooSimple"] = 112,
        t[e[113] = "HttpResponseCodeSendFriendRequestFirst"] = 113,
        t[e[114] = "HttpResponseCodeUserIsNotYourFriend"] = 114,
        t[e[115] = "HttpResponseCodeQRCodeExpiredOrNotExists"] = 115,
        t[e[116] = "HttpResponseCodeQRCodeFavoriteOverloadLimit"] = 116,
        t[e[117] = "HttpResponseCodeAccountIllegal"] = 117,
        t[e[118] = "HttpResponseCodeWebLoginQRCodeExpiredOrNotExists"] = 118,
        t[e[119] = "HttpResponseCodeHbOfficeAccountApiError"] = 119,
        t[e[120] = "HttpResponseCodeServerAccountTypeError"] = 120,
        t[e[121] = "HttpResponseCodeFavoriteMessageNotExists"] = 121,
        t[e[122] = "HttpResponseCodeAccountLoginInfoNotExisted"] = 122,
        t[e[123] = "HttpResponseCodeAppKeyNotExist"] = 123,
        t[e[124] = "HttpResponseCodeServerAccountNameExisted"] = 124,
        t[e[125] = "HttpResponseCodeUserNotSupportAddFriend"] = 125,
        t[e[126] = "HttpResponseCodeGroupNotSupportUserAddFriend"] = 126,
        t[e[130] = "HttpResponseCodeEmotionLimitOverload"] = 130,
        t[e[131] = "HttpResponseCodeHuobanOfficeError"] = 131,
        t[e[132] = "HttpResponseCodeCompanyNotExists"] = 132,
        t[e[133] = "HttpResponseCodeParamTooLong"] = 133,
        t[e[134] = "HttpResponseCodeCnrLoginError"] = 134,
        t[e[135] = "HttpResponseCodeTranslateInvalidText"] = 135,
        t[e[136] = "HttpResponseCodeFavoriteCountOverloadLimit"] = 136,
        t[e[137] = "HttpResponseCodeGroupMemberGetHistoryTypeStateClose"] = 137,
        t[e[138] = "HttpResponseCodeAccountAtLeastHasOneAccount"] = 138,
        t[e[139] = "HttpResponseCodeHbOfficeAccountNotBind"] = 139,
        t[e[140] = "HttpResponseCodeHbOfficeAccountHasBindOtherAccount"] = 140,
        t[e[141] = "HttpResponseCodeTextLengthOverload"] = 141,
        t[e[142] = "HttpResponseCodeSendSMSFrequentlyError"] = 142,
        t[e[143] = "HttpResponseCodeSendSMSOverload"] = 143,
        t[e[144] = "HttpResponseCodeFileNameTooLong"] = 144,
        t[e[145] = "HttpResponseCodeMessageNotExists"] = 145,
        t[e[146] = "HttpResponseCodeBindUserIdNotExists"] = 146,
        t[e[150] = "HttpResponseCodeCreateGroupInternalError"] = 150,
        t[e[151] = "HttpResponseCodeCreateGroupMemberNumberInvalid"] = 151,
        t[e[152] = "HttpResponseCodeNotGroupOwnerOpError"] = 152,
        t[e[153] = "HttpResponseCodeGroupDissolveHasMemberError"] = 153,
        t[e[154] = "HttpResponseCodeGroupNotExistMember"] = 154,
        t[e[155] = "HttpResponseCodeGroupNotExist"] = 155,
        t[e[156] = "HttpResponseCodeGroupInviteNotExist"] = 156,
        t[e[157] = "HttpResponseCodeGroupInviteHasConfirm"] = 157,
        t[e[158] = "HttpResponseCodeGroupInviteExpired"] = 158,
        t[e[159] = "HttpResponseCodeGroupCannotJoinByQRCodeWithReasonInvitationVerificationOpen"] = 159,
        t[e[160] = "HttpResponseCodeGroupMemberHasInGroup"] = 160,
        t[e[161] = "HttpResponseCodeCreateGroupRobotNumberInvalid"] = 161,
        t[e[162] = "HttpResponseCodeCreateGroupRobotNotExist"] = 162,
        t[e[163] = "HttpResponseCodeUserInBlackList"] = 163,
        t[e[164] = "HttpResponseCodeGroupSyncMessageLimitError"] = 164,
        t[e[165] = "HttpResponseCodeGroupAdminLimitError"] = 165,
        t[e[166] = "HttpResponseCodeGroupSetWhiteListError"] = 166,
        t[e[167] = "HttpResponseCodeGroupAddWhiteListExistBlackListMemberError"] = 167,
        t[e[168] = "HttpResponseCodeGroupAllMembersNotAllowSendMessageError"] = 168,
        t[e[169] = "HttpResponseCodeGroupMemberInBlackListError"] = 169,
        t[e[170] = "HttpResponseCodeGroupMembersNotInGroupError"] = 170,
        t[e[171] = "HttpResponseCodeGroupMembersHasAdminOrOwnerError"] = 171,
        t[e[20001] = "HttpResponseCodeCreateGroupMemberNumberLessThanMinLimitError"] = 20001,
        t[e[20002] = "HttpResponseCodeGroupNotSupportDissolveError"] = 20002,
        t[e[20003] = "HttpResponseCodeGroupMemberNotLeaveGroupError"] = 20003,
        t[e[20004] = "HttpResponseCodeGroupUpgradeError"] = 20004,
        t[e[20005] = "HttpResponseCodeGroupOwnerNotInCompanyError"] = 20005,
        t[e[20006] = "HttpResponseCodeGroupAddMemberNotInCompanyError"] = 20006,
        t[e[20007] = "HttpResponseCodeGroupDeleteDepartmentHasItSelfError"] = 20007,
        t[e[20008] = "HttpResponseCodeGroupDeleteDepartmentHasOwnerError"] = 20008,
        t[e[20009] = "HttpResponseCodeGroupDeleteDepartmentHasMySelfError"] = 20009,
        t[e[20010] = "HttpResponseCodeGroupDeleteMemberHasInDepartmentError"] = 20010,
        t[e[20011] = "HttpResponseCodeGroupSetQRCodeExpiredTimestampLessCurrentTimestampError"] = 20011,
        t[e[20012] = "HttpResponseCodeGroupQRCodeStopUsingError"] = 20012,
        t[e[20013] = "HttpResponseCodeUserJoinCompanyGroupNotInCompanyError"] = 20013,
        t[e[20014] = "HttpResponseCodeGroupInBlackListError"] = 20014,
        t[e[20015] = "HttpResponseCodeMessageHasSensitiveWordsError"] = 20015,
        t[e[20016] = "HttpResponseCodeGroupAppealHasMemberSubmitError"] = 20016,
        t[e[20017] = "HttpResponseCodeGroupNotInBlackListError"] = 20017,
        t[e[173] = "HttpResponseCodeVerificationCodeError"] = 173,
        t[e[174] = "HttpResponseCodeAdminPhoneNumberRepeat"] = 174,
        t[e[175] = "HttpResponseCodeResgiterCodeExpired"] = 175,
        t[e[180] = "HttpResponseCodeVoteNotExistOrDelete"] = 180,
        t[e[181] = "HttpResponseCodeVoteHasVoted"] = 181,
        t[e[182] = "HttpResponseCodeVoteOptionNotExist"] = 182,
        t[e[183] = "HttpResponseCodeVoteUpdateFailed"] = 183,
        t[e[184] = "HttpResponseCodeVoteFinished"] = 184,
        t[e[185] = "HttpResponseCodeVoteOptionIsNull"] = 185,
        t[e[186] = "HttpResponseCodeVoteOptionLimitError"] = 186,
        t[e[187] = "HttpResponseCodeVoteUserNotSender"] = 187,
        t[e[188] = "HttpResponseCodeVoteEndTimeHasNotArrived"] = 188,
        t[e[189] = "HttpResponseCodeVoteEndTimeLessThanMinMinute"] = 189,
        t[e[190] = "HttpResponseCodeVoteAnonymousDetailForbidden"] = 190,
        t[e[191] = "HttpResponseCodeVoteContentUpdate"] = 191,
        t[e[200] = "HttpResponseCodeServiceAccountAuthError"] = 200,
        t[e[201] = "HttpResponseCodeServiceAccountMessageError"] = 201,
        t[e[202] = "HttpResponseCodeServiceAccountNotOpen"] = 202,
        t[e[203] = "HttpResponseCodeServiceAccountUnfollowError"] = 203,
        t[e[204] = "HttpResponseCodeServiceAccountCanNotEdit"] = 204,
        t[e[205] = "HttpResponseCodeServiceAccountMenuNotExists"] = 205,
        t[e[210] = "HttpResponseCodeTaskUnFinishCountOverloadLimit"] = 210,
        t[e[211] = "HttpResponseCodeTaskNotExistOrDelete"] = 211,
        t[e[212] = "HttpResponseCodeTaskConvertGroup"] = 212,
        t[e[213] = "HttpResponseCodeTaskContentUpdate"] = 213,
        t[e[214] = "HttpResponseCodeTaskLocking"] = 214,
        t[e[215] = "HttpResponseCodeTaskLockTokenError"] = 215,
        t[e[220] = "HttpResponseCodeFormNotExistOrDelete"] = 220,
        t[e[221] = "HttpResponseCodeFormDataNotExistOrDelete"] = 221,
        t[e[222] = "HttpResponseCodeFormUserNotSender"] = 222,
        t[e[223] = "HttpResponseCodeFormUpdateFailed"] = 223,
        t[e[224] = "HttpResponseCodeFormFinished"] = 224,
        t[e[225] = "HttpResponseCodeFormEndTimeLessThanMinMinute"] = 225,
        t[e[226] = "HttpResponseCodeFormEndTimeHasNotArrived"] = 226,
        t[e[227] = "HttpResponseCodeFormLimitError"] = 227,
        t[e[228] = "HttpResponseCodeFormColumnDataTypeError"] = 228,
        t[e[229] = "HttpResponseCodeFormDataTextLengthOverloadError"] = 229,
        t[e[230] = "HttpResponseCodeFormNotSupportMoveDataToUngrouped"] = 230,
        t[e[231] = "HttpResponseCodeFormNotFormatDataError"] = 231,
        t[e[250] = "HttpResponseCodeCallGetTokenError"] = 250,
        t[e[251] = "HttpResponseCodeCallCallNotExists"] = 251,
        t[e[270] = "HttpResponseCodePayTypeNotSupport"] = 270,
        t[e[271] = "HttpResponseCodePayCreateOrderError"] = 271,
        t[e[300] = "HttpResponseCodeIMServerLicenseExpired"] = 300,
        t[e[301] = "HttpResponseCodeIMServerInfoError"] = 301,
        t[e[302] = "HttpResponseCodeExchangeServerApiError"] = 302,
        t[e[303] = "HttpResponseCodeRobotNotExist"] = 303,
        t[e[304] = "HttpResponseCodeRobotTypeNotSupport"] = 304,
        t[e[305] = "HttpResponseCodeRobotTemplateMessageNotSupport"] = 305,
        t[e[306] = "HttpResponseCodeRobotMessageParseError"] = 306,
        t[e[307] = "HttpResponseCodeIMServerAliasIsUsed"] = 307,
        t[e[308] = "HttpResponseCodeIMServerCompanyAuthError"] = 308,
        t[e[350] = "HttpResponseCodeWeChatCodeLoginError"] = 350,
        t[e[351] = "HttpResponseCodeWeChatGetUserInfoError"] = 351,
        t[e[352] = "HttpResponseCodeWeChatGetAccessTokenError"] = 352,
        t[e[353] = "HttpResponseCodeWeChatGetJSTicketError"] = 353,
        t[e[500] = "HttpResponseCodeServerCrash"] = 500,
        t[e[501] = "HttpResponseCodeDatabaseError"] = 501,
        t[e[502] = "HttpResponseCodeApiNotFound"] = 502,
        t[e[503] = "HttpResponseCodeInternalSetOfflineFail"] = 503,
        t[e[601] = "HttpResponseCodeAdminNoPersmission"] = 601,
        t[e[602] = "HttpResponseCodeAdminParantDepartmentNotExists"] = 602,
        t[e[603] = "HttpResponseCodeAdminDepartmentNameRepeat"] = 603,
        t[e[604] = "HttpResponseCodeAdminDepartmentHasMember"] = 604,
        t[e[605] = "HttpResponseCodeAdminDepartmentNotExists"] = 605,
        t[e[606] = "HttpResponseCodeAdminCompanyMemberNotExists"] = 606,
        t[e[607] = "HttpResponseCodeAdminCompanyMemberExists"] = 607,
        t[e[621] = "HttpResponseCodeAdminServerContainerNotExists"] = 621,
        t[e[640] = "HttpResponseCodeAdminImageWrongSize"] = 640,
        t[e[641] = "HttpResponseCodeAdminImageWrongFormat"] = 641,
        t[e[642] = "HttpResponseCodeAdminCanNotChangeTabType"] = 642,
        t[e[651] = "HttpResponseCodeAdminAppAuthorizationError"] = 651,
        t[e[652] = "HttpResponseCodeAdminAppAuthorizationDomainNotMatch"] = 652,
        t[e[653] = "HttpResponseCodeAdminAppAuthTokenError"] = 653,
        t[e[654] = "HttpResponseCodeAdminSendSingleMessageError"] = 654,
        t[e[655] = "HttpResponseCodeAdminThirdServerNoResponse"] = 655,
        t[e[656] = "HttpResponseCodeAdminThirdServerError"] = 656,
        t[e[701] = "HttpResponseCodeCorporationServerIdNotExists"] = 701,
        t[e[702] = "HttpResponseCodeCorporationAppNameRepeat"] = 702,
        t[e[703] = "HttpResponseCodeCorporationServerIdCombineRepeat"] = 703,
        t[e[704] = "HttpResponseCodeCorporationServerIdNotBind"] = 704,
        t[e[705] = "HttpResponseCodeCorporationServerNotFoundByAlias"] = 705,
        t[e[706] = "HttpResponseCodeCorporationServerPasswordIsWrong"] = 706,
        t[e[707] = "HttpResponseCodeCorporationServerNotConfigCompletion"] = 707,
        t[e[708] = "HttpResponseCodeCorporationServerNotOpen"] = 708,
        t[e[709] = "HttpResponseCodeCorporationServerNotFoundByServerId"] = 709,
        t[e[710] = "HttpResponseCodeCorporationServerPackageAppProcessing"] = 710,
        t[e[711] = "HttpResponseCodeCorporationServerPackageAppErrorNotSetIconOrSplash"] = 711,
        t[e[10001] = "HttpResponseCodeSDKTempAuthError"] = 10001,
        t[e[10002] = "HttpResponseCodeSDKTokenError"] = 10002,
        t[e[10003] = "HttpResponseCodeSDKCreateTokenError"] = 10003,
        t[e[10004] = "HttpResponseCodeSDKTicketError"] = 10004,
        t[e[10005] = "HttpResponseCodeSDKTicketUserNotEqual"] = 10005,
        t[e[21001] = "HttpResponseCodeAdminAuthQRCodeExpiredOrNotExists"] = 21001,
        t[e[21003] = "HttpResponseCodeAdminAccountHasBindError"] = 21003,
        t[e[21004] = "HttpResponseCodeAdminAuthQRCodeInvalidError"] = 21004,
        t[e[21005] = "HttpResponseCodeAdminAuthQRCodeAuthError"] = 21005,
        t[e[21006] = "HttpResponseCodeUserHasBindOtherAdminAccountError"] = 21006,
        t
    }(),
    s.HttpRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.session = null,
        e.prototype.body = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.session && e.hasOwnProperty("session") && s.HttpRequestSession.encode(e.session, t.uint32(10).fork()).ldelim(),
            null != e.body && e.hasOwnProperty("body") && s.HttpBody.encode(e.body, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.session = s.HttpRequestSession.decode(e, e.uint32());
                    break;
                case 2:
                    r.body = s.HttpBody.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequest)
                return e;
            var t = new s.HttpRequest;
            if (null != e.session) {
                if ("object" !== typeof e.session)
                    throw TypeError(".HttpRequest.session: object expected");
                t.session = s.HttpRequestSession.fromObject(e.session)
            }
            if (null != e.body) {
                if ("object" !== typeof e.body)
                    throw TypeError(".HttpRequest.body: object expected");
                t.body = s.HttpBody.fromObject(e.body)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.session = null,
            n.body = null),
            null != e.session && e.hasOwnProperty("session") && (n.session = s.HttpRequestSession.toObject(e.session, t)),
            null != e.body && e.hasOwnProperty("body") && (n.body = s.HttpBody.toObject(e.body, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.error = null,
        e.prototype.body = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.error && e.hasOwnProperty("error") && s.HttpError.encode(e.error, t.uint32(10).fork()).ldelim(),
            null != e.body && e.hasOwnProperty("body") && s.HttpBody.encode(e.body, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.error = s.HttpError.decode(e, e.uint32());
                    break;
                case 2:
                    r.body = s.HttpBody.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponse)
                return e;
            var t = new s.HttpResponse;
            if (null != e.error) {
                if ("object" !== typeof e.error)
                    throw TypeError(".HttpResponse.error: object expected");
                t.error = s.HttpError.fromObject(e.error)
            }
            if (null != e.body) {
                if ("object" !== typeof e.body)
                    throw TypeError(".HttpResponse.body: object expected");
                t.body = s.HttpBody.fromObject(e.body)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.error = null,
            n.body = null),
            null != e.error && e.hasOwnProperty("error") && (n.error = s.HttpError.toObject(e.error, t)),
            null != e.body && e.hasOwnProperty("body") && (n.body = s.HttpBody.toObject(e.body, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestSession = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.token = "",
        e.prototype.deviceType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.token && e.hasOwnProperty("token") && t.uint32(18).string(e.token),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(24).int32(e.deviceType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestSession;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.token = e.string();
                    break;
                case 3:
                    r.deviceType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestSession)
                return e;
            var t = new s.HttpRequestSession;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.token && (t.token = String(e.token)),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.token = "",
            n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpBody = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.bodyType = "",
        e.prototype.data = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.bodyType && e.hasOwnProperty("bodyType") && t.uint32(10).string(e.bodyType),
            null != e.data && e.hasOwnProperty("data") && t.uint32(18).bytes(e.data),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpBody;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.bodyType = e.string();
                    break;
                case 2:
                    r.data = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpBody)
                return e;
            var t = new s.HttpBody;
            return null != e.bodyType && (t.bodyType = String(e.bodyType)),
            null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.bodyType = "",
            t.bytes === String ? n.data = "" : (n.data = [],
            t.bytes !== Array && (n.data = a.newBuffer(n.data)))),
            null != e.bodyType && e.hasOwnProperty("bodyType") && (n.bodyType = e.bodyType),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpError = function() {
        function e(e) {
            if (this.params = {},
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.code = 0,
        e.prototype.info = "",
        e.prototype.params = a.emptyObject,
        e.prototype.text = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.code && e.hasOwnProperty("code") && t.uint32(8).int32(e.code),
            null != e.info && e.hasOwnProperty("info") && t.uint32(18).string(e.info),
            null != e.params && e.hasOwnProperty("params"))
                for (var n = Object.keys(e.params), r = 0; r < n.length; ++r)
                    t.uint32(26).fork().uint32(8).int32(n[r]).uint32(18).string(e.params[n[r]]).ldelim();
            return null != e.text && e.hasOwnProperty("text") && t.uint32(34).string(e.text),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n, r = void 0 === t ? e.len : e.pos + t, i = new s.HttpError;
            while (e.pos < r) {
                var u = e.uint32();
                switch (u >>> 3) {
                case 1:
                    i.code = e.int32();
                    break;
                case 2:
                    i.info = e.string();
                    break;
                case 3:
                    e.skip().pos++,
                    i.params === a.emptyObject && (i.params = {}),
                    n = e.int32(),
                    e.pos++,
                    i.params[n] = e.string();
                    break;
                case 4:
                    i.text = e.string();
                    break;
                default:
                    e.skipType(7 & u);
                    break
                }
            }
            return i
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpError)
                return e;
            var t = new s.HttpError;
            switch (e.code) {
            case "HttpResponseCodeSuccess":
            case 0:
                t.code = 0;
                break;
            case "HttpResponseCodeFailed":
            case 22e3:
                t.code = 22e3;
                break;
            case "HttpResponseCodeParamError":
            case 100:
                t.code = 100;
                break;
            case "HttpResponseCodeSendSMSError":
            case 101:
                t.code = 101;
                break;
            case "HttpResponseCodeSendEmailError":
            case 102:
                t.code = 102;
                break;
            case "HttpResponseCodeResgiterCodeError":
            case 103:
                t.code = 103;
                break;
            case "HttpResponseCodeResgiterAccoutExisted":
            case 104:
                t.code = 104;
                break;
            case "HttpResponseCodeAccountNotExisted":
            case 105:
                t.code = 105;
                break;
            case "HttpResponseCodePasswordError":
            case 106:
                t.code = 106;
                break;
            case "HttpResponseCodeTokenError":
            case 107:
                t.code = 107;
                break;
            case "HttpResponseCodeNewPasswordIsEqualOld":
            case 108:
                t.code = 108;
                break;
            case "HttpResponseCodeForgetCodeError":
            case 109:
                t.code = 109;
                break;
            case "HttpResponseCodePasswordTooShort":
            case 110:
                t.code = 110;
                break;
            case "HttpResponseCodePasswordTooLong":
            case 111:
                t.code = 111;
                break;
            case "HttpResponseCodePasswordTooSimple":
            case 112:
                t.code = 112;
                break;
            case "HttpResponseCodeSendFriendRequestFirst":
            case 113:
                t.code = 113;
                break;
            case "HttpResponseCodeUserIsNotYourFriend":
            case 114:
                t.code = 114;
                break;
            case "HttpResponseCodeQRCodeExpiredOrNotExists":
            case 115:
                t.code = 115;
                break;
            case "HttpResponseCodeQRCodeFavoriteOverloadLimit":
            case 116:
                t.code = 116;
                break;
            case "HttpResponseCodeAccountIllegal":
            case 117:
                t.code = 117;
                break;
            case "HttpResponseCodeWebLoginQRCodeExpiredOrNotExists":
            case 118:
                t.code = 118;
                break;
            case "HttpResponseCodeHbOfficeAccountApiError":
            case 119:
                t.code = 119;
                break;
            case "HttpResponseCodeServerAccountTypeError":
            case 120:
                t.code = 120;
                break;
            case "HttpResponseCodeFavoriteMessageNotExists":
            case 121:
                t.code = 121;
                break;
            case "HttpResponseCodeAccountLoginInfoNotExisted":
            case 122:
                t.code = 122;
                break;
            case "HttpResponseCodeAppKeyNotExist":
            case 123:
                t.code = 123;
                break;
            case "HttpResponseCodeServerAccountNameExisted":
            case 124:
                t.code = 124;
                break;
            case "HttpResponseCodeUserNotSupportAddFriend":
            case 125:
                t.code = 125;
                break;
            case "HttpResponseCodeGroupNotSupportUserAddFriend":
            case 126:
                t.code = 126;
                break;
            case "HttpResponseCodeEmotionLimitOverload":
            case 130:
                t.code = 130;
                break;
            case "HttpResponseCodeHuobanOfficeError":
            case 131:
                t.code = 131;
                break;
            case "HttpResponseCodeCompanyNotExists":
            case 132:
                t.code = 132;
                break;
            case "HttpResponseCodeParamTooLong":
            case 133:
                t.code = 133;
                break;
            case "HttpResponseCodeCnrLoginError":
            case 134:
                t.code = 134;
                break;
            case "HttpResponseCodeTranslateInvalidText":
            case 135:
                t.code = 135;
                break;
            case "HttpResponseCodeFavoriteCountOverloadLimit":
            case 136:
                t.code = 136;
                break;
            case "HttpResponseCodeGroupMemberGetHistoryTypeStateClose":
            case 137:
                t.code = 137;
                break;
            case "HttpResponseCodeAccountAtLeastHasOneAccount":
            case 138:
                t.code = 138;
                break;
            case "HttpResponseCodeHbOfficeAccountNotBind":
            case 139:
                t.code = 139;
                break;
            case "HttpResponseCodeHbOfficeAccountHasBindOtherAccount":
            case 140:
                t.code = 140;
                break;
            case "HttpResponseCodeTextLengthOverload":
            case 141:
                t.code = 141;
                break;
            case "HttpResponseCodeSendSMSFrequentlyError":
            case 142:
                t.code = 142;
                break;
            case "HttpResponseCodeSendSMSOverload":
            case 143:
                t.code = 143;
                break;
            case "HttpResponseCodeFileNameTooLong":
            case 144:
                t.code = 144;
                break;
            case "HttpResponseCodeMessageNotExists":
            case 145:
                t.code = 145;
                break;
            case "HttpResponseCodeBindUserIdNotExists":
            case 146:
                t.code = 146;
                break;
            case "HttpResponseCodeCreateGroupInternalError":
            case 150:
                t.code = 150;
                break;
            case "HttpResponseCodeCreateGroupMemberNumberInvalid":
            case 151:
                t.code = 151;
                break;
            case "HttpResponseCodeNotGroupOwnerOpError":
            case 152:
                t.code = 152;
                break;
            case "HttpResponseCodeGroupDissolveHasMemberError":
            case 153:
                t.code = 153;
                break;
            case "HttpResponseCodeGroupNotExistMember":
            case 154:
                t.code = 154;
                break;
            case "HttpResponseCodeGroupNotExist":
            case 155:
                t.code = 155;
                break;
            case "HttpResponseCodeGroupInviteNotExist":
            case 156:
                t.code = 156;
                break;
            case "HttpResponseCodeGroupInviteHasConfirm":
            case 157:
                t.code = 157;
                break;
            case "HttpResponseCodeGroupInviteExpired":
            case 158:
                t.code = 158;
                break;
            case "HttpResponseCodeGroupCannotJoinByQRCodeWithReasonInvitationVerificationOpen":
            case 159:
                t.code = 159;
                break;
            case "HttpResponseCodeGroupMemberHasInGroup":
            case 160:
                t.code = 160;
                break;
            case "HttpResponseCodeCreateGroupRobotNumberInvalid":
            case 161:
                t.code = 161;
                break;
            case "HttpResponseCodeCreateGroupRobotNotExist":
            case 162:
                t.code = 162;
                break;
            case "HttpResponseCodeUserInBlackList":
            case 163:
                t.code = 163;
                break;
            case "HttpResponseCodeGroupSyncMessageLimitError":
            case 164:
                t.code = 164;
                break;
            case "HttpResponseCodeGroupAdminLimitError":
            case 165:
                t.code = 165;
                break;
            case "HttpResponseCodeGroupSetWhiteListError":
            case 166:
                t.code = 166;
                break;
            case "HttpResponseCodeGroupAddWhiteListExistBlackListMemberError":
            case 167:
                t.code = 167;
                break;
            case "HttpResponseCodeGroupAllMembersNotAllowSendMessageError":
            case 168:
                t.code = 168;
                break;
            case "HttpResponseCodeGroupMemberInBlackListError":
            case 169:
                t.code = 169;
                break;
            case "HttpResponseCodeGroupMembersNotInGroupError":
            case 170:
                t.code = 170;
                break;
            case "HttpResponseCodeGroupMembersHasAdminOrOwnerError":
            case 171:
                t.code = 171;
                break;
            case "HttpResponseCodeCreateGroupMemberNumberLessThanMinLimitError":
            case 20001:
                t.code = 20001;
                break;
            case "HttpResponseCodeGroupNotSupportDissolveError":
            case 20002:
                t.code = 20002;
                break;
            case "HttpResponseCodeGroupMemberNotLeaveGroupError":
            case 20003:
                t.code = 20003;
                break;
            case "HttpResponseCodeGroupUpgradeError":
            case 20004:
                t.code = 20004;
                break;
            case "HttpResponseCodeGroupOwnerNotInCompanyError":
            case 20005:
                t.code = 20005;
                break;
            case "HttpResponseCodeGroupAddMemberNotInCompanyError":
            case 20006:
                t.code = 20006;
                break;
            case "HttpResponseCodeGroupDeleteDepartmentHasItSelfError":
            case 20007:
                t.code = 20007;
                break;
            case "HttpResponseCodeGroupDeleteDepartmentHasOwnerError":
            case 20008:
                t.code = 20008;
                break;
            case "HttpResponseCodeGroupDeleteDepartmentHasMySelfError":
            case 20009:
                t.code = 20009;
                break;
            case "HttpResponseCodeGroupDeleteMemberHasInDepartmentError":
            case 20010:
                t.code = 20010;
                break;
            case "HttpResponseCodeGroupSetQRCodeExpiredTimestampLessCurrentTimestampError":
            case 20011:
                t.code = 20011;
                break;
            case "HttpResponseCodeGroupQRCodeStopUsingError":
            case 20012:
                t.code = 20012;
                break;
            case "HttpResponseCodeUserJoinCompanyGroupNotInCompanyError":
            case 20013:
                t.code = 20013;
                break;
            case "HttpResponseCodeGroupInBlackListError":
            case 20014:
                t.code = 20014;
                break;
            case "HttpResponseCodeMessageHasSensitiveWordsError":
            case 20015:
                t.code = 20015;
                break;
            case "HttpResponseCodeGroupAppealHasMemberSubmitError":
            case 20016:
                t.code = 20016;
                break;
            case "HttpResponseCodeGroupNotInBlackListError":
            case 20017:
                t.code = 20017;
                break;
            case "HttpResponseCodeVerificationCodeError":
            case 173:
                t.code = 173;
                break;
            case "HttpResponseCodeAdminPhoneNumberRepeat":
            case 174:
                t.code = 174;
                break;
            case "HttpResponseCodeResgiterCodeExpired":
            case 175:
                t.code = 175;
                break;
            case "HttpResponseCodeVoteNotExistOrDelete":
            case 180:
                t.code = 180;
                break;
            case "HttpResponseCodeVoteHasVoted":
            case 181:
                t.code = 181;
                break;
            case "HttpResponseCodeVoteOptionNotExist":
            case 182:
                t.code = 182;
                break;
            case "HttpResponseCodeVoteUpdateFailed":
            case 183:
                t.code = 183;
                break;
            case "HttpResponseCodeVoteFinished":
            case 184:
                t.code = 184;
                break;
            case "HttpResponseCodeVoteOptionIsNull":
            case 185:
                t.code = 185;
                break;
            case "HttpResponseCodeVoteOptionLimitError":
            case 186:
                t.code = 186;
                break;
            case "HttpResponseCodeVoteUserNotSender":
            case 187:
                t.code = 187;
                break;
            case "HttpResponseCodeVoteEndTimeHasNotArrived":
            case 188:
                t.code = 188;
                break;
            case "HttpResponseCodeVoteEndTimeLessThanMinMinute":
            case 189:
                t.code = 189;
                break;
            case "HttpResponseCodeVoteAnonymousDetailForbidden":
            case 190:
                t.code = 190;
                break;
            case "HttpResponseCodeVoteContentUpdate":
            case 191:
                t.code = 191;
                break;
            case "HttpResponseCodeServiceAccountAuthError":
            case 200:
                t.code = 200;
                break;
            case "HttpResponseCodeServiceAccountMessageError":
            case 201:
                t.code = 201;
                break;
            case "HttpResponseCodeServiceAccountNotOpen":
            case 202:
                t.code = 202;
                break;
            case "HttpResponseCodeServiceAccountUnfollowError":
            case 203:
                t.code = 203;
                break;
            case "HttpResponseCodeServiceAccountCanNotEdit":
            case 204:
                t.code = 204;
                break;
            case "HttpResponseCodeServiceAccountMenuNotExists":
            case 205:
                t.code = 205;
                break;
            case "HttpResponseCodeTaskUnFinishCountOverloadLimit":
            case 210:
                t.code = 210;
                break;
            case "HttpResponseCodeTaskNotExistOrDelete":
            case 211:
                t.code = 211;
                break;
            case "HttpResponseCodeTaskConvertGroup":
            case 212:
                t.code = 212;
                break;
            case "HttpResponseCodeTaskContentUpdate":
            case 213:
                t.code = 213;
                break;
            case "HttpResponseCodeTaskLocking":
            case 214:
                t.code = 214;
                break;
            case "HttpResponseCodeTaskLockTokenError":
            case 215:
                t.code = 215;
                break;
            case "HttpResponseCodeFormNotExistOrDelete":
            case 220:
                t.code = 220;
                break;
            case "HttpResponseCodeFormDataNotExistOrDelete":
            case 221:
                t.code = 221;
                break;
            case "HttpResponseCodeFormUserNotSender":
            case 222:
                t.code = 222;
                break;
            case "HttpResponseCodeFormUpdateFailed":
            case 223:
                t.code = 223;
                break;
            case "HttpResponseCodeFormFinished":
            case 224:
                t.code = 224;
                break;
            case "HttpResponseCodeFormEndTimeLessThanMinMinute":
            case 225:
                t.code = 225;
                break;
            case "HttpResponseCodeFormEndTimeHasNotArrived":
            case 226:
                t.code = 226;
                break;
            case "HttpResponseCodeFormLimitError":
            case 227:
                t.code = 227;
                break;
            case "HttpResponseCodeFormColumnDataTypeError":
            case 228:
                t.code = 228;
                break;
            case "HttpResponseCodeFormDataTextLengthOverloadError":
            case 229:
                t.code = 229;
                break;
            case "HttpResponseCodeFormNotSupportMoveDataToUngrouped":
            case 230:
                t.code = 230;
                break;
            case "HttpResponseCodeFormNotFormatDataError":
            case 231:
                t.code = 231;
                break;
            case "HttpResponseCodeCallGetTokenError":
            case 250:
                t.code = 250;
                break;
            case "HttpResponseCodeCallCallNotExists":
            case 251:
                t.code = 251;
                break;
            case "HttpResponseCodePayTypeNotSupport":
            case 270:
                t.code = 270;
                break;
            case "HttpResponseCodePayCreateOrderError":
            case 271:
                t.code = 271;
                break;
            case "HttpResponseCodeIMServerLicenseExpired":
            case 300:
                t.code = 300;
                break;
            case "HttpResponseCodeIMServerInfoError":
            case 301:
                t.code = 301;
                break;
            case "HttpResponseCodeExchangeServerApiError":
            case 302:
                t.code = 302;
                break;
            case "HttpResponseCodeRobotNotExist":
            case 303:
                t.code = 303;
                break;
            case "HttpResponseCodeRobotTypeNotSupport":
            case 304:
                t.code = 304;
                break;
            case "HttpResponseCodeRobotTemplateMessageNotSupport":
            case 305:
                t.code = 305;
                break;
            case "HttpResponseCodeRobotMessageParseError":
            case 306:
                t.code = 306;
                break;
            case "HttpResponseCodeIMServerAliasIsUsed":
            case 307:
                t.code = 307;
                break;
            case "HttpResponseCodeIMServerCompanyAuthError":
            case 308:
                t.code = 308;
                break;
            case "HttpResponseCodeWeChatCodeLoginError":
            case 350:
                t.code = 350;
                break;
            case "HttpResponseCodeWeChatGetUserInfoError":
            case 351:
                t.code = 351;
                break;
            case "HttpResponseCodeWeChatGetAccessTokenError":
            case 352:
                t.code = 352;
                break;
            case "HttpResponseCodeWeChatGetJSTicketError":
            case 353:
                t.code = 353;
                break;
            case "HttpResponseCodeServerCrash":
            case 500:
                t.code = 500;
                break;
            case "HttpResponseCodeDatabaseError":
            case 501:
                t.code = 501;
                break;
            case "HttpResponseCodeApiNotFound":
            case 502:
                t.code = 502;
                break;
            case "HttpResponseCodeInternalSetOfflineFail":
            case 503:
                t.code = 503;
                break;
            case "HttpResponseCodeAdminNoPersmission":
            case 601:
                t.code = 601;
                break;
            case "HttpResponseCodeAdminParantDepartmentNotExists":
            case 602:
                t.code = 602;
                break;
            case "HttpResponseCodeAdminDepartmentNameRepeat":
            case 603:
                t.code = 603;
                break;
            case "HttpResponseCodeAdminDepartmentHasMember":
            case 604:
                t.code = 604;
                break;
            case "HttpResponseCodeAdminDepartmentNotExists":
            case 605:
                t.code = 605;
                break;
            case "HttpResponseCodeAdminCompanyMemberNotExists":
            case 606:
                t.code = 606;
                break;
            case "HttpResponseCodeAdminCompanyMemberExists":
            case 607:
                t.code = 607;
                break;
            case "HttpResponseCodeAdminServerContainerNotExists":
            case 621:
                t.code = 621;
                break;
            case "HttpResponseCodeAdminImageWrongSize":
            case 640:
                t.code = 640;
                break;
            case "HttpResponseCodeAdminImageWrongFormat":
            case 641:
                t.code = 641;
                break;
            case "HttpResponseCodeAdminCanNotChangeTabType":
            case 642:
                t.code = 642;
                break;
            case "HttpResponseCodeAdminAppAuthorizationError":
            case 651:
                t.code = 651;
                break;
            case "HttpResponseCodeAdminAppAuthorizationDomainNotMatch":
            case 652:
                t.code = 652;
                break;
            case "HttpResponseCodeAdminAppAuthTokenError":
            case 653:
                t.code = 653;
                break;
            case "HttpResponseCodeAdminSendSingleMessageError":
            case 654:
                t.code = 654;
                break;
            case "HttpResponseCodeAdminThirdServerNoResponse":
            case 655:
                t.code = 655;
                break;
            case "HttpResponseCodeAdminThirdServerError":
            case 656:
                t.code = 656;
                break;
            case "HttpResponseCodeCorporationServerIdNotExists":
            case 701:
                t.code = 701;
                break;
            case "HttpResponseCodeCorporationAppNameRepeat":
            case 702:
                t.code = 702;
                break;
            case "HttpResponseCodeCorporationServerIdCombineRepeat":
            case 703:
                t.code = 703;
                break;
            case "HttpResponseCodeCorporationServerIdNotBind":
            case 704:
                t.code = 704;
                break;
            case "HttpResponseCodeCorporationServerNotFoundByAlias":
            case 705:
                t.code = 705;
                break;
            case "HttpResponseCodeCorporationServerPasswordIsWrong":
            case 706:
                t.code = 706;
                break;
            case "HttpResponseCodeCorporationServerNotConfigCompletion":
            case 707:
                t.code = 707;
                break;
            case "HttpResponseCodeCorporationServerNotOpen":
            case 708:
                t.code = 708;
                break;
            case "HttpResponseCodeCorporationServerNotFoundByServerId":
            case 709:
                t.code = 709;
                break;
            case "HttpResponseCodeCorporationServerPackageAppProcessing":
            case 710:
                t.code = 710;
                break;
            case "HttpResponseCodeCorporationServerPackageAppErrorNotSetIconOrSplash":
            case 711:
                t.code = 711;
                break;
            case "HttpResponseCodeSDKTempAuthError":
            case 10001:
                t.code = 10001;
                break;
            case "HttpResponseCodeSDKTokenError":
            case 10002:
                t.code = 10002;
                break;
            case "HttpResponseCodeSDKCreateTokenError":
            case 10003:
                t.code = 10003;
                break;
            case "HttpResponseCodeSDKTicketError":
            case 10004:
                t.code = 10004;
                break;
            case "HttpResponseCodeSDKTicketUserNotEqual":
            case 10005:
                t.code = 10005;
                break;
            case "HttpResponseCodeAdminAuthQRCodeExpiredOrNotExists":
            case 21001:
                t.code = 21001;
                break;
            case "HttpResponseCodeAdminAccountHasBindError":
            case 21003:
                t.code = 21003;
                break;
            case "HttpResponseCodeAdminAuthQRCodeInvalidError":
            case 21004:
                t.code = 21004;
                break;
            case "HttpResponseCodeAdminAuthQRCodeAuthError":
            case 21005:
                t.code = 21005;
                break;
            case "HttpResponseCodeUserHasBindOtherAdminAccountError":
            case 21006:
                t.code = 21006;
                break
            }
            if (null != e.info && (t.info = String(e.info)),
            e.params) {
                if ("object" !== typeof e.params)
                    throw TypeError(".HttpError.params: object expected");
                t.params = {};
                for (var n = Object.keys(e.params), r = 0; r < n.length; ++r)
                    t.params[n[r]] = String(e.params[n[r]])
            }
            return null != e.text && (t.text = String(e.text)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n, r = {};
            if ((t.objects || t.defaults) && (r.params = {}),
            t.defaults && (r.code = t.enums === String ? "HttpResponseCodeSuccess" : 0,
            r.info = "",
            r.text = ""),
            null != e.code && e.hasOwnProperty("code") && (r.code = t.enums === String ? s.HttpResponseCode[e.code] : e.code),
            null != e.info && e.hasOwnProperty("info") && (r.info = e.info),
            e.params && (n = Object.keys(e.params)).length) {
                r.params = {};
                for (var o = 0; o < n.length; ++o)
                    r.params[n[o]] = e.params[n[o]]
            }
            return null != e.text && e.hasOwnProperty("text") && (r.text = e.text),
            r
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatch = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.prototype.concurrent = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpRequestBodyBatchItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return null != e.concurrent && e.hasOwnProperty("concurrent") && t.uint32(16).bool(e.concurrent),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatch;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpRequestBodyBatchItem.decode(e, e.uint32()));
                    break;
                case 2:
                    r.concurrent = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatch)
                return e;
            var t = new s.HttpRequestBodyBatch;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpRequestBodyBatch.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpRequestBodyBatch.items: object expected");
                    t.items[n] = s.HttpRequestBodyBatchItem.fromObject(e.items[n])
                }
            }
            return null != e.concurrent && (t.concurrent = Boolean(e.concurrent)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.concurrent = !1),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpRequestBodyBatchItem.toObject(e.items[r], t)
            }
            return null != e.concurrent && e.hasOwnProperty("concurrent") && (n.concurrent = e.concurrent),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatch = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpResponseBodyBatchItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatch;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpResponseBodyBatchItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatch)
                return e;
            var t = new s.HttpResponseBodyBatch;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyBatch.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyBatch.items: object expected");
                    t.items[n] = s.HttpResponseBodyBatchItem.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpResponseBodyBatchItem.toObject(e.items[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.path = "",
        e.prototype.request = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.path && e.hasOwnProperty("path") && t.uint32(10).string(e.path),
            null != e.request && e.hasOwnProperty("request") && s.HttpRequest.encode(e.request, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.path = e.string();
                    break;
                case 2:
                    r.request = s.HttpRequest.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchItem)
                return e;
            var t = new s.HttpRequestBodyBatchItem;
            if (null != e.path && (t.path = String(e.path)),
            null != e.request) {
                if ("object" !== typeof e.request)
                    throw TypeError(".HttpRequestBodyBatchItem.request: object expected");
                t.request = s.HttpRequest.fromObject(e.request)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.path = "",
            n.request = null),
            null != e.path && e.hasOwnProperty("path") && (n.path = e.path),
            null != e.request && e.hasOwnProperty("request") && (n.request = s.HttpRequest.toObject(e.request, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.path = "",
        e.prototype.response = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.path && e.hasOwnProperty("path") && t.uint32(10).string(e.path),
            null != e.response && e.hasOwnProperty("response") && s.HttpResponse.encode(e.response, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.path = e.string();
                    break;
                case 2:
                    r.response = s.HttpResponse.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchItem)
                return e;
            var t = new s.HttpResponseBodyBatchItem;
            if (null != e.path && (t.path = String(e.path)),
            null != e.response) {
                if ("object" !== typeof e.response)
                    throw TypeError(".HttpResponseBodyBatchItem.response: object expected");
                t.response = s.HttpResponse.fromObject(e.response)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.path = "",
            n.response = null),
            null != e.path && e.hasOwnProperty("path") && (n.path = e.path),
            null != e.response && e.hasOwnProperty("response") && (n.response = s.HttpResponse.toObject(e.response, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRegister = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.verificationCode = "",
        e.prototype.password = "",
        e.prototype.name = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && t.uint32(26).string(e.verificationCode),
            null != e.password && e.hasOwnProperty("password") && t.uint32(34).string(e.password),
            null != e.name && e.hasOwnProperty("name") && t.uint32(42).string(e.name),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRegister;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.verificationCode = e.string();
                    break;
                case 4:
                    r.password = e.string();
                    break;
                case 5:
                    r.name = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRegister)
                return e;
            var t = new s.HttpRequestBodyRegister;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.verificationCode && (t.verificationCode = String(e.verificationCode)),
            null != e.password && (t.password = String(e.password)),
            null != e.name && (t.name = String(e.name)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = "",
            n.verificationCode = "",
            n.password = "",
            n.name = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && (n.verificationCode = e.verificationCode),
            null != e.password && e.hasOwnProperty("password") && (n.password = e.password),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRegister = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(26).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(34).string(e.email),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRegister;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.phoneNumber = e.string();
                    break;
                case 4:
                    r.email = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyRegister)
                return e;
            var t = new s.HttpResponseBodyRegister;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.name = "",
            n.phoneNumber = "",
            n.email = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetRegisterVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetRegisterVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetRegisterVerificationCode)
                return e;
            var t = new s.HttpRequestBodyGetRegisterVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetRegisterVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetRegisterVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGetRegisterVerificationCode ? e : new s.HttpResponseBodyGetRegisterVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetRegisterVoiceVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetRegisterVoiceVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetRegisterVoiceVerificationCode)
                return e;
            var t = new s.HttpRequestBodyGetRegisterVoiceVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetRegisterVoiceVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetRegisterVoiceVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGetRegisterVoiceVerificationCode ? e : new s.HttpResponseBodyGetRegisterVoiceVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckRegisterVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.verificationCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && t.uint32(26).string(e.verificationCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckRegisterVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.verificationCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckRegisterVerificationCode)
                return e;
            var t = new s.HttpRequestBodyCheckRegisterVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.verificationCode && (t.verificationCode = String(e.verificationCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = "",
            n.verificationCode = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && (n.verificationCode = e.verificationCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckRegisterVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckRegisterVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyCheckRegisterVerificationCode ? e : new s.HttpResponseBodyCheckRegisterVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyLogin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.account = "",
        e.prototype.passwordHash = "",
        e.prototype.deviceType = 0,
        e.prototype.deviceId = "",
        e.prototype.pcLoginType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.account && e.hasOwnProperty("account") && t.uint32(26).string(e.account),
            null != e.passwordHash && e.hasOwnProperty("passwordHash") && t.uint32(34).string(e.passwordHash),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(40).int32(e.deviceType),
            null != e.deviceId && e.hasOwnProperty("deviceId") && t.uint32(50).string(e.deviceId),
            null != e.pcLoginType && e.hasOwnProperty("pcLoginType") && t.uint32(56).int32(e.pcLoginType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyLogin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.account = e.string();
                    break;
                case 4:
                    r.passwordHash = e.string();
                    break;
                case 5:
                    r.deviceType = e.int32();
                    break;
                case 6:
                    r.deviceId = e.string();
                    break;
                case 7:
                    r.pcLoginType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyLogin)
                return e;
            var t = new s.HttpRequestBodyLogin;
            switch (null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.account && (t.account = String(e.account)),
            null != e.passwordHash && (t.passwordHash = String(e.passwordHash)),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            switch (null != e.deviceId && (t.deviceId = String(e.deviceId)),
            e.pcLoginType) {
            case "CommonPCLoginTypeUndifined":
            case 0:
                t.pcLoginType = 0;
                break;
            case "CommonPCLoginTypeWindowsClient":
            case 1:
                t.pcLoginType = 1;
                break;
            case "CommonPCLoginTypeMacClient":
            case 2:
                t.pcLoginType = 2;
                break;
            case "CommonPCLoginTypeWebBrowser":
            case 3:
                t.pcLoginType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = "",
            n.account = "",
            n.passwordHash = "",
            n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0,
            n.deviceId = "",
            n.pcLoginType = t.enums === String ? "CommonPCLoginTypeUndifined" : 0),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.account && e.hasOwnProperty("account") && (n.account = e.account),
            null != e.passwordHash && e.hasOwnProperty("passwordHash") && (n.passwordHash = e.passwordHash),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            null != e.deviceId && e.hasOwnProperty("deviceId") && (n.deviceId = e.deviceId),
            null != e.pcLoginType && e.hasOwnProperty("pcLoginType") && (n.pcLoginType = t.enums === String ? s.CommonPCLoginType[e.pcLoginType] : e.pcLoginType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyLogin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.token = "",
        e.prototype.userId = 0,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.lastDeviceId = "",
        e.prototype.serverAccountType = 0,
        e.prototype.hbOfficeUserId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.hbOfficeToken = "",
        e.prototype.bindHbOfficeAccount = "",
        e.prototype.serverId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.token && e.hasOwnProperty("token") && t.uint32(10).string(e.token),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(16).uint32(e.userId),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(24).uint64(e.expiredTimestamp),
            null != e.lastDeviceId && e.hasOwnProperty("lastDeviceId") && t.uint32(34).string(e.lastDeviceId),
            null != e.serverAccountType && e.hasOwnProperty("serverAccountType") && t.uint32(40).int32(e.serverAccountType),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && t.uint32(48).uint64(e.hbOfficeUserId),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && t.uint32(58).string(e.hbOfficeToken),
            null != e.bindHbOfficeAccount && e.hasOwnProperty("bindHbOfficeAccount") && t.uint32(66).string(e.bindHbOfficeAccount),
            null != e.serverId && e.hasOwnProperty("serverId") && t.uint32(74).string(e.serverId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyLogin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.token = e.string();
                    break;
                case 2:
                    r.userId = e.uint32();
                    break;
                case 3:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 4:
                    r.lastDeviceId = e.string();
                    break;
                case 5:
                    r.serverAccountType = e.int32();
                    break;
                case 6:
                    r.hbOfficeUserId = e.uint64();
                    break;
                case 7:
                    r.hbOfficeToken = e.string();
                    break;
                case 8:
                    r.bindHbOfficeAccount = e.string();
                    break;
                case 9:
                    r.serverId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyLogin)
                return e;
            var t = new s.HttpResponseBodyLogin;
            switch (null != e.token && (t.token = String(e.token)),
            null != e.userId && (t.userId = e.userId >>> 0),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.lastDeviceId && (t.lastDeviceId = String(e.lastDeviceId)),
            e.serverAccountType) {
            case "CommonServerAccountTypeUndefined":
            case 0:
                t.serverAccountType = 0;
                break;
            case "CommonServerAccountTypeBasic":
            case 1:
                t.serverAccountType = 1;
                break;
            case "CommonServerAccountTypeHbOffice":
            case 2:
                t.serverAccountType = 2;
                break;
            case "CommonServerAccountTypeCompany":
            case 3:
                t.serverAccountType = 3;
                break
            }
            return null != e.hbOfficeUserId && (a.Long ? (t.hbOfficeUserId = a.Long.fromValue(e.hbOfficeUserId)).unsigned = !0 : "string" === typeof e.hbOfficeUserId ? t.hbOfficeUserId = parseInt(e.hbOfficeUserId, 10) : "number" === typeof e.hbOfficeUserId ? t.hbOfficeUserId = e.hbOfficeUserId : "object" === typeof e.hbOfficeUserId && (t.hbOfficeUserId = new a.LongBits(e.hbOfficeUserId.low >>> 0,e.hbOfficeUserId.high >>> 0).toNumber(!0))),
            null != e.hbOfficeToken && (t.hbOfficeToken = String(e.hbOfficeToken)),
            null != e.bindHbOfficeAccount && (t.bindHbOfficeAccount = String(e.bindHbOfficeAccount)),
            null != e.serverId && (t.serverId = String(e.serverId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.token = "",
                n.userId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                if (n.lastDeviceId = "",
                n.serverAccountType = t.enums === String ? "CommonServerAccountTypeUndefined" : 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.hbOfficeUserId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.hbOfficeUserId = t.longs === String ? "0" : 0;
                n.hbOfficeToken = "",
                n.bindHbOfficeAccount = "",
                n.serverId = ""
            }
            return null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.lastDeviceId && e.hasOwnProperty("lastDeviceId") && (n.lastDeviceId = e.lastDeviceId),
            null != e.serverAccountType && e.hasOwnProperty("serverAccountType") && (n.serverAccountType = t.enums === String ? s.CommonServerAccountType[e.serverAccountType] : e.serverAccountType),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && ("number" === typeof e.hbOfficeUserId ? n.hbOfficeUserId = t.longs === String ? String(e.hbOfficeUserId) : e.hbOfficeUserId : n.hbOfficeUserId = t.longs === String ? a.Long.prototype.toString.call(e.hbOfficeUserId) : t.longs === Number ? new a.LongBits(e.hbOfficeUserId.low >>> 0,e.hbOfficeUserId.high >>> 0).toNumber(!0) : e.hbOfficeUserId),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && (n.hbOfficeToken = e.hbOfficeToken),
            null != e.bindHbOfficeAccount && e.hasOwnProperty("bindHbOfficeAccount") && (n.bindHbOfficeAccount = e.bindHbOfficeAccount),
            null != e.serverId && e.hasOwnProperty("serverId") && (n.serverId = e.serverId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyForgetPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.newPassword = "",
        e.prototype.verificationCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.newPassword && e.hasOwnProperty("newPassword") && t.uint32(26).string(e.newPassword),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && t.uint32(34).string(e.verificationCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyForgetPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.newPassword = e.string();
                    break;
                case 4:
                    r.verificationCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyForgetPassword)
                return e;
            var t = new s.HttpRequestBodyForgetPassword;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.newPassword && (t.newPassword = String(e.newPassword)),
            null != e.verificationCode && (t.verificationCode = String(e.verificationCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = "",
            n.newPassword = "",
            n.verificationCode = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.newPassword && e.hasOwnProperty("newPassword") && (n.newPassword = e.newPassword),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && (n.verificationCode = e.verificationCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyForgetPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyForgetPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyForgetPassword ? e : new s.HttpResponseBodyForgetPassword
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetForgetVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetForgetVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetForgetVerificationCode)
                return e;
            var t = new s.HttpRequestBodyGetForgetVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetForgetVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetForgetVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGetForgetVerificationCode ? e : new s.HttpResponseBodyGetForgetVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetForgetVoiceVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetForgetVoiceVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetForgetVoiceVerificationCode)
                return e;
            var t = new s.HttpRequestBodyGetForgetVoiceVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetForgetVoiceVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetForgetVoiceVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGetForgetVoiceVerificationCode ? e : new s.HttpResponseBodyGetForgetVoiceVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckForgetVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.verificationCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && t.uint32(26).string(e.verificationCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckForgetVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.verificationCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckForgetVerificationCode)
                return e;
            var t = new s.HttpRequestBodyCheckForgetVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.verificationCode && (t.verificationCode = String(e.verificationCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = "",
            n.verificationCode = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && (n.verificationCode = e.verificationCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckForgetVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckForgetVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyCheckForgetVerificationCode ? e : new s.HttpResponseBodyCheckForgetVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyModifyPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.oldPassword = "",
        e.prototype.newPassword = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.oldPassword && e.hasOwnProperty("oldPassword") && t.uint32(10).string(e.oldPassword),
            null != e.newPassword && e.hasOwnProperty("newPassword") && t.uint32(18).string(e.newPassword),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyModifyPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.oldPassword = e.string();
                    break;
                case 2:
                    r.newPassword = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyModifyPassword)
                return e;
            var t = new s.HttpRequestBodyModifyPassword;
            return null != e.oldPassword && (t.oldPassword = String(e.oldPassword)),
            null != e.newPassword && (t.newPassword = String(e.newPassword)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.oldPassword = "",
            n.newPassword = ""),
            null != e.oldPassword && e.hasOwnProperty("oldPassword") && (n.oldPassword = e.oldPassword),
            null != e.newPassword && e.hasOwnProperty("newPassword") && (n.newPassword = e.newPassword),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyModifyPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyModifyPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyModifyPassword ? e : new s.HttpResponseBodyModifyPassword
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyLogout = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.deviceType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(8).int32(e.deviceType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyLogout;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.deviceType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyLogout)
                return e;
            var t = new s.HttpRequestBodyLogout;
            switch (e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyLogout = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyLogout;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyLogout ? e : new s.HttpResponseBodyLogout
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRefreshToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRefreshToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyRefreshToken ? e : new s.HttpRequestBodyRefreshToken
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRefreshToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.token = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.hbOfficeToken = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.token && e.hasOwnProperty("token") && t.uint32(10).string(e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(16).uint64(e.expiredTimestamp),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && t.uint32(26).string(e.hbOfficeToken),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRefreshToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.token = e.string();
                    break;
                case 2:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 3:
                    r.hbOfficeToken = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyRefreshToken)
                return e;
            var t = new s.HttpResponseBodyRefreshToken;
            return null != e.token && (t.token = String(e.token)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.hbOfficeToken && (t.hbOfficeToken = String(e.hbOfficeToken)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.token = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                n.hbOfficeToken = ""
            }
            return null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && (n.hbOfficeToken = e.hbOfficeToken),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUnbindAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUnbindAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUnbindAccount)
                return e;
            var t = new s.HttpRequestBodyUnbindAccount;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUnbindAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUnbindAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUnbindAccount ? e : new s.HttpResponseBodyUnbindAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetBindAccountVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetBindAccountVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetBindAccountVerificationCode)
                return e;
            var t = new s.HttpRequestBodyGetBindAccountVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetBindAccountVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetBindAccountVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGetBindAccountVerificationCode ? e : new s.HttpResponseBodyGetBindAccountVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetBindAccountVoiceVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetBindAccountVoiceVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetBindAccountVoiceVerificationCode)
                return e;
            var t = new s.HttpRequestBodyGetBindAccountVoiceVerificationCode;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetBindAccountVoiceVerificationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetBindAccountVoiceVerificationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGetBindAccountVoiceVerificationCode ? e : new s.HttpResponseBodyGetBindAccountVoiceVerificationCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBindAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.prototype.verificationCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && t.uint32(26).string(e.verificationCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBindAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.verificationCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBindAccount)
                return e;
            var t = new s.HttpRequestBodyBindAccount;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            null != e.verificationCode && (t.verificationCode = String(e.verificationCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = "",
            n.verificationCode = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.verificationCode && e.hasOwnProperty("verificationCode") && (n.verificationCode = e.verificationCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBindAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBindAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyBindAccount ? e : new s.HttpResponseBodyBindAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetAccountStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.account = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.account && e.hasOwnProperty("account") && t.uint32(10).string(e.account),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetAccountStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.account = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetAccountStatus)
                return e;
            var t = new s.HttpRequestBodyGetAccountStatus;
            return null != e.account && (t.account = String(e.account)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.account = ""),
            null != e.account && e.hasOwnProperty("account") && (n.account = e.account),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetAccountStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).int32(e.status),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetAccountStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetAccountStatus)
                return e;
            var t = new s.HttpResponseBodyGetAccountStatus;
            switch (e.status) {
            case "CommonAppealStatusSuspend":
            case 0:
                t.status = 0;
                break;
            case "CommonAppealStatusSubmitted":
            case 1:
                t.status = 1;
                break;
            case "CommonAppealStatusRestore":
            case 2:
                t.status = 2;
                break;
            case "CommonAppealStatusReject":
            case 3:
                t.status = 3;
                break;
            case "CommonAppealStatusStopUsing":
            case 4:
                t.status = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.status = t.enums === String ? "CommonAppealStatusSuspend" : 0),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonAppealStatus[e.status] : e.status),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddUserAppeal = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.account = "",
        e.prototype.reason = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.account && e.hasOwnProperty("account") && t.uint32(10).string(e.account),
            null != e.reason && e.hasOwnProperty("reason") && t.uint32(18).string(e.reason),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddUserAppeal;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.account = e.string();
                    break;
                case 2:
                    r.reason = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddUserAppeal)
                return e;
            var t = new s.HttpRequestBodyAddUserAppeal;
            return null != e.account && (t.account = String(e.account)),
            null != e.reason && (t.reason = String(e.reason)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.account = "",
            n.reason = ""),
            null != e.account && e.hasOwnProperty("account") && (n.account = e.account),
            null != e.reason && e.hasOwnProperty("reason") && (n.reason = e.reason),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddUserAppeal = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddUserAppeal;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddUserAppeal ? e : new s.HttpResponseBodyAddUserAppeal
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUserSpaces = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUserSpaces;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetUserSpaces ? e : new s.HttpRequestBodyGetUserSpaces
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUserSpaces = function() {
        function e(e) {
            if (this.userSpaces = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userSpaces = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userSpaces && e.userSpaces.length)
                for (var n = 0; n < e.userSpaces.length; ++n)
                    s.HttpUserSpaceInfo.encode(e.userSpaces[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUserSpaces;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userSpaces && r.userSpaces.length || (r.userSpaces = []),
                    r.userSpaces.push(s.HttpUserSpaceInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUserSpaces)
                return e;
            var t = new s.HttpResponseBodyGetUserSpaces;
            if (e.userSpaces) {
                if (!Array.isArray(e.userSpaces))
                    throw TypeError(".HttpResponseBodyGetUserSpaces.userSpaces: array expected");
                t.userSpaces = [];
                for (var n = 0; n < e.userSpaces.length; ++n) {
                    if ("object" !== typeof e.userSpaces[n])
                        throw TypeError(".HttpResponseBodyGetUserSpaces.userSpaces: object expected");
                    t.userSpaces[n] = s.HttpUserSpaceInfo.fromObject(e.userSpaces[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userSpaces = []),
            e.userSpaces && e.userSpaces.length) {
                n.userSpaces = [];
                for (var r = 0; r < e.userSpaces.length; ++r)
                    n.userSpaces[r] = s.HttpUserSpaceInfo.toObject(e.userSpaces[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUserTables = function() {
        function e(e) {
            if (this.tableIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.tableIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.tableIds && e.tableIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.tableIds.length; ++n)
                    t.uint64(e.tableIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUserTables;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.tableIds && r.tableIds.length || (r.tableIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.tableIds.push(e.uint64())
                    } else
                        r.tableIds.push(e.uint64());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetUserTables)
                return e;
            var t = new s.HttpRequestBodyGetUserTables;
            if (e.tableIds) {
                if (!Array.isArray(e.tableIds))
                    throw TypeError(".HttpRequestBodyGetUserTables.tableIds: array expected");
                t.tableIds = [];
                for (var n = 0; n < e.tableIds.length; ++n)
                    a.Long ? (t.tableIds[n] = a.Long.fromValue(e.tableIds[n])).unsigned = !0 : "string" === typeof e.tableIds[n] ? t.tableIds[n] = parseInt(e.tableIds[n], 10) : "number" === typeof e.tableIds[n] ? t.tableIds[n] = e.tableIds[n] : "object" === typeof e.tableIds[n] && (t.tableIds[n] = new a.LongBits(e.tableIds[n].low >>> 0,e.tableIds[n].high >>> 0).toNumber(!0))
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.tableIds = []),
            e.tableIds && e.tableIds.length) {
                n.tableIds = [];
                for (var r = 0; r < e.tableIds.length; ++r)
                    "number" === typeof e.tableIds[r] ? n.tableIds[r] = t.longs === String ? String(e.tableIds[r]) : e.tableIds[r] : n.tableIds[r] = t.longs === String ? a.Long.prototype.toString.call(e.tableIds[r]) : t.longs === Number ? new a.LongBits(e.tableIds[r].low >>> 0,e.tableIds[r].high >>> 0).toNumber(!0) : e.tableIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUserTables = function() {
        function e(e) {
            if (this.userTables = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userTables = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userTables && e.userTables.length)
                for (var n = 0; n < e.userTables.length; ++n)
                    s.HttpUserTableInfo.encode(e.userTables[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUserTables;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userTables && r.userTables.length || (r.userTables = []),
                    r.userTables.push(s.HttpUserTableInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUserTables)
                return e;
            var t = new s.HttpResponseBodyGetUserTables;
            if (e.userTables) {
                if (!Array.isArray(e.userTables))
                    throw TypeError(".HttpResponseBodyGetUserTables.userTables: array expected");
                t.userTables = [];
                for (var n = 0; n < e.userTables.length; ++n) {
                    if ("object" !== typeof e.userTables[n])
                        throw TypeError(".HttpResponseBodyGetUserTables.userTables: object expected");
                    t.userTables[n] = s.HttpUserTableInfo.fromObject(e.userTables[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userTables = []),
            e.userTables && e.userTables.length) {
                n.userTables = [];
                for (var r = 0; r < e.userTables.length; ++r)
                    n.userTables[r] = s.HttpUserTableInfo.toObject(e.userTables[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUserTablesBySpaceId = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.spaceId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.spaceId && e.hasOwnProperty("spaceId") && t.uint32(8).uint64(e.spaceId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUserTablesBySpaceId;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.spaceId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetUserTablesBySpaceId)
                return e;
            var t = new s.HttpRequestBodyGetUserTablesBySpaceId;
            return null != e.spaceId && (a.Long ? (t.spaceId = a.Long.fromValue(e.spaceId)).unsigned = !0 : "string" === typeof e.spaceId ? t.spaceId = parseInt(e.spaceId, 10) : "number" === typeof e.spaceId ? t.spaceId = e.spaceId : "object" === typeof e.spaceId && (t.spaceId = new a.LongBits(e.spaceId.low >>> 0,e.spaceId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.spaceId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.spaceId = t.longs === String ? "0" : 0;
            return null != e.spaceId && e.hasOwnProperty("spaceId") && ("number" === typeof e.spaceId ? n.spaceId = t.longs === String ? String(e.spaceId) : e.spaceId : n.spaceId = t.longs === String ? a.Long.prototype.toString.call(e.spaceId) : t.longs === Number ? new a.LongBits(e.spaceId.low >>> 0,e.spaceId.high >>> 0).toNumber(!0) : e.spaceId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUserTablesBySpaceId = function() {
        function e(e) {
            if (this.userTables = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userTables = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userTables && e.userTables.length)
                for (var n = 0; n < e.userTables.length; ++n)
                    s.HttpUserTableInfo.encode(e.userTables[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUserTablesBySpaceId;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userTables && r.userTables.length || (r.userTables = []),
                    r.userTables.push(s.HttpUserTableInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUserTablesBySpaceId)
                return e;
            var t = new s.HttpResponseBodyGetUserTablesBySpaceId;
            if (e.userTables) {
                if (!Array.isArray(e.userTables))
                    throw TypeError(".HttpResponseBodyGetUserTablesBySpaceId.userTables: array expected");
                t.userTables = [];
                for (var n = 0; n < e.userTables.length; ++n) {
                    if ("object" !== typeof e.userTables[n])
                        throw TypeError(".HttpResponseBodyGetUserTablesBySpaceId.userTables: object expected");
                    t.userTables[n] = s.HttpUserTableInfo.fromObject(e.userTables[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userTables = []),
            e.userTables && e.userTables.length) {
                n.userTables = [];
                for (var r = 0; r < e.userTables.length; ++r)
                    n.userTables[r] = s.HttpUserTableInfo.toObject(e.userTables[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupBindTables = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupBindTables;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupBindTables)
                return e;
            var t = new s.HttpRequestBodyGetGroupBindTables;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupBindTables = function() {
        function e(e) {
            if (this.userTables = [],
            this.permitTableIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userTables = a.emptyArray,
        e.prototype.permitTableIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userTables && e.userTables.length)
                for (var n = 0; n < e.userTables.length; ++n)
                    s.HttpUserTableInfo.encode(e.userTables[n], t.uint32(10).fork()).ldelim();
            if (null != e.permitTableIds && e.permitTableIds.length) {
                t.uint32(18).fork();
                for (n = 0; n < e.permitTableIds.length; ++n)
                    t.uint64(e.permitTableIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupBindTables;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userTables && r.userTables.length || (r.userTables = []),
                    r.userTables.push(s.HttpUserTableInfo.decode(e, e.uint32()));
                    break;
                case 2:
                    if (r.permitTableIds && r.permitTableIds.length || (r.permitTableIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.permitTableIds.push(e.uint64())
                    } else
                        r.permitTableIds.push(e.uint64());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupBindTables)
                return e;
            var t = new s.HttpResponseBodyGetGroupBindTables;
            if (e.userTables) {
                if (!Array.isArray(e.userTables))
                    throw TypeError(".HttpResponseBodyGetGroupBindTables.userTables: array expected");
                t.userTables = [];
                for (var n = 0; n < e.userTables.length; ++n) {
                    if ("object" !== typeof e.userTables[n])
                        throw TypeError(".HttpResponseBodyGetGroupBindTables.userTables: object expected");
                    t.userTables[n] = s.HttpUserTableInfo.fromObject(e.userTables[n])
                }
            }
            if (e.permitTableIds) {
                if (!Array.isArray(e.permitTableIds))
                    throw TypeError(".HttpResponseBodyGetGroupBindTables.permitTableIds: array expected");
                t.permitTableIds = [];
                for (n = 0; n < e.permitTableIds.length; ++n)
                    a.Long ? (t.permitTableIds[n] = a.Long.fromValue(e.permitTableIds[n])).unsigned = !0 : "string" === typeof e.permitTableIds[n] ? t.permitTableIds[n] = parseInt(e.permitTableIds[n], 10) : "number" === typeof e.permitTableIds[n] ? t.permitTableIds[n] = e.permitTableIds[n] : "object" === typeof e.permitTableIds[n] && (t.permitTableIds[n] = new a.LongBits(e.permitTableIds[n].low >>> 0,e.permitTableIds[n].high >>> 0).toNumber(!0))
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userTables = [],
            n.permitTableIds = []),
            e.userTables && e.userTables.length) {
                n.userTables = [];
                for (var r = 0; r < e.userTables.length; ++r)
                    n.userTables[r] = s.HttpUserTableInfo.toObject(e.userTables[r], t)
            }
            if (e.permitTableIds && e.permitTableIds.length) {
                n.permitTableIds = [];
                for (r = 0; r < e.permitTableIds.length; ++r)
                    "number" === typeof e.permitTableIds[r] ? n.permitTableIds[r] = t.longs === String ? String(e.permitTableIds[r]) : e.permitTableIds[r] : n.permitTableIds[r] = t.longs === String ? a.Long.prototype.toString.call(e.permitTableIds[r]) : t.longs === Number ? new a.LongBits(e.permitTableIds[r].low >>> 0,e.permitTableIds[r].high >>> 0).toNumber(!0) : e.permitTableIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupBindTable = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.tableId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.tableId && e.hasOwnProperty("tableId") && t.uint32(16).uint64(e.tableId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupBindTable;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.tableId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupBindTable)
                return e;
            var t = new s.HttpRequestBodyAddGroupBindTable;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.tableId && (a.Long ? (t.tableId = a.Long.fromValue(e.tableId)).unsigned = !0 : "string" === typeof e.tableId ? t.tableId = parseInt(e.tableId, 10) : "number" === typeof e.tableId ? t.tableId = e.tableId : "object" === typeof e.tableId && (t.tableId = new a.LongBits(e.tableId.low >>> 0,e.tableId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.tableId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.tableId = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.tableId && e.hasOwnProperty("tableId") && ("number" === typeof e.tableId ? n.tableId = t.longs === String ? String(e.tableId) : e.tableId : n.tableId = t.longs === String ? a.Long.prototype.toString.call(e.tableId) : t.longs === Number ? new a.LongBits(e.tableId.low >>> 0,e.tableId.high >>> 0).toNumber(!0) : e.tableId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupBindTable = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupBindTable;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddGroupBindTable ? e : new s.HttpResponseBodyAddGroupBindTable
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteGroupBindTable = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.tableId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.tableId && e.hasOwnProperty("tableId") && t.uint32(16).uint64(e.tableId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteGroupBindTable;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.tableId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteGroupBindTable)
                return e;
            var t = new s.HttpRequestBodyDeleteGroupBindTable;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.tableId && (a.Long ? (t.tableId = a.Long.fromValue(e.tableId)).unsigned = !0 : "string" === typeof e.tableId ? t.tableId = parseInt(e.tableId, 10) : "number" === typeof e.tableId ? t.tableId = e.tableId : "object" === typeof e.tableId && (t.tableId = new a.LongBits(e.tableId.low >>> 0,e.tableId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.tableId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.tableId = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.tableId && e.hasOwnProperty("tableId") && ("number" === typeof e.tableId ? n.tableId = t.longs === String ? String(e.tableId) : e.tableId : n.tableId = t.longs === String ? a.Long.prototype.toString.call(e.tableId) : t.longs === Number ? new a.LongBits(e.tableId.low >>> 0,e.tableId.high >>> 0).toNumber(!0) : e.tableId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteGroupBindTable = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteGroupBindTable;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteGroupBindTable ? e : new s.HttpResponseBodyDeleteGroupBindTable
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupBindTablePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.canAllBindTable = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.canAllBindTable && e.hasOwnProperty("canAllBindTable") && t.uint32(16).bool(e.canAllBindTable),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupBindTablePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.canAllBindTable = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupBindTablePermission)
                return e;
            var t = new s.HttpRequestBodySetGroupBindTablePermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.canAllBindTable && (t.canAllBindTable = Boolean(e.canAllBindTable)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.canAllBindTable = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.canAllBindTable && e.hasOwnProperty("canAllBindTable") && (n.canAllBindTable = e.canAllBindTable),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupBindTablePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupBindTablePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupBindTablePermission)
                return e;
            var t = new s.HttpResponseBodySetGroupBindTablePermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBindHbOfficeAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.bindHbOfficeAccount = "",
        e.prototype.password = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.bindHbOfficeAccount && e.hasOwnProperty("bindHbOfficeAccount") && t.uint32(10).string(e.bindHbOfficeAccount),
            null != e.password && e.hasOwnProperty("password") && t.uint32(18).string(e.password),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBindHbOfficeAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.bindHbOfficeAccount = e.string();
                    break;
                case 2:
                    r.password = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBindHbOfficeAccount)
                return e;
            var t = new s.HttpRequestBodyBindHbOfficeAccount;
            return null != e.bindHbOfficeAccount && (t.bindHbOfficeAccount = String(e.bindHbOfficeAccount)),
            null != e.password && (t.password = String(e.password)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.bindHbOfficeAccount = "",
            n.password = ""),
            null != e.bindHbOfficeAccount && e.hasOwnProperty("bindHbOfficeAccount") && (n.bindHbOfficeAccount = e.bindHbOfficeAccount),
            null != e.password && e.hasOwnProperty("password") && (n.password = e.password),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBindHbOfficeAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.hbOfficeUserId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.hbOfficeToken = "",
        e.prototype.bindHbOfficeAccount = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && t.uint32(8).uint64(e.hbOfficeUserId),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && t.uint32(18).string(e.hbOfficeToken),
            null != e.bindHbOfficeAccount && e.hasOwnProperty("bindHbOfficeAccount") && t.uint32(26).string(e.bindHbOfficeAccount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBindHbOfficeAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.hbOfficeUserId = e.uint64();
                    break;
                case 2:
                    r.hbOfficeToken = e.string();
                    break;
                case 3:
                    r.bindHbOfficeAccount = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBindHbOfficeAccount)
                return e;
            var t = new s.HttpResponseBodyBindHbOfficeAccount;
            return null != e.hbOfficeUserId && (a.Long ? (t.hbOfficeUserId = a.Long.fromValue(e.hbOfficeUserId)).unsigned = !0 : "string" === typeof e.hbOfficeUserId ? t.hbOfficeUserId = parseInt(e.hbOfficeUserId, 10) : "number" === typeof e.hbOfficeUserId ? t.hbOfficeUserId = e.hbOfficeUserId : "object" === typeof e.hbOfficeUserId && (t.hbOfficeUserId = new a.LongBits(e.hbOfficeUserId.low >>> 0,e.hbOfficeUserId.high >>> 0).toNumber(!0))),
            null != e.hbOfficeToken && (t.hbOfficeToken = String(e.hbOfficeToken)),
            null != e.bindHbOfficeAccount && (t.bindHbOfficeAccount = String(e.bindHbOfficeAccount)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.hbOfficeUserId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.hbOfficeUserId = t.longs === String ? "0" : 0;
                n.hbOfficeToken = "",
                n.bindHbOfficeAccount = ""
            }
            return null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && ("number" === typeof e.hbOfficeUserId ? n.hbOfficeUserId = t.longs === String ? String(e.hbOfficeUserId) : e.hbOfficeUserId : n.hbOfficeUserId = t.longs === String ? a.Long.prototype.toString.call(e.hbOfficeUserId) : t.longs === Number ? new a.LongBits(e.hbOfficeUserId.low >>> 0,e.hbOfficeUserId.high >>> 0).toNumber(!0) : e.hbOfficeUserId),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && (n.hbOfficeToken = e.hbOfficeToken),
            null != e.bindHbOfficeAccount && e.hasOwnProperty("bindHbOfficeAccount") && (n.bindHbOfficeAccount = e.bindHbOfficeAccount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUnbindHbOfficeAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUnbindHbOfficeAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyUnbindHbOfficeAccount ? e : new s.HttpRequestBodyUnbindHbOfficeAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUnbindHbOfficeAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUnbindHbOfficeAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUnbindHbOfficeAccount ? e : new s.HttpResponseBodyUnbindHbOfficeAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadMyAvatar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.data = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.data && e.hasOwnProperty("data") && t.uint32(10).bytes(e.data),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadMyAvatar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.data = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadMyAvatar)
                return e;
            var t = new s.HttpRequestBodyUploadMyAvatar;
            return null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (t.bytes === String ? n.data = "" : (n.data = [],
            t.bytes !== Array && (n.data = a.newBuffer(n.data)))),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadMyAvatar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.avatarUrl = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.avatarVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(10).string(e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(18).string(e.thumbAvatarUrl),
            null != e.version && e.hasOwnProperty("version") && t.uint32(24).uint64(e.version),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && t.uint32(32).uint64(e.avatarVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadMyAvatar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.avatarUrl = e.string();
                    break;
                case 2:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 3:
                    r.version = e.uint64();
                    break;
                case 4:
                    r.avatarVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUploadMyAvatar)
                return e;
            var t = new s.HttpResponseBodyUploadMyAvatar;
            return null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.avatarVersion && (a.Long ? (t.avatarVersion = a.Long.fromValue(e.avatarVersion)).unsigned = !0 : "string" === typeof e.avatarVersion ? t.avatarVersion = parseInt(e.avatarVersion, 10) : "number" === typeof e.avatarVersion ? t.avatarVersion = e.avatarVersion : "object" === typeof e.avatarVersion && (t.avatarVersion = new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.avatarUrl = "",
                n.thumbAvatarUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.avatarVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.avatarVersion = t.longs === String ? "0" : 0
            }
            return null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && ("number" === typeof e.avatarVersion ? n.avatarVersion = t.longs === String ? String(e.avatarVersion) : e.avatarVersion : n.avatarVersion = t.longs === String ? a.Long.prototype.toString.call(e.avatarVersion) : t.longs === Number ? new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0) : e.avatarVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMyName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.name = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.name && e.hasOwnProperty("name") && t.uint32(10).string(e.name),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMyName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.name = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMyName)
                return e;
            var t = new s.HttpRequestBodySetMyName;
            return null != e.name && (t.name = String(e.name)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.name = ""),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMyName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMyName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetMyName)
                return e;
            var t = new s.HttpResponseBodySetMyName;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMyGender = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.gender = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.gender && e.hasOwnProperty("gender") && t.uint32(8).int32(e.gender),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMyGender;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.gender = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMyGender)
                return e;
            var t = new s.HttpRequestBodySetMyGender;
            switch (e.gender) {
            case "CommonUserGenderUndefined":
            case 0:
                t.gender = 0;
                break;
            case "CommonUserGenderMale":
            case 1:
                t.gender = 1;
                break;
            case "CommonUserGenderFemale":
            case 2:
                t.gender = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.gender = t.enums === String ? "CommonUserGenderUndefined" : 0),
            null != e.gender && e.hasOwnProperty("gender") && (n.gender = t.enums === String ? s.CommonUserGender[e.gender] : e.gender),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMyGender = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMyGender;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetMyGender)
                return e;
            var t = new s.HttpResponseBodySetMyGender;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMyRegion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.region = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.region && e.hasOwnProperty("region") && t.uint32(10).string(e.region),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMyRegion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.region = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMyRegion)
                return e;
            var t = new s.HttpRequestBodySetMyRegion;
            return null != e.region && (t.region = String(e.region)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.region = ""),
            null != e.region && e.hasOwnProperty("region") && (n.region = e.region),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMyRegion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMyRegion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetMyRegion)
                return e;
            var t = new s.HttpResponseBodySetMyRegion;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMySignature = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.signature = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.signature && e.hasOwnProperty("signature") && t.uint32(10).string(e.signature),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMySignature;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.signature = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMySignature)
                return e;
            var t = new s.HttpRequestBodySetMySignature;
            return null != e.signature && (t.signature = String(e.signature)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.signature = ""),
            null != e.signature && e.hasOwnProperty("signature") && (n.signature = e.signature),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMySignature = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMySignature;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetMySignature)
                return e;
            var t = new s.HttpResponseBodySetMySignature;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMyProfile = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.name = "",
        e.prototype.gender = 0,
        e.prototype.region = "",
        e.prototype.signature = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.name && e.hasOwnProperty("name") && t.uint32(10).string(e.name),
            null != e.gender && e.hasOwnProperty("gender") && t.uint32(16).int32(e.gender),
            null != e.region && e.hasOwnProperty("region") && t.uint32(26).string(e.region),
            null != e.signature && e.hasOwnProperty("signature") && t.uint32(34).string(e.signature),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMyProfile;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.name = e.string();
                    break;
                case 2:
                    r.gender = e.int32();
                    break;
                case 3:
                    r.region = e.string();
                    break;
                case 4:
                    r.signature = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMyProfile)
                return e;
            var t = new s.HttpRequestBodySetMyProfile;
            switch (null != e.name && (t.name = String(e.name)),
            e.gender) {
            case "CommonUserGenderUndefined":
            case 0:
                t.gender = 0;
                break;
            case "CommonUserGenderMale":
            case 1:
                t.gender = 1;
                break;
            case "CommonUserGenderFemale":
            case 2:
                t.gender = 2;
                break
            }
            return null != e.region && (t.region = String(e.region)),
            null != e.signature && (t.signature = String(e.signature)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.name = "",
            n.gender = t.enums === String ? "CommonUserGenderUndefined" : 0,
            n.region = "",
            n.signature = ""),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.gender && e.hasOwnProperty("gender") && (n.gender = t.enums === String ? s.CommonUserGender[e.gender] : e.gender),
            null != e.region && e.hasOwnProperty("region") && (n.region = e.region),
            null != e.signature && e.hasOwnProperty("signature") && (n.signature = e.signature),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMyProfile = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMyProfile;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetMyProfile)
                return e;
            var t = new s.HttpResponseBodySetMyProfile;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyQRCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyQRCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetMyQRCode ? e : new s.HttpRequestBodyGetMyQRCode
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyQRCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyQRCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyQRCode)
                return e;
            var t = new s.HttpResponseBodyGetMyQRCode;
            return null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = ""),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyQRCodeShortUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype["public"] = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e["public"] && e.hasOwnProperty("public") && t.uint32(8).bool(e["public"]),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyQRCodeShortUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r["public"] = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetMyQRCodeShortUrl)
                return e;
            var t = new s.HttpRequestBodyGetMyQRCodeShortUrl;
            return null != e["public"] && (t["public"] = Boolean(e["public"])),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n["public"] = !1),
            null != e["public"] && e.hasOwnProperty("public") && (n["public"] = e["public"]),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyQRCodeShortUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyQRCodeShortUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyQRCodeShortUrl)
                return e;
            var t = new s.HttpResponseBodyGetMyQRCodeShortUrl;
            return null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = ""),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyModifyAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.account = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.account && e.hasOwnProperty("account") && t.uint32(10).string(e.account),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyModifyAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.account = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyModifyAccount)
                return e;
            var t = new s.HttpRequestBodyModifyAccount;
            return null != e.account && (t.account = String(e.account)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.account = ""),
            null != e.account && e.hasOwnProperty("account") && (n.account = e.account),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyModifyAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyModifyAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyModifyAccount ? e : new s.HttpResponseBodyModifyAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetSettings = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetSettings ? e : new s.HttpRequestBodyGetSettings
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetSettings = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.settings = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.settings && e.hasOwnProperty("settings") && s.HttpUserSettings.encode(e.settings, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.settings = s.HttpUserSettings.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetSettings)
                return e;
            var t = new s.HttpResponseBodyGetSettings;
            if (null != e.settings) {
                if ("object" !== typeof e.settings)
                    throw TypeError(".HttpResponseBodyGetSettings.settings: object expected");
                t.settings = s.HttpUserSettings.fromObject(e.settings)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.settings = null),
            null != e.settings && e.hasOwnProperty("settings") && (n.settings = s.HttpUserSettings.toObject(e.settings, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetNewMessageNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).bool(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetNewMessageNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetNewMessageNotification)
                return e;
            var t = new s.HttpRequestBodySetNewMessageNotification;
            return null != e.state && (t.state = Boolean(e.state)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = !1),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetNewMessageNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetNewMessageNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetNewMessageNotification ? e : new s.HttpResponseBodySetNewMessageNotification
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetDisplayPushMessageDetail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).bool(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetDisplayPushMessageDetail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetDisplayPushMessageDetail)
                return e;
            var t = new s.HttpRequestBodySetDisplayPushMessageDetail;
            return null != e.state && (t.state = Boolean(e.state)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = !1),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetDisplayPushMessageDetail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetDisplayPushMessageDetail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetDisplayPushMessageDetail ? e : new s.HttpResponseBodySetDisplayPushMessageDetail
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetSound = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).bool(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetSound;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetSound)
                return e;
            var t = new s.HttpRequestBodySetSound;
            return null != e.state && (t.state = Boolean(e.state)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = !1),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetSound = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetSound;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetSound ? e : new s.HttpResponseBodySetSound
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetVibration = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).bool(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetVibration;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetVibration)
                return e;
            var t = new s.HttpRequestBodySetVibration;
            return null != e.state && (t.state = Boolean(e.state)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = !1),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetVibration = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetVibration;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetVibration ? e : new s.HttpResponseBodySetVibration
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetWebOnlinePhoneMuteNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).bool(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetWebOnlinePhoneMuteNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetWebOnlinePhoneMuteNotification)
                return e;
            var t = new s.HttpRequestBodySetWebOnlinePhoneMuteNotification;
            return null != e.state && (t.state = Boolean(e.state)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = !1),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetWebOnlinePhoneMuteNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetWebOnlinePhoneMuteNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetWebOnlinePhoneMuteNotification ? e : new s.HttpResponseBodySetWebOnlinePhoneMuteNotification
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetBackgroundImages = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.width = 0,
        e.prototype.height = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.width && e.hasOwnProperty("width") && t.uint32(8).uint32(e.width),
            null != e.height && e.hasOwnProperty("height") && t.uint32(16).uint32(e.height),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetBackgroundImages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.width = e.uint32();
                    break;
                case 2:
                    r.height = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetBackgroundImages)
                return e;
            var t = new s.HttpRequestBodyGetBackgroundImages;
            return null != e.width && (t.width = e.width >>> 0),
            null != e.height && (t.height = e.height >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.width = 0,
            n.height = 0),
            null != e.width && e.hasOwnProperty("width") && (n.width = e.width),
            null != e.height && e.hasOwnProperty("height") && (n.height = e.height),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetBackgroundImages = function() {
        function e(e) {
            if (this.backgroundImages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.backgroundImages = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.backgroundImages && e.backgroundImages.length)
                for (var n = 0; n < e.backgroundImages.length; ++n)
                    s.HttpBackgroundImage.encode(e.backgroundImages[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetBackgroundImages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.backgroundImages && r.backgroundImages.length || (r.backgroundImages = []),
                    r.backgroundImages.push(s.HttpBackgroundImage.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetBackgroundImages)
                return e;
            var t = new s.HttpResponseBodyGetBackgroundImages;
            if (e.backgroundImages) {
                if (!Array.isArray(e.backgroundImages))
                    throw TypeError(".HttpResponseBodyGetBackgroundImages.backgroundImages: array expected");
                t.backgroundImages = [];
                for (var n = 0; n < e.backgroundImages.length; ++n) {
                    if ("object" !== typeof e.backgroundImages[n])
                        throw TypeError(".HttpResponseBodyGetBackgroundImages.backgroundImages: object expected");
                    t.backgroundImages[n] = s.HttpBackgroundImage.fromObject(e.backgroundImages[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.backgroundImages = []),
            e.backgroundImages && e.backgroundImages.length) {
                n.backgroundImages = [];
                for (var r = 0; r < e.backgroundImages.length; ++r)
                    n.backgroundImages[r] = s.HttpBackgroundImage.toObject(e.backgroundImages[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetPushInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appId = "",
        e.prototype.deviceType = 0,
        e.prototype.sandbox = !1,
        e.prototype.pushType = 0,
        e.prototype.appKey = "",
        e.prototype.appSecret = "",
        e.prototype.appToken = "",
        e.prototype.pushStyle = 0,
        e.prototype.deviceVersion = "",
        e.prototype.voipToken = "",
        e.prototype.schemeUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(10).string(e.appId),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(16).int32(e.deviceType),
            null != e.sandbox && e.hasOwnProperty("sandbox") && t.uint32(24).bool(e.sandbox),
            null != e.pushType && e.hasOwnProperty("pushType") && t.uint32(32).int32(e.pushType),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(42).string(e.appKey),
            null != e.appSecret && e.hasOwnProperty("appSecret") && t.uint32(50).string(e.appSecret),
            null != e.appToken && e.hasOwnProperty("appToken") && t.uint32(58).string(e.appToken),
            null != e.pushStyle && e.hasOwnProperty("pushStyle") && t.uint32(64).int32(e.pushStyle),
            null != e.deviceVersion && e.hasOwnProperty("deviceVersion") && t.uint32(74).string(e.deviceVersion),
            null != e.voipToken && e.hasOwnProperty("voipToken") && t.uint32(82).string(e.voipToken),
            null != e.schemeUrl && e.hasOwnProperty("schemeUrl") && t.uint32(90).string(e.schemeUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetPushInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appId = e.string();
                    break;
                case 2:
                    r.deviceType = e.int32();
                    break;
                case 3:
                    r.sandbox = e.bool();
                    break;
                case 4:
                    r.pushType = e.int32();
                    break;
                case 5:
                    r.appKey = e.string();
                    break;
                case 6:
                    r.appSecret = e.string();
                    break;
                case 7:
                    r.appToken = e.string();
                    break;
                case 8:
                    r.pushStyle = e.int32();
                    break;
                case 9:
                    r.deviceVersion = e.string();
                    break;
                case 10:
                    r.voipToken = e.string();
                    break;
                case 11:
                    r.schemeUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetPushInfo)
                return e;
            var t = new s.HttpRequestBodySetPushInfo;
            switch (null != e.appId && (t.appId = String(e.appId)),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            switch (null != e.sandbox && (t.sandbox = Boolean(e.sandbox)),
            e.pushType) {
            case "CommonPushTypeUndefined":
            case 0:
                t.pushType = 0;
                break;
            case "CommonPushTypeXiaoMi":
            case 1:
                t.pushType = 1;
                break;
            case "CommonPushTypeHuawei":
            case 2:
                t.pushType = 2;
                break;
            case "CommonPushTypeAPNS":
            case 3:
                t.pushType = 3;
                break;
            case "CommonPushTypeVivo":
            case 4:
                t.pushType = 4;
                break;
            case "CommonPushTypeOppo":
            case 5:
                t.pushType = 5;
                break;
            case "CommonPushTypeMeizu":
            case 6:
                t.pushType = 6;
                break;
            case "CommonPushTypeHuaweiV1":
            case 7:
                t.pushType = 7;
                break
            }
            switch (null != e.appKey && (t.appKey = String(e.appKey)),
            null != e.appSecret && (t.appSecret = String(e.appSecret)),
            null != e.appToken && (t.appToken = String(e.appToken)),
            e.pushStyle) {
            case "HttpSetPushInfoStyleNotificationMsg":
            case 0:
                t.pushStyle = 0;
                break;
            case "HttpSetPushInfoStylePassThroughMsg":
            case 1:
                t.pushStyle = 1;
                break
            }
            return null != e.deviceVersion && (t.deviceVersion = String(e.deviceVersion)),
            null != e.voipToken && (t.voipToken = String(e.voipToken)),
            null != e.schemeUrl && (t.schemeUrl = String(e.schemeUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appId = "",
            n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0,
            n.sandbox = !1,
            n.pushType = t.enums === String ? "CommonPushTypeUndefined" : 0,
            n.appKey = "",
            n.appSecret = "",
            n.appToken = "",
            n.pushStyle = t.enums === String ? "HttpSetPushInfoStyleNotificationMsg" : 0,
            n.deviceVersion = "",
            n.voipToken = "",
            n.schemeUrl = ""),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            null != e.sandbox && e.hasOwnProperty("sandbox") && (n.sandbox = e.sandbox),
            null != e.pushType && e.hasOwnProperty("pushType") && (n.pushType = t.enums === String ? s.CommonPushType[e.pushType] : e.pushType),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            null != e.appSecret && e.hasOwnProperty("appSecret") && (n.appSecret = e.appSecret),
            null != e.appToken && e.hasOwnProperty("appToken") && (n.appToken = e.appToken),
            null != e.pushStyle && e.hasOwnProperty("pushStyle") && (n.pushStyle = t.enums === String ? s.HttpSetPushInfoStyle[e.pushStyle] : e.pushStyle),
            null != e.deviceVersion && e.hasOwnProperty("deviceVersion") && (n.deviceVersion = e.deviceVersion),
            null != e.voipToken && e.hasOwnProperty("voipToken") && (n.voipToken = e.voipToken),
            null != e.schemeUrl && e.hasOwnProperty("schemeUrl") && (n.schemeUrl = e.schemeUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetPushInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetPushInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetPushInfo ? e : new s.HttpResponseBodySetPushInfo
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetIMServerConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetIMServerConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetIMServerConfig ? e : new s.HttpRequestBodyGetIMServerConfig
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetIMServerConfig = function() {
        function e(e) {
            if (this.oldHosts = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.http = "",
        e.prototype.mobileSocket = "",
        e.prototype.pcSocket = "",
        e.prototype.fileServer = "",
        e.prototype.staticServer = "",
        e.prototype.oldHosts = a.emptyArray,
        e.prototype.notifySocket = "",
        e.prototype.mobileClusterSocket = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.http && e.hasOwnProperty("http") && t.uint32(10).string(e.http),
            null != e.mobileSocket && e.hasOwnProperty("mobileSocket") && t.uint32(18).string(e.mobileSocket),
            null != e.pcSocket && e.hasOwnProperty("pcSocket") && t.uint32(26).string(e.pcSocket),
            null != e.fileServer && e.hasOwnProperty("fileServer") && t.uint32(34).string(e.fileServer),
            null != e.staticServer && e.hasOwnProperty("staticServer") && t.uint32(42).string(e.staticServer),
            null != e.oldHosts && e.oldHosts.length)
                for (var n = 0; n < e.oldHosts.length; ++n)
                    t.uint32(50).string(e.oldHosts[n]);
            return null != e.notifySocket && e.hasOwnProperty("notifySocket") && t.uint32(58).string(e.notifySocket),
            null != e.mobileClusterSocket && e.hasOwnProperty("mobileClusterSocket") && t.uint32(66).string(e.mobileClusterSocket),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetIMServerConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.http = e.string();
                    break;
                case 2:
                    r.mobileSocket = e.string();
                    break;
                case 3:
                    r.pcSocket = e.string();
                    break;
                case 4:
                    r.fileServer = e.string();
                    break;
                case 5:
                    r.staticServer = e.string();
                    break;
                case 6:
                    r.oldHosts && r.oldHosts.length || (r.oldHosts = []),
                    r.oldHosts.push(e.string());
                    break;
                case 7:
                    r.notifySocket = e.string();
                    break;
                case 8:
                    r.mobileClusterSocket = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetIMServerConfig)
                return e;
            var t = new s.HttpResponseBodyGetIMServerConfig;
            if (null != e.http && (t.http = String(e.http)),
            null != e.mobileSocket && (t.mobileSocket = String(e.mobileSocket)),
            null != e.pcSocket && (t.pcSocket = String(e.pcSocket)),
            null != e.fileServer && (t.fileServer = String(e.fileServer)),
            null != e.staticServer && (t.staticServer = String(e.staticServer)),
            e.oldHosts) {
                if (!Array.isArray(e.oldHosts))
                    throw TypeError(".HttpResponseBodyGetIMServerConfig.oldHosts: array expected");
                t.oldHosts = [];
                for (var n = 0; n < e.oldHosts.length; ++n)
                    t.oldHosts[n] = String(e.oldHosts[n])
            }
            return null != e.notifySocket && (t.notifySocket = String(e.notifySocket)),
            null != e.mobileClusterSocket && (t.mobileClusterSocket = String(e.mobileClusterSocket)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.oldHosts = []),
            t.defaults && (n.http = "",
            n.mobileSocket = "",
            n.pcSocket = "",
            n.fileServer = "",
            n.staticServer = "",
            n.notifySocket = "",
            n.mobileClusterSocket = ""),
            null != e.http && e.hasOwnProperty("http") && (n.http = e.http),
            null != e.mobileSocket && e.hasOwnProperty("mobileSocket") && (n.mobileSocket = e.mobileSocket),
            null != e.pcSocket && e.hasOwnProperty("pcSocket") && (n.pcSocket = e.pcSocket),
            null != e.fileServer && e.hasOwnProperty("fileServer") && (n.fileServer = e.fileServer),
            null != e.staticServer && e.hasOwnProperty("staticServer") && (n.staticServer = e.staticServer),
            e.oldHosts && e.oldHosts.length) {
                n.oldHosts = [];
                for (var r = 0; r < e.oldHosts.length; ++r)
                    n.oldHosts[r] = e.oldHosts[r]
            }
            return null != e.notifySocket && e.hasOwnProperty("notifySocket") && (n.notifySocket = e.notifySocket),
            null != e.mobileClusterSocket && e.hasOwnProperty("mobileClusterSocket") && (n.mobileClusterSocket = e.mobileClusterSocket),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckVersion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.currentVersion = "",
        e.prototype.deviceType = 0,
        e.prototype.currentBuild = 0,
        e.prototype["public"] = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.currentVersion && e.hasOwnProperty("currentVersion") && t.uint32(10).string(e.currentVersion),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(16).int32(e.deviceType),
            null != e.currentBuild && e.hasOwnProperty("currentBuild") && t.uint32(24).int32(e.currentBuild),
            null != e["public"] && e.hasOwnProperty("public") && t.uint32(32).bool(e["public"]),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckVersion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.currentVersion = e.string();
                    break;
                case 2:
                    r.deviceType = e.int32();
                    break;
                case 3:
                    r.currentBuild = e.int32();
                    break;
                case 4:
                    r["public"] = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckVersion)
                return e;
            var t = new s.HttpRequestBodyCheckVersion;
            switch (null != e.currentVersion && (t.currentVersion = String(e.currentVersion)),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return null != e.currentBuild && (t.currentBuild = 0 | e.currentBuild),
            null != e["public"] && (t["public"] = Boolean(e["public"])),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.currentVersion = "",
            n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0,
            n.currentBuild = 0,
            n["public"] = !1),
            null != e.currentVersion && e.hasOwnProperty("currentVersion") && (n.currentVersion = e.currentVersion),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            null != e.currentBuild && e.hasOwnProperty("currentBuild") && (n.currentBuild = e.currentBuild),
            null != e["public"] && e.hasOwnProperty("public") && (n["public"] = e["public"]),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckVersion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.newVersion = "",
        e.prototype.updateDescription = "",
        e.prototype.downloadUrl = "",
        e.prototype.forceUpdate = !1,
        e.prototype.newBuild = 0,
        e.prototype.deviceType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.newVersion && e.hasOwnProperty("newVersion") && t.uint32(10).string(e.newVersion),
            null != e.updateDescription && e.hasOwnProperty("updateDescription") && t.uint32(18).string(e.updateDescription),
            null != e.downloadUrl && e.hasOwnProperty("downloadUrl") && t.uint32(26).string(e.downloadUrl),
            null != e.forceUpdate && e.hasOwnProperty("forceUpdate") && t.uint32(32).bool(e.forceUpdate),
            null != e.newBuild && e.hasOwnProperty("newBuild") && t.uint32(40).int32(e.newBuild),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(48).int32(e.deviceType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckVersion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.newVersion = e.string();
                    break;
                case 2:
                    r.updateDescription = e.string();
                    break;
                case 3:
                    r.downloadUrl = e.string();
                    break;
                case 4:
                    r.forceUpdate = e.bool();
                    break;
                case 5:
                    r.newBuild = e.int32();
                    break;
                case 6:
                    r.deviceType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCheckVersion)
                return e;
            var t = new s.HttpResponseBodyCheckVersion;
            switch (null != e.newVersion && (t.newVersion = String(e.newVersion)),
            null != e.updateDescription && (t.updateDescription = String(e.updateDescription)),
            null != e.downloadUrl && (t.downloadUrl = String(e.downloadUrl)),
            null != e.forceUpdate && (t.forceUpdate = Boolean(e.forceUpdate)),
            null != e.newBuild && (t.newBuild = 0 | e.newBuild),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.newVersion = "",
            n.updateDescription = "",
            n.downloadUrl = "",
            n.forceUpdate = !1,
            n.newBuild = 0,
            n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0),
            null != e.newVersion && e.hasOwnProperty("newVersion") && (n.newVersion = e.newVersion),
            null != e.updateDescription && e.hasOwnProperty("updateDescription") && (n.updateDescription = e.updateDescription),
            null != e.downloadUrl && e.hasOwnProperty("downloadUrl") && (n.downloadUrl = e.downloadUrl),
            null != e.forceUpdate && e.hasOwnProperty("forceUpdate") && (n.forceUpdate = e.forceUpdate),
            null != e.newBuild && e.hasOwnProperty("newBuild") && (n.newBuild = e.newBuild),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGlobalMuteNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.muteNotification = !1,
        e.prototype.muteNotificationStart = "",
        e.prototype.muteNotificationEnd = "",
        e.prototype.timezone = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.muteNotification && e.hasOwnProperty("muteNotification") && t.uint32(8).bool(e.muteNotification),
            null != e.muteNotificationStart && e.hasOwnProperty("muteNotificationStart") && t.uint32(18).string(e.muteNotificationStart),
            null != e.muteNotificationEnd && e.hasOwnProperty("muteNotificationEnd") && t.uint32(26).string(e.muteNotificationEnd),
            null != e.timezone && e.hasOwnProperty("timezone") && t.uint32(34).string(e.timezone),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGlobalMuteNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.muteNotification = e.bool();
                    break;
                case 2:
                    r.muteNotificationStart = e.string();
                    break;
                case 3:
                    r.muteNotificationEnd = e.string();
                    break;
                case 4:
                    r.timezone = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGlobalMuteNotification)
                return e;
            var t = new s.HttpRequestBodySetGlobalMuteNotification;
            return null != e.muteNotification && (t.muteNotification = Boolean(e.muteNotification)),
            null != e.muteNotificationStart && (t.muteNotificationStart = String(e.muteNotificationStart)),
            null != e.muteNotificationEnd && (t.muteNotificationEnd = String(e.muteNotificationEnd)),
            null != e.timezone && (t.timezone = String(e.timezone)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.muteNotification = !1,
            n.muteNotificationStart = "",
            n.muteNotificationEnd = "",
            n.timezone = ""),
            null != e.muteNotification && e.hasOwnProperty("muteNotification") && (n.muteNotification = e.muteNotification),
            null != e.muteNotificationStart && e.hasOwnProperty("muteNotificationStart") && (n.muteNotificationStart = e.muteNotificationStart),
            null != e.muteNotificationEnd && e.hasOwnProperty("muteNotificationEnd") && (n.muteNotificationEnd = e.muteNotificationEnd),
            null != e.timezone && e.hasOwnProperty("timezone") && (n.timezone = e.timezone),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGlobalMuteNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGlobalMuteNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGlobalMuteNotification ? e : new s.HttpResponseBodySetGlobalMuteNotification
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetPrivateConversationPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.password = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.password && e.hasOwnProperty("password") && t.uint32(10).string(e.password),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetPrivateConversationPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.password = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetPrivateConversationPassword)
                return e;
            var t = new s.HttpRequestBodySetPrivateConversationPassword;
            return null != e.password && (t.password = String(e.password)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.password = ""),
            null != e.password && e.hasOwnProperty("password") && (n.password = e.password),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetPrivateConversationPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetPrivateConversationPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetPrivateConversationPassword ? e : new s.HttpResponseBodySetPrivateConversationPassword
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyModifyPrivateConversationPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.password = "",
        e.prototype.newPassword = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.password && e.hasOwnProperty("password") && t.uint32(10).string(e.password),
            null != e.newPassword && e.hasOwnProperty("newPassword") && t.uint32(18).string(e.newPassword),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyModifyPrivateConversationPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.password = e.string();
                    break;
                case 2:
                    r.newPassword = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyModifyPrivateConversationPassword)
                return e;
            var t = new s.HttpRequestBodyModifyPrivateConversationPassword;
            return null != e.password && (t.password = String(e.password)),
            null != e.newPassword && (t.newPassword = String(e.newPassword)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.password = "",
            n.newPassword = ""),
            null != e.password && e.hasOwnProperty("password") && (n.password = e.password),
            null != e.newPassword && e.hasOwnProperty("newPassword") && (n.newPassword = e.newPassword),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyModifyPrivateConversationPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyModifyPrivateConversationPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyModifyPrivateConversationPassword ? e : new s.HttpResponseBodyModifyPrivateConversationPassword
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyResetPrivateConversationPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.loginPassword = "",
        e.prototype.newPassword = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.loginPassword && e.hasOwnProperty("loginPassword") && t.uint32(10).string(e.loginPassword),
            null != e.newPassword && e.hasOwnProperty("newPassword") && t.uint32(18).string(e.newPassword),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyResetPrivateConversationPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.loginPassword = e.string();
                    break;
                case 2:
                    r.newPassword = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyResetPrivateConversationPassword)
                return e;
            var t = new s.HttpRequestBodyResetPrivateConversationPassword;
            return null != e.loginPassword && (t.loginPassword = String(e.loginPassword)),
            null != e.newPassword && (t.newPassword = String(e.newPassword)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.loginPassword = "",
            n.newPassword = ""),
            null != e.loginPassword && e.hasOwnProperty("loginPassword") && (n.loginPassword = e.loginPassword),
            null != e.newPassword && e.hasOwnProperty("newPassword") && (n.newPassword = e.newPassword),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyResetPrivateConversationPassword = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyResetPrivateConversationPassword;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyResetPrivateConversationPassword ? e : new s.HttpResponseBodyResetPrivateConversationPassword
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadLog = function() {
        function e(e) {
            if (this.logs = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.logs = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.logs && e.logs.length)
                for (var n = 0; n < e.logs.length; ++n)
                    s.HttpLogItem.encode(e.logs[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadLog;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.logs && r.logs.length || (r.logs = []),
                    r.logs.push(s.HttpLogItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadLog)
                return e;
            var t = new s.HttpRequestBodyUploadLog;
            if (e.logs) {
                if (!Array.isArray(e.logs))
                    throw TypeError(".HttpRequestBodyUploadLog.logs: array expected");
                t.logs = [];
                for (var n = 0; n < e.logs.length; ++n) {
                    if ("object" !== typeof e.logs[n])
                        throw TypeError(".HttpRequestBodyUploadLog.logs: object expected");
                    t.logs[n] = s.HttpLogItem.fromObject(e.logs[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.logs = []),
            e.logs && e.logs.length) {
                n.logs = [];
                for (var r = 0; r < e.logs.length; ++r)
                    n.logs[r] = s.HttpLogItem.toObject(e.logs[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadLog = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadLog;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUploadLog ? e : new s.HttpResponseBodyUploadLog
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetAddFriendVerify = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.addFriendVerify = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.addFriendVerify && e.hasOwnProperty("addFriendVerify") && t.uint32(8).bool(e.addFriendVerify),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetAddFriendVerify;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.addFriendVerify = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetAddFriendVerify)
                return e;
            var t = new s.HttpRequestBodySetAddFriendVerify;
            return null != e.addFriendVerify && (t.addFriendVerify = Boolean(e.addFriendVerify)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.addFriendVerify = !1),
            null != e.addFriendVerify && e.hasOwnProperty("addFriendVerify") && (n.addFriendVerify = e.addFriendVerify),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetAddFriendVerify = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetAddFriendVerify;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetAddFriendVerify ? e : new s.HttpResponseBodySetAddFriendVerify
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetSearchEmail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.searchEmail = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.searchEmail && e.hasOwnProperty("searchEmail") && t.uint32(8).bool(e.searchEmail),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetSearchEmail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.searchEmail = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetSearchEmail)
                return e;
            var t = new s.HttpRequestBodySetSearchEmail;
            return null != e.searchEmail && (t.searchEmail = Boolean(e.searchEmail)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.searchEmail = !1),
            null != e.searchEmail && e.hasOwnProperty("searchEmail") && (n.searchEmail = e.searchEmail),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetSearchEmail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetSearchEmail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetSearchEmail ? e : new s.HttpResponseBodySetSearchEmail
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetSearchPhoneNumber = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.searchPhoneNumber = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.searchPhoneNumber && e.hasOwnProperty("searchPhoneNumber") && t.uint32(8).bool(e.searchPhoneNumber),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetSearchPhoneNumber;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.searchPhoneNumber = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetSearchPhoneNumber)
                return e;
            var t = new s.HttpRequestBodySetSearchPhoneNumber;
            return null != e.searchPhoneNumber && (t.searchPhoneNumber = Boolean(e.searchPhoneNumber)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.searchPhoneNumber = !1),
            null != e.searchPhoneNumber && e.hasOwnProperty("searchPhoneNumber") && (n.searchPhoneNumber = e.searchPhoneNumber),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetSearchPhoneNumber = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetSearchPhoneNumber;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetSearchPhoneNumber ? e : new s.HttpResponseBodySetSearchPhoneNumber
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetSearchAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.searchAccount = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.searchAccount && e.hasOwnProperty("searchAccount") && t.uint32(8).bool(e.searchAccount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetSearchAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.searchAccount = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetSearchAccount)
                return e;
            var t = new s.HttpRequestBodySetSearchAccount;
            return null != e.searchAccount && (t.searchAccount = Boolean(e.searchAccount)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.searchAccount = !1),
            null != e.searchAccount && e.hasOwnProperty("searchAccount") && (n.searchAccount = e.searchAccount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetSearchAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetSearchAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetSearchAccount ? e : new s.HttpResponseBodySetSearchAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupChatAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupChatAddFriend = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupChatAddFriend && e.hasOwnProperty("groupChatAddFriend") && t.uint32(8).bool(e.groupChatAddFriend),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupChatAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupChatAddFriend = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupChatAddFriend)
                return e;
            var t = new s.HttpRequestBodySetGroupChatAddFriend;
            return null != e.groupChatAddFriend && (t.groupChatAddFriend = Boolean(e.groupChatAddFriend)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupChatAddFriend = !1),
            null != e.groupChatAddFriend && e.hasOwnProperty("groupChatAddFriend") && (n.groupChatAddFriend = e.groupChatAddFriend),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupChatAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupChatAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupChatAddFriend ? e : new s.HttpResponseBodySetGroupChatAddFriend
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetQrcodeAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrcodeAddFriend = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.qrcodeAddFriend && e.hasOwnProperty("qrcodeAddFriend") && t.uint32(8).bool(e.qrcodeAddFriend),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetQrcodeAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.qrcodeAddFriend = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetQrcodeAddFriend)
                return e;
            var t = new s.HttpRequestBodySetQrcodeAddFriend;
            return null != e.qrcodeAddFriend && (t.qrcodeAddFriend = Boolean(e.qrcodeAddFriend)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.qrcodeAddFriend = !1),
            null != e.qrcodeAddFriend && e.hasOwnProperty("qrcodeAddFriend") && (n.qrcodeAddFriend = e.qrcodeAddFriend),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetQrcodeAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetQrcodeAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetQrcodeAddFriend ? e : new s.HttpResponseBodySetQrcodeAddFriend
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetPersonalCardAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.personalCardAddFriend = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.personalCardAddFriend && e.hasOwnProperty("personalCardAddFriend") && t.uint32(8).bool(e.personalCardAddFriend),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetPersonalCardAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.personalCardAddFriend = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetPersonalCardAddFriend)
                return e;
            var t = new s.HttpRequestBodySetPersonalCardAddFriend;
            return null != e.personalCardAddFriend && (t.personalCardAddFriend = Boolean(e.personalCardAddFriend)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.personalCardAddFriend = !1),
            null != e.personalCardAddFriend && e.hasOwnProperty("personalCardAddFriend") && (n.personalCardAddFriend = e.personalCardAddFriend),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetPersonalCardAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetPersonalCardAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetPersonalCardAddFriend ? e : new s.HttpResponseBodySetPersonalCardAddFriend
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetCompanyAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyAddFriend = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyAddFriend && e.hasOwnProperty("companyAddFriend") && t.uint32(8).bool(e.companyAddFriend),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetCompanyAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyAddFriend = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetCompanyAddFriend)
                return e;
            var t = new s.HttpRequestBodySetCompanyAddFriend;
            return null != e.companyAddFriend && (t.companyAddFriend = Boolean(e.companyAddFriend)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyAddFriend = !1),
            null != e.companyAddFriend && e.hasOwnProperty("companyAddFriend") && (n.companyAddFriend = e.companyAddFriend),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetCompanyAddFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetCompanyAddFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetCompanyAddFriend ? e : new s.HttpResponseBodySetCompanyAddFriend
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetRemindMessageSound = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).bool(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetRemindMessageSound;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetRemindMessageSound)
                return e;
            var t = new s.HttpRequestBodySetRemindMessageSound;
            return null != e.state && (t.state = Boolean(e.state)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = !1),
            null != e.state && e.hasOwnProperty("state") && (n.state = e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetRemindMessageSound = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetRemindMessageSound;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetRemindMessageSound)
                return e;
            var t = new s.HttpResponseBodySetRemindMessageSound;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetAddedEmotions = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetAddedEmotions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetAddedEmotions ? e : new s.HttpRequestBodyGetAddedEmotions
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetAddedEmotions = function() {
        function e(e) {
            if (this.emotions = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotions = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.emotions && e.emotions.length)
                for (var n = 0; n < e.emotions.length; ++n)
                    s.HttpEmotion.encode(e.emotions[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetAddedEmotions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotions && r.emotions.length || (r.emotions = []),
                    r.emotions.push(s.HttpEmotion.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetAddedEmotions)
                return e;
            var t = new s.HttpResponseBodyGetAddedEmotions;
            if (e.emotions) {
                if (!Array.isArray(e.emotions))
                    throw TypeError(".HttpResponseBodyGetAddedEmotions.emotions: array expected");
                t.emotions = [];
                for (var n = 0; n < e.emotions.length; ++n) {
                    if ("object" !== typeof e.emotions[n])
                        throw TypeError(".HttpResponseBodyGetAddedEmotions.emotions: object expected");
                    t.emotions[n] = s.HttpEmotion.fromObject(e.emotions[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.emotions = []),
            e.emotions && e.emotions.length) {
                n.emotions = [];
                for (var r = 0; r < e.emotions.length; ++r)
                    n.emotions[r] = s.HttpEmotion.toObject(e.emotions[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddEmotion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotion = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.emotion && e.hasOwnProperty("emotion") && s.HttpEmotion.encode(e.emotion, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddEmotion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotion = s.HttpEmotion.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddEmotion)
                return e;
            var t = new s.HttpRequestBodyAddEmotion;
            if (null != e.emotion) {
                if ("object" !== typeof e.emotion)
                    throw TypeError(".HttpRequestBodyAddEmotion.emotion: object expected");
                t.emotion = s.HttpEmotion.fromObject(e.emotion)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.emotion = null),
            null != e.emotion && e.hasOwnProperty("emotion") && (n.emotion = s.HttpEmotion.toObject(e.emotion, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddEmotion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotion = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.emotion && e.hasOwnProperty("emotion") && s.HttpEmotion.encode(e.emotion, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddEmotion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotion = s.HttpEmotion.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyAddEmotion)
                return e;
            var t = new s.HttpResponseBodyAddEmotion;
            if (null != e.emotion) {
                if ("object" !== typeof e.emotion)
                    throw TypeError(".HttpResponseBodyAddEmotion.emotion: object expected");
                t.emotion = s.HttpEmotion.fromObject(e.emotion)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.emotion = null),
            null != e.emotion && e.hasOwnProperty("emotion") && (n.emotion = s.HttpEmotion.toObject(e.emotion, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyTopEmotions = function() {
        function e(e) {
            if (this.emotionIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotionIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.emotionIds && e.emotionIds.length)
                for (var n = 0; n < e.emotionIds.length; ++n)
                    t.uint32(10).string(e.emotionIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyTopEmotions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotionIds && r.emotionIds.length || (r.emotionIds = []),
                    r.emotionIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyTopEmotions)
                return e;
            var t = new s.HttpRequestBodyTopEmotions;
            if (e.emotionIds) {
                if (!Array.isArray(e.emotionIds))
                    throw TypeError(".HttpRequestBodyTopEmotions.emotionIds: array expected");
                t.emotionIds = [];
                for (var n = 0; n < e.emotionIds.length; ++n)
                    t.emotionIds[n] = String(e.emotionIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.emotionIds = []),
            e.emotionIds && e.emotionIds.length) {
                n.emotionIds = [];
                for (var r = 0; r < e.emotionIds.length; ++r)
                    n.emotionIds[r] = e.emotionIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyTopEmotions = function() {
        function e(e) {
            if (this.emotions = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotions = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.emotions && e.emotions.length)
                for (var n = 0; n < e.emotions.length; ++n)
                    s.HttpEmotionOrder.encode(e.emotions[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyTopEmotions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotions && r.emotions.length || (r.emotions = []),
                    r.emotions.push(s.HttpEmotionOrder.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyTopEmotions)
                return e;
            var t = new s.HttpResponseBodyTopEmotions;
            if (e.emotions) {
                if (!Array.isArray(e.emotions))
                    throw TypeError(".HttpResponseBodyTopEmotions.emotions: array expected");
                t.emotions = [];
                for (var n = 0; n < e.emotions.length; ++n) {
                    if ("object" !== typeof e.emotions[n])
                        throw TypeError(".HttpResponseBodyTopEmotions.emotions: object expected");
                    t.emotions[n] = s.HttpEmotionOrder.fromObject(e.emotions[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.emotions = []),
            e.emotions && e.emotions.length) {
                n.emotions = [];
                for (var r = 0; r < e.emotions.length; ++r)
                    n.emotions[r] = s.HttpEmotionOrder.toObject(e.emotions[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteEmotions = function() {
        function e(e) {
            if (this.emotionIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.emotionIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.emotionIds && e.emotionIds.length)
                for (var n = 0; n < e.emotionIds.length; ++n)
                    t.uint32(10).string(e.emotionIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteEmotions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.emotionIds && r.emotionIds.length || (r.emotionIds = []),
                    r.emotionIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteEmotions)
                return e;
            var t = new s.HttpRequestBodyDeleteEmotions;
            if (e.emotionIds) {
                if (!Array.isArray(e.emotionIds))
                    throw TypeError(".HttpRequestBodyDeleteEmotions.emotionIds: array expected");
                t.emotionIds = [];
                for (var n = 0; n < e.emotionIds.length; ++n)
                    t.emotionIds[n] = String(e.emotionIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.emotionIds = []),
            e.emotionIds && e.emotionIds.length) {
                n.emotionIds = [];
                for (var r = 0; r < e.emotionIds.length; ++r)
                    n.emotionIds[r] = e.emotionIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteEmotions = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteEmotions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteEmotions ? e : new s.HttpResponseBodyDeleteEmotions
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFavorites = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.index = 0,
        e.prototype.count = 0,
        e.prototype.fixUrl = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.index && e.hasOwnProperty("index") && t.uint32(8).uint32(e.index),
            null != e.count && e.hasOwnProperty("count") && t.uint32(16).uint32(e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && t.uint32(24).bool(e.fixUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFavorites;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.index = e.uint32();
                    break;
                case 2:
                    r.count = e.uint32();
                    break;
                case 3:
                    r.fixUrl = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetFavorites)
                return e;
            var t = new s.HttpRequestBodyGetFavorites;
            return null != e.index && (t.index = e.index >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            null != e.fixUrl && (t.fixUrl = Boolean(e.fixUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.index = 0,
            n.count = 0,
            n.fixUrl = !1),
            null != e.index && e.hasOwnProperty("index") && (n.index = e.index),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && (n.fixUrl = e.fixUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFavorites = function() {
        function e(e) {
            if (this.favoriteMessages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.favoriteMessages = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.favoriteMessages && e.favoriteMessages.length)
                for (var n = 0; n < e.favoriteMessages.length; ++n)
                    s.HttpFavoriteMessage.encode(e.favoriteMessages[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFavorites;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.favoriteMessages && r.favoriteMessages.length || (r.favoriteMessages = []),
                    r.favoriteMessages.push(s.HttpFavoriteMessage.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFavorites)
                return e;
            var t = new s.HttpResponseBodyGetFavorites;
            if (e.favoriteMessages) {
                if (!Array.isArray(e.favoriteMessages))
                    throw TypeError(".HttpResponseBodyGetFavorites.favoriteMessages: array expected");
                t.favoriteMessages = [];
                for (var n = 0; n < e.favoriteMessages.length; ++n) {
                    if ("object" !== typeof e.favoriteMessages[n])
                        throw TypeError(".HttpResponseBodyGetFavorites.favoriteMessages: object expected");
                    t.favoriteMessages[n] = s.HttpFavoriteMessage.fromObject(e.favoriteMessages[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.favoriteMessages = []),
            t.defaults && (n.hasMore = !1),
            e.favoriteMessages && e.favoriteMessages.length) {
                n.favoriteMessages = [];
                for (var r = 0; r < e.favoriteMessages.length; ++r)
                    n.favoriteMessages[r] = s.HttpFavoriteMessage.toObject(e.favoriteMessages[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddFavoriteMessage = function() {
        function e(e) {
            if (this.messageIds = [],
            this.messages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationType = 0,
        e.prototype.conversationId = 0,
        e.prototype.messageIds = a.emptyArray,
        e.prototype.messages = a.emptyArray,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(8).int32(e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            null != e.messageIds && e.messageIds.length)
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.uint32(26).string(e.messageIds[n]);
            if (null != e.messages && e.messages.length)
                for (n = 0; n < e.messages.length; ++n)
                    s.CommonMessage.encode(e.messages[n], t.uint32(34).fork()).ldelim();
            return null != e.userId && e.hasOwnProperty("userId") && t.uint32(40).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationType = e.int32();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                case 3:
                    r.messageIds && r.messageIds.length || (r.messageIds = []),
                    r.messageIds.push(e.string());
                    break;
                case 4:
                    r.messages && r.messages.length || (r.messages = []),
                    r.messages.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                case 5:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddFavoriteMessage)
                return e;
            var t = new s.HttpRequestBodyAddFavoriteMessage;
            switch (e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.messageIds) {
                if (!Array.isArray(e.messageIds))
                    throw TypeError(".HttpRequestBodyAddFavoriteMessage.messageIds: array expected");
                t.messageIds = [];
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.messageIds[n] = String(e.messageIds[n])
            }
            if (e.messages) {
                if (!Array.isArray(e.messages))
                    throw TypeError(".HttpRequestBodyAddFavoriteMessage.messages: array expected");
                t.messages = [];
                for (n = 0; n < e.messages.length; ++n) {
                    if ("object" !== typeof e.messages[n])
                        throw TypeError(".HttpRequestBodyAddFavoriteMessage.messages: object expected");
                    t.messages[n] = s.CommonMessage.fromObject(e.messages[n])
                }
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messageIds = [],
            n.messages = []),
            t.defaults && (n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.conversationId = 0,
            n.userId = 0),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            e.messageIds && e.messageIds.length) {
                n.messageIds = [];
                for (var r = 0; r < e.messageIds.length; ++r)
                    n.messageIds[r] = e.messageIds[r]
            }
            if (e.messages && e.messages.length) {
                n.messages = [];
                for (r = 0; r < e.messages.length; ++r)
                    n.messages[r] = s.CommonMessage.toObject(e.messages[r], t)
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddFavoriteMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddFavoriteMessage ? e : new s.HttpResponseBodyAddFavoriteMessage
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteFavoriteMessage = function() {
        function e(e) {
            if (this.messageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.messageIds && e.messageIds.length)
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.uint32(10).string(e.messageIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageIds && r.messageIds.length || (r.messageIds = []),
                    r.messageIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteFavoriteMessage)
                return e;
            var t = new s.HttpRequestBodyDeleteFavoriteMessage;
            if (e.messageIds) {
                if (!Array.isArray(e.messageIds))
                    throw TypeError(".HttpRequestBodyDeleteFavoriteMessage.messageIds: array expected");
                t.messageIds = [];
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.messageIds[n] = String(e.messageIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messageIds = []),
            e.messageIds && e.messageIds.length) {
                n.messageIds = [];
                for (var r = 0; r < e.messageIds.length; ++r)
                    n.messageIds[r] = e.messageIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteFavoriteMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteFavoriteMessage ? e : new s.HttpResponseBodyDeleteFavoriteMessage
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySearchFavoriteMessage = function() {
        function e(e) {
            if (this.bodyTypes = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.key = "",
        e.prototype.index = 0,
        e.prototype.count = 0,
        e.prototype.fixUrl = !1,
        e.prototype.bodyTypes = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.key && e.hasOwnProperty("key") && t.uint32(10).string(e.key),
            null != e.index && e.hasOwnProperty("index") && t.uint32(16).uint32(e.index),
            null != e.count && e.hasOwnProperty("count") && t.uint32(24).uint32(e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && t.uint32(32).bool(e.fixUrl),
            null != e.bodyTypes && e.bodyTypes.length)
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.uint32(42).string(e.bodyTypes[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySearchFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.key = e.string();
                    break;
                case 2:
                    r.index = e.uint32();
                    break;
                case 3:
                    r.count = e.uint32();
                    break;
                case 4:
                    r.fixUrl = e.bool();
                    break;
                case 5:
                    r.bodyTypes && r.bodyTypes.length || (r.bodyTypes = []),
                    r.bodyTypes.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySearchFavoriteMessage)
                return e;
            var t = new s.HttpRequestBodySearchFavoriteMessage;
            if (null != e.key && (t.key = String(e.key)),
            null != e.index && (t.index = e.index >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            null != e.fixUrl && (t.fixUrl = Boolean(e.fixUrl)),
            e.bodyTypes) {
                if (!Array.isArray(e.bodyTypes))
                    throw TypeError(".HttpRequestBodySearchFavoriteMessage.bodyTypes: array expected");
                t.bodyTypes = [];
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.bodyTypes[n] = String(e.bodyTypes[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.bodyTypes = []),
            t.defaults && (n.key = "",
            n.index = 0,
            n.count = 0,
            n.fixUrl = !1),
            null != e.key && e.hasOwnProperty("key") && (n.key = e.key),
            null != e.index && e.hasOwnProperty("index") && (n.index = e.index),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && (n.fixUrl = e.fixUrl),
            e.bodyTypes && e.bodyTypes.length) {
                n.bodyTypes = [];
                for (var r = 0; r < e.bodyTypes.length; ++r)
                    n.bodyTypes[r] = e.bodyTypes[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySearchFavoriteMessage = function() {
        function e(e) {
            if (this.favoriteMessages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.favoriteMessages = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.favoriteMessages && e.favoriteMessages.length)
                for (var n = 0; n < e.favoriteMessages.length; ++n)
                    s.HttpFavoriteMessage.encode(e.favoriteMessages[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySearchFavoriteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.favoriteMessages && r.favoriteMessages.length || (r.favoriteMessages = []),
                    r.favoriteMessages.push(s.HttpFavoriteMessage.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySearchFavoriteMessage)
                return e;
            var t = new s.HttpResponseBodySearchFavoriteMessage;
            if (e.favoriteMessages) {
                if (!Array.isArray(e.favoriteMessages))
                    throw TypeError(".HttpResponseBodySearchFavoriteMessage.favoriteMessages: array expected");
                t.favoriteMessages = [];
                for (var n = 0; n < e.favoriteMessages.length; ++n) {
                    if ("object" !== typeof e.favoriteMessages[n])
                        throw TypeError(".HttpResponseBodySearchFavoriteMessage.favoriteMessages: object expected");
                    t.favoriteMessages[n] = s.HttpFavoriteMessage.fromObject(e.favoriteMessages[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.favoriteMessages = []),
            t.defaults && (n.hasMore = !1),
            e.favoriteMessages && e.favoriteMessages.length) {
                n.favoriteMessages = [];
                for (var r = 0; r < e.favoriteMessages.length; ++r)
                    n.favoriteMessages[r] = s.HttpFavoriteMessage.toObject(e.favoriteMessages[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadNetworkStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.networkType = 0,
        e.prototype.wifiName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.networkType && e.hasOwnProperty("networkType") && t.uint32(8).int32(e.networkType),
            null != e.wifiName && e.hasOwnProperty("wifiName") && t.uint32(18).string(e.wifiName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadNetworkStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.networkType = e.int32();
                    break;
                case 2:
                    r.wifiName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadNetworkStatus)
                return e;
            var t = new s.HttpRequestBodyUploadNetworkStatus;
            switch (e.networkType) {
            case "CommonNetworkTypeUndefined":
            case 0:
                t.networkType = 0;
                break;
            case "CommonNetworkTypeWIFI":
            case 1:
                t.networkType = 1;
                break;
            case "CommonNetworkTypeGPRS":
            case 2:
                t.networkType = 2;
                break
            }
            return null != e.wifiName && (t.wifiName = String(e.wifiName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.networkType = t.enums === String ? "CommonNetworkTypeUndefined" : 0,
            n.wifiName = ""),
            null != e.networkType && e.hasOwnProperty("networkType") && (n.networkType = t.enums === String ? s.CommonNetworkType[e.networkType] : e.networkType),
            null != e.wifiName && e.hasOwnProperty("wifiName") && (n.wifiName = e.wifiName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadNetworkStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.state = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.state && e.hasOwnProperty("state") && t.uint32(8).int32(e.state),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadNetworkStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.state = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUploadNetworkStatus)
                return e;
            var t = new s.HttpResponseBodyUploadNetworkStatus;
            switch (e.state) {
            case "CommonNetworkPCWifiStateNone":
            case 0:
                t.state = 0;
                break;
            case "CommonNetworkPCWifiStateLeave":
            case 1:
                t.state = 1;
                break;
            case "CommonNetworkPCWifiStateJoin":
            case 2:
                t.state = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.state = t.enums === String ? "CommonNetworkPCWifiStateNone" : 0),
            null != e.state && e.hasOwnProperty("state") && (n.state = t.enums === String ? s.CommonNetworkPCWifiState[e.state] : e.state),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetExtendServiceAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetExtendServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetExtendServiceAccount ? e : new s.HttpRequestBodyGetExtendServiceAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetExtendServiceAccount = function() {
        function e(e) {
            if (this.users = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.users = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.users && e.users.length)
                for (var n = 0; n < e.users.length; ++n)
                    s.HttpUserInfo.encode(e.users[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetExtendServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.users && r.users.length || (r.users = []),
                    r.users.push(s.HttpUserInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetExtendServiceAccount)
                return e;
            var t = new s.HttpResponseBodyGetExtendServiceAccount;
            if (e.users) {
                if (!Array.isArray(e.users))
                    throw TypeError(".HttpResponseBodyGetExtendServiceAccount.users: array expected");
                t.users = [];
                for (var n = 0; n < e.users.length; ++n) {
                    if ("object" !== typeof e.users[n])
                        throw TypeError(".HttpResponseBodyGetExtendServiceAccount.users: object expected");
                    t.users[n] = s.HttpUserInfo.fromObject(e.users[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.users = []),
            e.users && e.users.length) {
                n.users = [];
                for (var r = 0; r < e.users.length; ++r)
                    n.users[r] = s.HttpUserInfo.toObject(e.users[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDisableServiceAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.serviceAccountId = 0,
        e.prototype.disableStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.serviceAccountId && e.hasOwnProperty("serviceAccountId") && t.uint32(8).uint32(e.serviceAccountId),
            null != e.disableStatus && e.hasOwnProperty("disableStatus") && t.uint32(16).bool(e.disableStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDisableServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.serviceAccountId = e.uint32();
                    break;
                case 2:
                    r.disableStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDisableServiceAccount)
                return e;
            var t = new s.HttpRequestBodyDisableServiceAccount;
            return null != e.serviceAccountId && (t.serviceAccountId = e.serviceAccountId >>> 0),
            null != e.disableStatus && (t.disableStatus = Boolean(e.disableStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.serviceAccountId = 0,
            n.disableStatus = !1),
            null != e.serviceAccountId && e.hasOwnProperty("serviceAccountId") && (n.serviceAccountId = e.serviceAccountId),
            null != e.disableStatus && e.hasOwnProperty("disableStatus") && (n.disableStatus = e.disableStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDisableServiceAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDisableServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDisableServiceAccount ? e : new s.HttpResponseBodyDisableServiceAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyFriends = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyFriends;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetMyFriends ? e : new s.HttpRequestBodyGetMyFriends
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyFriends = function() {
        function e(e) {
            if (this.friendsInfo = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.friendsInfo = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.friendsInfo && e.friendsInfo.length)
                for (var n = 0; n < e.friendsInfo.length; ++n)
                    s.HttpFriendInfo.encode(e.friendsInfo[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyFriends;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.friendsInfo && r.friendsInfo.length || (r.friendsInfo = []),
                    r.friendsInfo.push(s.HttpFriendInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyFriends)
                return e;
            var t = new s.HttpResponseBodyGetMyFriends;
            if (e.friendsInfo) {
                if (!Array.isArray(e.friendsInfo))
                    throw TypeError(".HttpResponseBodyGetMyFriends.friendsInfo: array expected");
                t.friendsInfo = [];
                for (var n = 0; n < e.friendsInfo.length; ++n) {
                    if ("object" !== typeof e.friendsInfo[n])
                        throw TypeError(".HttpResponseBodyGetMyFriends.friendsInfo: object expected");
                    t.friendsInfo[n] = s.HttpFriendInfo.fromObject(e.friendsInfo[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.friendsInfo = []),
            e.friendsInfo && e.friendsInfo.length) {
                n.friendsInfo = [];
                for (var r = 0; r < e.friendsInfo.length; ++r)
                    n.friendsInfo[r] = s.HttpFriendInfo.toObject(e.friendsInfo[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFriendsInfo = function() {
        function e(e) {
            if (this.userIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userIds && e.userIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.userIds.length; ++n)
                    t.uint32(e.userIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFriendsInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.userIds && r.userIds.length || (r.userIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.userIds.push(e.uint32())
                    } else
                        r.userIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetFriendsInfo)
                return e;
            var t = new s.HttpRequestBodyGetFriendsInfo;
            if (e.userIds) {
                if (!Array.isArray(e.userIds))
                    throw TypeError(".HttpRequestBodyGetFriendsInfo.userIds: array expected");
                t.userIds = [];
                for (var n = 0; n < e.userIds.length; ++n)
                    t.userIds[n] = e.userIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userIds = []),
            e.userIds && e.userIds.length) {
                n.userIds = [];
                for (var r = 0; r < e.userIds.length; ++r)
                    n.userIds[r] = e.userIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFriendsInfo = function() {
        function e(e) {
            if (this.users = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.users = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.users && e.users.length)
                for (var n = 0; n < e.users.length; ++n)
                    s.HttpUserInfo.encode(e.users[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFriendsInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.users && r.users.length || (r.users = []),
                    r.users.push(s.HttpUserInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFriendsInfo)
                return e;
            var t = new s.HttpResponseBodyGetFriendsInfo;
            if (e.users) {
                if (!Array.isArray(e.users))
                    throw TypeError(".HttpResponseBodyGetFriendsInfo.users: array expected");
                t.users = [];
                for (var n = 0; n < e.users.length; ++n) {
                    if ("object" !== typeof e.users[n])
                        throw TypeError(".HttpResponseBodyGetFriendsInfo.users: object expected");
                    t.users[n] = s.HttpUserInfo.fromObject(e.users[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.users = []),
            e.users && e.users.length) {
                n.users = [];
                for (var r = 0; r < e.users.length; ++r)
                    n.users[r] = s.HttpUserInfo.toObject(e.users[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetFriendAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.alias = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.alias && e.hasOwnProperty("alias") && t.uint32(18).string(e.alias),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetFriendAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.alias = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetFriendAlias)
                return e;
            var t = new s.HttpRequestBodySetFriendAlias;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.alias && (t.alias = String(e.alias)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.alias = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.alias && e.hasOwnProperty("alias") && (n.alias = e.alias),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetFriendAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetFriendAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetFriendAlias)
                return e;
            var t = new s.HttpResponseBodySetFriendAlias;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendFriendRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.requestMessage = "",
        e.prototype.addFriendSource = 0,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(18).string(e.requestMessage),
            null != e.addFriendSource && e.hasOwnProperty("addFriendSource") && t.uint32(24).int32(e.addFriendSource),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(32).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendFriendRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.requestMessage = e.string();
                    break;
                case 3:
                    r.addFriendSource = e.int32();
                    break;
                case 4:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendFriendRequest)
                return e;
            var t = new s.HttpRequestBodySendFriendRequest;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            e.addFriendSource) {
            case "CommonAddFriendSourceUndefined":
            case 0:
                t.addFriendSource = 0;
                break;
            case "CommonAddFriendSourceGroupChat":
            case 1:
                t.addFriendSource = 1;
                break;
            case "CommonAddFriendSourceQRCode":
            case 2:
                t.addFriendSource = 2;
                break;
            case "CommonAddFriendSourcePersonalCard":
            case 3:
                t.addFriendSource = 3;
                break;
            case "CommonAddFriendSourceCompany":
            case 4:
                t.addFriendSource = 4;
                break;
            case "CommonAddFriendSourceOther":
            case 5:
                t.addFriendSource = 5;
                break
            }
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.requestMessage = "",
            n.addFriendSource = t.enums === String ? "CommonAddFriendSourceUndefined" : 0,
            n.groupId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            null != e.addFriendSource && e.hasOwnProperty("addFriendSource") && (n.addFriendSource = t.enums === String ? s.CommonAddFriendSource[e.addFriendSource] : e.addFriendSource),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendFriendRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).int32(e.status),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendFriendRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySendFriendRequest)
                return e;
            var t = new s.HttpResponseBodySendFriendRequest;
            switch (e.status) {
            case "CommonAddFriendStatusTypeSend":
            case 0:
                t.status = 0;
                break;
            case "CommonAddFriendStatusTypeIsFriend":
            case 1:
                t.status = 1;
                break;
            case "CommonAddFriendStatusTypeAddSuccess":
            case 2:
                t.status = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.status = t.enums === String ? "CommonAddFriendStatusTypeSend" : 0),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonAddFriendStatusType[e.status] : e.status),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAcceptFriendRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAcceptFriendRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAcceptFriendRequest)
                return e;
            var t = new s.HttpRequestBodyAcceptFriendRequest;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAcceptFriendRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.user = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.user && e.hasOwnProperty("user") && s.HttpUserInfo.encode(e.user, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAcceptFriendRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.user = s.HttpUserInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyAcceptFriendRequest)
                return e;
            var t = new s.HttpResponseBodyAcceptFriendRequest;
            if (null != e.user) {
                if ("object" !== typeof e.user)
                    throw TypeError(".HttpResponseBodyAcceptFriendRequest.user: object expected");
                t.user = s.HttpUserInfo.fromObject(e.user)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.user = null),
            null != e.user && e.hasOwnProperty("user") && (n.user = s.HttpUserInfo.toObject(e.user, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRemoveFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRemoveFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRemoveFriend)
                return e;
            var t = new s.HttpRequestBodyRemoveFriend;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRemoveFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRemoveFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRemoveFriend ? e : new s.HttpResponseBodyRemoveFriend
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetLatestFriendRequestStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetLatestFriendRequestStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetLatestFriendRequestStatus ? e : new s.HttpRequestBodyGetLatestFriendRequestStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetLatestFriendRequestStatus = function() {
        function e(e) {
            if (this.friendApplyStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.friendApplyStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.friendApplyStatus && e.friendApplyStatus.length)
                for (var n = 0; n < e.friendApplyStatus.length; ++n)
                    s.HttpFriendRequestStatus.encode(e.friendApplyStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetLatestFriendRequestStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.friendApplyStatus && r.friendApplyStatus.length || (r.friendApplyStatus = []),
                    r.friendApplyStatus.push(s.HttpFriendRequestStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetLatestFriendRequestStatus)
                return e;
            var t = new s.HttpResponseBodyGetLatestFriendRequestStatus;
            if (e.friendApplyStatus) {
                if (!Array.isArray(e.friendApplyStatus))
                    throw TypeError(".HttpResponseBodyGetLatestFriendRequestStatus.friendApplyStatus: array expected");
                t.friendApplyStatus = [];
                for (var n = 0; n < e.friendApplyStatus.length; ++n) {
                    if ("object" !== typeof e.friendApplyStatus[n])
                        throw TypeError(".HttpResponseBodyGetLatestFriendRequestStatus.friendApplyStatus: object expected");
                    t.friendApplyStatus[n] = s.HttpFriendRequestStatus.fromObject(e.friendApplyStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.friendApplyStatus = []),
            e.friendApplyStatus && e.friendApplyStatus.length) {
                n.friendApplyStatus = [];
                for (var r = 0; r < e.friendApplyStatus.length; ++r)
                    n.friendApplyStatus[r] = s.HttpFriendRequestStatus.toObject(e.friendApplyStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRemoveFriendRequestStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRemoveFriendRequestStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRemoveFriendRequestStatus)
                return e;
            var t = new s.HttpRequestBodyRemoveFriendRequestStatus;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRemoveFriendRequestStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRemoveFriendRequestStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRemoveFriendRequestStatus ? e : new s.HttpResponseBodyRemoveFriendRequestStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFriendRelationship = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFriendRelationship;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetFriendRelationship)
                return e;
            var t = new s.HttpRequestBodyGetFriendRelationship;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFriendRelationship = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).bool(e.status),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFriendRelationship;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFriendRelationship)
                return e;
            var t = new s.HttpResponseBodyGetFriendRelationship;
            return null != e.status && (t.status = Boolean(e.status)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.status = !1),
            null != e.status && e.hasOwnProperty("status") && (n.status = e.status),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUserSettings = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUserSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetUserSettings)
                return e;
            var t = new s.HttpRequestBodyGetUserSettings;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUserSettings = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.settings = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.settings && e.hasOwnProperty("settings") && s.HttpUserSettings.encode(e.settings, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUserSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.settings = s.HttpUserSettings.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUserSettings)
                return e;
            var t = new s.HttpResponseBodyGetUserSettings;
            if (null != e.settings) {
                if ("object" !== typeof e.settings)
                    throw TypeError(".HttpResponseBodyGetUserSettings.settings: object expected");
                t.settings = s.HttpUserSettings.fromObject(e.settings)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.settings = null),
            null != e.settings && e.hasOwnProperty("settings") && (n.settings = s.HttpUserSettings.toObject(e.settings, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyFollowServiceAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.serviceAccountId = 0,
        e.prototype.followStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.serviceAccountId && e.hasOwnProperty("serviceAccountId") && t.uint32(8).uint32(e.serviceAccountId),
            null != e.followStatus && e.hasOwnProperty("followStatus") && t.uint32(16).bool(e.followStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyFollowServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.serviceAccountId = e.uint32();
                    break;
                case 2:
                    r.followStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyFollowServiceAccount)
                return e;
            var t = new s.HttpRequestBodyFollowServiceAccount;
            return null != e.serviceAccountId && (t.serviceAccountId = e.serviceAccountId >>> 0),
            null != e.followStatus && (t.followStatus = Boolean(e.followStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.serviceAccountId = 0,
            n.followStatus = !1),
            null != e.serviceAccountId && e.hasOwnProperty("serviceAccountId") && (n.serviceAccountId = e.serviceAccountId),
            null != e.followStatus && e.hasOwnProperty("followStatus") && (n.followStatus = e.followStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyFollowServiceAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyFollowServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyFollowServiceAccount ? e : new s.HttpResponseBodyFollowServiceAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySearchServiceAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.key = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.key && e.hasOwnProperty("key") && t.uint32(10).string(e.key),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySearchServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.key = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySearchServiceAccount)
                return e;
            var t = new s.HttpRequestBodySearchServiceAccount;
            return null != e.key && (t.key = String(e.key)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.key = ""),
            null != e.key && e.hasOwnProperty("key") && (n.key = e.key),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySearchServiceAccount = function() {
        function e(e) {
            if (this.users = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.users = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.users && e.users.length)
                for (var n = 0; n < e.users.length; ++n)
                    s.HttpUserInfo.encode(e.users[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySearchServiceAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.users && r.users.length || (r.users = []),
                    r.users.push(s.HttpUserInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySearchServiceAccount)
                return e;
            var t = new s.HttpResponseBodySearchServiceAccount;
            if (e.users) {
                if (!Array.isArray(e.users))
                    throw TypeError(".HttpResponseBodySearchServiceAccount.users: array expected");
                t.users = [];
                for (var n = 0; n < e.users.length; ++n) {
                    if ("object" !== typeof e.users[n])
                        throw TypeError(".HttpResponseBodySearchServiceAccount.users: object expected");
                    t.users[n] = s.HttpUserInfo.fromObject(e.users[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.users = []),
            e.users && e.users.length) {
                n.users = [];
                for (var r = 0; r < e.users.length; ++r)
                    n.users[r] = s.HttpUserInfo.toObject(e.users[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadPhoneAddressBook = function() {
        function e(e) {
            if (this.contacts = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.contacts = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.contacts && e.contacts.length)
                for (var n = 0; n < e.contacts.length; ++n)
                    s.HttpPhoneAddressBook.encode(e.contacts[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadPhoneAddressBook;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.contacts && r.contacts.length || (r.contacts = []),
                    r.contacts.push(s.HttpPhoneAddressBook.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadPhoneAddressBook)
                return e;
            var t = new s.HttpRequestBodyUploadPhoneAddressBook;
            if (e.contacts) {
                if (!Array.isArray(e.contacts))
                    throw TypeError(".HttpRequestBodyUploadPhoneAddressBook.contacts: array expected");
                t.contacts = [];
                for (var n = 0; n < e.contacts.length; ++n) {
                    if ("object" !== typeof e.contacts[n])
                        throw TypeError(".HttpRequestBodyUploadPhoneAddressBook.contacts: object expected");
                    t.contacts[n] = s.HttpPhoneAddressBook.fromObject(e.contacts[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.contacts = []),
            e.contacts && e.contacts.length) {
                n.contacts = [];
                for (var r = 0; r < e.contacts.length; ++r)
                    n.contacts[r] = s.HttpPhoneAddressBook.toObject(e.contacts[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadPhoneAddressBook = function() {
        function e(e) {
            if (this.users = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.users = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.users && e.users.length)
                for (var n = 0; n < e.users.length; ++n)
                    s.HttpUserInfo.encode(e.users[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadPhoneAddressBook;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.users && r.users.length || (r.users = []),
                    r.users.push(s.HttpUserInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUploadPhoneAddressBook)
                return e;
            var t = new s.HttpResponseBodyUploadPhoneAddressBook;
            if (e.users) {
                if (!Array.isArray(e.users))
                    throw TypeError(".HttpResponseBodyUploadPhoneAddressBook.users: array expected");
                t.users = [];
                for (var n = 0; n < e.users.length; ++n) {
                    if ("object" !== typeof e.users[n])
                        throw TypeError(".HttpResponseBodyUploadPhoneAddressBook.users: object expected");
                    t.users[n] = s.HttpUserInfo.fromObject(e.users[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.users = []),
            e.users && e.users.length) {
                n.users = [];
                for (var r = 0; r < e.users.length; ++r)
                    n.users[r] = s.HttpUserInfo.toObject(e.users[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUserInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = "",
        e.prototype.thirdAccountId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(10).string(e.userId),
            null != e.thirdAccountId && e.hasOwnProperty("thirdAccountId") && t.uint32(18).string(e.thirdAccountId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUserInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.string();
                    break;
                case 2:
                    r.thirdAccountId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetUserInfo)
                return e;
            var t = new s.HttpRequestBodyGetUserInfo;
            return null != e.userId && (t.userId = String(e.userId)),
            null != e.thirdAccountId && (t.thirdAccountId = String(e.thirdAccountId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = "",
            n.thirdAccountId = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.thirdAccountId && e.hasOwnProperty("thirdAccountId") && (n.thirdAccountId = e.thirdAccountId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUserInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.user = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.user && e.hasOwnProperty("user") && s.HttpUserInfo.encode(e.user, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUserInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.user = s.HttpUserInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUserInfo)
                return e;
            var t = new s.HttpResponseBodyGetUserInfo;
            if (null != e.user) {
                if ("object" !== typeof e.user)
                    throw TypeError(".HttpResponseBodyGetUserInfo.user: object expected");
                t.user = s.HttpUserInfo.fromObject(e.user)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.user = null),
            null != e.user && e.hasOwnProperty("user") && (n.user = s.HttpUserInfo.toObject(e.user, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchGetUserInfo = function() {
        function e(e) {
            if (this.userIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userIds && e.userIds.length)
                for (var n = 0; n < e.userIds.length; ++n)
                    t.uint32(10).string(e.userIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchGetUserInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userIds && r.userIds.length || (r.userIds = []),
                    r.userIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchGetUserInfo)
                return e;
            var t = new s.HttpRequestBodyBatchGetUserInfo;
            if (e.userIds) {
                if (!Array.isArray(e.userIds))
                    throw TypeError(".HttpRequestBodyBatchGetUserInfo.userIds: array expected");
                t.userIds = [];
                for (var n = 0; n < e.userIds.length; ++n)
                    t.userIds[n] = String(e.userIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userIds = []),
            e.userIds && e.userIds.length) {
                n.userIds = [];
                for (var r = 0; r < e.userIds.length; ++r)
                    n.userIds[r] = e.userIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchGetUserInfo = function() {
        function e(e) {
            if (this.users = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.users = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.users && e.users.length)
                for (var n = 0; n < e.users.length; ++n)
                    s.HttpUserInfo.encode(e.users[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchGetUserInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.users && r.users.length || (r.users = []),
                    r.users.push(s.HttpUserInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchGetUserInfo)
                return e;
            var t = new s.HttpResponseBodyBatchGetUserInfo;
            if (e.users) {
                if (!Array.isArray(e.users))
                    throw TypeError(".HttpResponseBodyBatchGetUserInfo.users: array expected");
                t.users = [];
                for (var n = 0; n < e.users.length; ++n) {
                    if ("object" !== typeof e.users[n])
                        throw TypeError(".HttpResponseBodyBatchGetUserInfo.users: object expected");
                    t.users[n] = s.HttpUserInfo.fromObject(e.users[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.users = []),
            e.users && e.users.length) {
                n.users = [];
                for (var r = 0; r < e.users.length; ++r)
                    n.users[r] = s.HttpUserInfo.toObject(e.users[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyIsUserRegistered = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.phoneNumber = "",
        e.prototype.email = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(10).string(e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyIsUserRegistered;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.phoneNumber = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyIsUserRegistered)
                return e;
            var t = new s.HttpRequestBodyIsUserRegistered;
            return null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.email && (t.email = String(e.email)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.phoneNumber = "",
            n.email = ""),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyIsUserRegistered = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.isExist = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.isExist && e.hasOwnProperty("isExist") && t.uint32(8).bool(e.isExist),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyIsUserRegistered;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.isExist = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyIsUserRegistered)
                return e;
            var t = new s.HttpResponseBodyIsUserRegistered;
            return null != e.isExist && (t.isExist = Boolean(e.isExist)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.isExist = !1),
            null != e.isExist && e.hasOwnProperty("isExist") && (n.isExist = e.isExist),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetContactSettings = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetContactSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetContactSettings)
                return e;
            var t = new s.HttpRequestBodyGetContactSettings;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpUserAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.alias = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.alias && e.hasOwnProperty("alias") && t.uint32(18).string(e.alias),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpUserAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.alias = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpUserAlias)
                return e;
            var t = new s.HttpUserAlias;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.alias && (t.alias = String(e.alias)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.alias = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.alias && e.hasOwnProperty("alias") && (n.alias = e.alias),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetContactSettings = function() {
        function e(e) {
            if (this.starUserIds = [],
            this.muteUserIds = [],
            this.topUserIds = [],
            this.contactPrivateSettings = [],
            this.userAliasList = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.starUserIds = a.emptyArray,
        e.prototype.muteUserIds = a.emptyArray,
        e.prototype.topUserIds = a.emptyArray,
        e.prototype.contactSettingsVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.contactPrivateSettings = a.emptyArray,
        e.prototype.userId = 0,
        e.prototype.userAliasList = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.starUserIds && e.starUserIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.starUserIds.length; ++n)
                    t.uint32(e.starUserIds[n]);
                t.ldelim()
            }
            if (null != e.muteUserIds && e.muteUserIds.length) {
                t.uint32(18).fork();
                for (n = 0; n < e.muteUserIds.length; ++n)
                    t.uint32(e.muteUserIds[n]);
                t.ldelim()
            }
            if (null != e.topUserIds && e.topUserIds.length) {
                t.uint32(26).fork();
                for (n = 0; n < e.topUserIds.length; ++n)
                    t.uint32(e.topUserIds[n]);
                t.ldelim()
            }
            if (null != e.contactSettingsVersion && e.hasOwnProperty("contactSettingsVersion") && t.uint32(32).uint64(e.contactSettingsVersion),
            null != e.contactPrivateSettings && e.contactPrivateSettings.length)
                for (n = 0; n < e.contactPrivateSettings.length; ++n)
                    s.HttpContactPrivateSetting.encode(e.contactPrivateSettings[n], t.uint32(42).fork()).ldelim();
            if (null != e.userId && e.hasOwnProperty("userId") && t.uint32(48).uint32(e.userId),
            null != e.userAliasList && e.userAliasList.length)
                for (n = 0; n < e.userAliasList.length; ++n)
                    s.HttpUserAlias.encode(e.userAliasList[n], t.uint32(58).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetContactSettings;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.starUserIds && r.starUserIds.length || (r.starUserIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.starUserIds.push(e.uint32())
                    } else
                        r.starUserIds.push(e.uint32());
                    break;
                case 2:
                    if (r.muteUserIds && r.muteUserIds.length || (r.muteUserIds = []),
                    2 === (7 & i)) {
                        a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.muteUserIds.push(e.uint32())
                    } else
                        r.muteUserIds.push(e.uint32());
                    break;
                case 3:
                    if (r.topUserIds && r.topUserIds.length || (r.topUserIds = []),
                    2 === (7 & i)) {
                        a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.topUserIds.push(e.uint32())
                    } else
                        r.topUserIds.push(e.uint32());
                    break;
                case 4:
                    r.contactSettingsVersion = e.uint64();
                    break;
                case 5:
                    r.contactPrivateSettings && r.contactPrivateSettings.length || (r.contactPrivateSettings = []),
                    r.contactPrivateSettings.push(s.HttpContactPrivateSetting.decode(e, e.uint32()));
                    break;
                case 6:
                    r.userId = e.uint32();
                    break;
                case 7:
                    r.userAliasList && r.userAliasList.length || (r.userAliasList = []),
                    r.userAliasList.push(s.HttpUserAlias.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetContactSettings)
                return e;
            var t = new s.HttpResponseBodyGetContactSettings;
            if (e.starUserIds) {
                if (!Array.isArray(e.starUserIds))
                    throw TypeError(".HttpResponseBodyGetContactSettings.starUserIds: array expected");
                t.starUserIds = [];
                for (var n = 0; n < e.starUserIds.length; ++n)
                    t.starUserIds[n] = e.starUserIds[n] >>> 0
            }
            if (e.muteUserIds) {
                if (!Array.isArray(e.muteUserIds))
                    throw TypeError(".HttpResponseBodyGetContactSettings.muteUserIds: array expected");
                t.muteUserIds = [];
                for (n = 0; n < e.muteUserIds.length; ++n)
                    t.muteUserIds[n] = e.muteUserIds[n] >>> 0
            }
            if (e.topUserIds) {
                if (!Array.isArray(e.topUserIds))
                    throw TypeError(".HttpResponseBodyGetContactSettings.topUserIds: array expected");
                t.topUserIds = [];
                for (n = 0; n < e.topUserIds.length; ++n)
                    t.topUserIds[n] = e.topUserIds[n] >>> 0
            }
            if (null != e.contactSettingsVersion && (a.Long ? (t.contactSettingsVersion = a.Long.fromValue(e.contactSettingsVersion)).unsigned = !0 : "string" === typeof e.contactSettingsVersion ? t.contactSettingsVersion = parseInt(e.contactSettingsVersion, 10) : "number" === typeof e.contactSettingsVersion ? t.contactSettingsVersion = e.contactSettingsVersion : "object" === typeof e.contactSettingsVersion && (t.contactSettingsVersion = new a.LongBits(e.contactSettingsVersion.low >>> 0,e.contactSettingsVersion.high >>> 0).toNumber(!0))),
            e.contactPrivateSettings) {
                if (!Array.isArray(e.contactPrivateSettings))
                    throw TypeError(".HttpResponseBodyGetContactSettings.contactPrivateSettings: array expected");
                t.contactPrivateSettings = [];
                for (n = 0; n < e.contactPrivateSettings.length; ++n) {
                    if ("object" !== typeof e.contactPrivateSettings[n])
                        throw TypeError(".HttpResponseBodyGetContactSettings.contactPrivateSettings: object expected");
                    t.contactPrivateSettings[n] = s.HttpContactPrivateSetting.fromObject(e.contactPrivateSettings[n])
                }
            }
            if (null != e.userId && (t.userId = e.userId >>> 0),
            e.userAliasList) {
                if (!Array.isArray(e.userAliasList))
                    throw TypeError(".HttpResponseBodyGetContactSettings.userAliasList: array expected");
                t.userAliasList = [];
                for (n = 0; n < e.userAliasList.length; ++n) {
                    if ("object" !== typeof e.userAliasList[n])
                        throw TypeError(".HttpResponseBodyGetContactSettings.userAliasList: object expected");
                    t.userAliasList[n] = s.HttpUserAlias.fromObject(e.userAliasList[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.starUserIds = [],
            n.muteUserIds = [],
            n.topUserIds = [],
            n.contactPrivateSettings = [],
            n.userAliasList = []),
            t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.contactSettingsVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.contactSettingsVersion = t.longs === String ? "0" : 0;
                n.userId = 0
            }
            if (e.starUserIds && e.starUserIds.length) {
                n.starUserIds = [];
                for (var o = 0; o < e.starUserIds.length; ++o)
                    n.starUserIds[o] = e.starUserIds[o]
            }
            if (e.muteUserIds && e.muteUserIds.length) {
                n.muteUserIds = [];
                for (o = 0; o < e.muteUserIds.length; ++o)
                    n.muteUserIds[o] = e.muteUserIds[o]
            }
            if (e.topUserIds && e.topUserIds.length) {
                n.topUserIds = [];
                for (o = 0; o < e.topUserIds.length; ++o)
                    n.topUserIds[o] = e.topUserIds[o]
            }
            if (null != e.contactSettingsVersion && e.hasOwnProperty("contactSettingsVersion") && ("number" === typeof e.contactSettingsVersion ? n.contactSettingsVersion = t.longs === String ? String(e.contactSettingsVersion) : e.contactSettingsVersion : n.contactSettingsVersion = t.longs === String ? a.Long.prototype.toString.call(e.contactSettingsVersion) : t.longs === Number ? new a.LongBits(e.contactSettingsVersion.low >>> 0,e.contactSettingsVersion.high >>> 0).toNumber(!0) : e.contactSettingsVersion),
            e.contactPrivateSettings && e.contactPrivateSettings.length) {
                n.contactPrivateSettings = [];
                for (o = 0; o < e.contactPrivateSettings.length; ++o)
                    n.contactPrivateSettings[o] = s.HttpContactPrivateSetting.toObject(e.contactPrivateSettings[o], t)
            }
            if (null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            e.userAliasList && e.userAliasList.length) {
                n.userAliasList = [];
                for (o = 0; o < e.userAliasList.length; ++o)
                    n.userAliasList[o] = s.HttpUserAlias.toObject(e.userAliasList[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetStar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.starStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.starStatus && e.hasOwnProperty("starStatus") && t.uint32(24).bool(e.starStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetStar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.starStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetStar)
                return e;
            var t = new s.HttpRequestBodySetStar;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.starStatus && (t.starStatus = Boolean(e.starStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.starStatus = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.starStatus && e.hasOwnProperty("starStatus") && (n.starStatus = e.starStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetStar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetStar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetStar ? e : new s.HttpResponseBodySetStar
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMuteNotifications = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.muteNotifications = !1,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.muteNotifications && e.hasOwnProperty("muteNotifications") && t.uint32(24).bool(e.muteNotifications),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMuteNotifications;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.muteNotifications = e.bool();
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMuteNotifications)
                return e;
            var t = new s.HttpRequestBodySetMuteNotifications;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.muteNotifications && (t.muteNotifications = Boolean(e.muteNotifications)),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.muteNotifications = !1,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.muteNotifications && e.hasOwnProperty("muteNotifications") && (n.muteNotifications = e.muteNotifications),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMuteNotifications = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMuteNotifications;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetMuteNotifications ? e : new s.HttpResponseBodySetMuteNotifications
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetTop = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.topStatus = !1,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.topStatus && e.hasOwnProperty("topStatus") && t.uint32(24).bool(e.topStatus),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetTop;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.topStatus = e.bool();
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetTop)
                return e;
            var t = new s.HttpRequestBodySetTop;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.topStatus && (t.topStatus = Boolean(e.topStatus)),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.topStatus = !1,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.topStatus && e.hasOwnProperty("topStatus") && (n.topStatus = e.topStatus),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetTop = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetTop;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetTop ? e : new s.HttpResponseBodySetTop
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetContactAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.contactUserId = 0,
        e.prototype.alias = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.contactUserId && e.hasOwnProperty("contactUserId") && t.uint32(16).uint32(e.contactUserId),
            null != e.alias && e.hasOwnProperty("alias") && t.uint32(26).string(e.alias),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetContactAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.contactUserId = e.uint32();
                    break;
                case 3:
                    r.alias = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetContactAlias)
                return e;
            var t = new s.HttpRequestBodySetContactAlias;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.contactUserId && (t.contactUserId = e.contactUserId >>> 0),
            null != e.alias && (t.alias = String(e.alias)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.contactUserId = 0,
            n.alias = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.contactUserId && e.hasOwnProperty("contactUserId") && (n.contactUserId = e.contactUserId),
            null != e.alias && e.hasOwnProperty("alias") && (n.alias = e.alias),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetContactAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetContactAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetContactAlias ? e : new s.HttpResponseBodySetContactAlias
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetPrivateCountDown = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.privateCountDown = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && t.uint32(24).uint32(e.privateCountDown),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetPrivateCountDown;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.privateCountDown = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetPrivateCountDown)
                return e;
            var t = new s.HttpRequestBodySetPrivateCountDown;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.privateCountDown && (t.privateCountDown = e.privateCountDown >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.privateCountDown = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && (n.privateCountDown = e.privateCountDown),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetPrivateCountDown = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetPrivateCountDown;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetPrivateCountDown ? e : new s.HttpResponseBodySetPrivateCountDown
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFriendsOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFriendsOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetFriendsOnlineStatus ? e : new s.HttpRequestBodyGetFriendsOnlineStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFriendsOnlineStatus = function() {
        function e(e) {
            if (this.usersOnlineStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.usersOnlineStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.usersOnlineStatus && e.usersOnlineStatus.length)
                for (var n = 0; n < e.usersOnlineStatus.length; ++n)
                    s.CommonUserOnlineStatus.encode(e.usersOnlineStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFriendsOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.usersOnlineStatus && r.usersOnlineStatus.length || (r.usersOnlineStatus = []),
                    r.usersOnlineStatus.push(s.CommonUserOnlineStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFriendsOnlineStatus)
                return e;
            var t = new s.HttpResponseBodyGetFriendsOnlineStatus;
            if (e.usersOnlineStatus) {
                if (!Array.isArray(e.usersOnlineStatus))
                    throw TypeError(".HttpResponseBodyGetFriendsOnlineStatus.usersOnlineStatus: array expected");
                t.usersOnlineStatus = [];
                for (var n = 0; n < e.usersOnlineStatus.length; ++n) {
                    if ("object" !== typeof e.usersOnlineStatus[n])
                        throw TypeError(".HttpResponseBodyGetFriendsOnlineStatus.usersOnlineStatus: object expected");
                    t.usersOnlineStatus[n] = s.CommonUserOnlineStatus.fromObject(e.usersOnlineStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.usersOnlineStatus = []),
            e.usersOnlineStatus && e.usersOnlineStatus.length) {
                n.usersOnlineStatus = [];
                for (var r = 0; r < e.usersOnlineStatus.length; ++r)
                    n.usersOnlineStatus[r] = s.CommonUserOnlineStatus.toObject(e.usersOnlineStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetCompanyMembersOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetCompanyMembersOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetCompanyMembersOnlineStatus)
                return e;
            var t = new s.HttpRequestBodyGetCompanyMembersOnlineStatus;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = ""),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetCompanyMembersOnlineStatus = function() {
        function e(e) {
            if (this.usersOnlineStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.usersOnlineStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.usersOnlineStatus && e.usersOnlineStatus.length)
                for (var n = 0; n < e.usersOnlineStatus.length; ++n)
                    s.CommonUserOnlineStatus.encode(e.usersOnlineStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetCompanyMembersOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.usersOnlineStatus && r.usersOnlineStatus.length || (r.usersOnlineStatus = []),
                    r.usersOnlineStatus.push(s.CommonUserOnlineStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetCompanyMembersOnlineStatus)
                return e;
            var t = new s.HttpResponseBodyGetCompanyMembersOnlineStatus;
            if (e.usersOnlineStatus) {
                if (!Array.isArray(e.usersOnlineStatus))
                    throw TypeError(".HttpResponseBodyGetCompanyMembersOnlineStatus.usersOnlineStatus: array expected");
                t.usersOnlineStatus = [];
                for (var n = 0; n < e.usersOnlineStatus.length; ++n) {
                    if ("object" !== typeof e.usersOnlineStatus[n])
                        throw TypeError(".HttpResponseBodyGetCompanyMembersOnlineStatus.usersOnlineStatus: object expected");
                    t.usersOnlineStatus[n] = s.CommonUserOnlineStatus.fromObject(e.usersOnlineStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.usersOnlineStatus = []),
            e.usersOnlineStatus && e.usersOnlineStatus.length) {
                n.usersOnlineStatus = [];
                for (var r = 0; r < e.usersOnlineStatus.length; ++r)
                    n.usersOnlineStatus[r] = s.CommonUserOnlineStatus.toObject(e.usersOnlineStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupMembersOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupMembersOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupMembersOnlineStatus)
                return e;
            var t = new s.HttpRequestBodyGetGroupMembersOnlineStatus;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupMembersOnlineStatus = function() {
        function e(e) {
            if (this.usersOnlineStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.usersOnlineStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.usersOnlineStatus && e.usersOnlineStatus.length)
                for (var n = 0; n < e.usersOnlineStatus.length; ++n)
                    s.CommonUserOnlineStatus.encode(e.usersOnlineStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupMembersOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.usersOnlineStatus && r.usersOnlineStatus.length || (r.usersOnlineStatus = []),
                    r.usersOnlineStatus.push(s.CommonUserOnlineStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupMembersOnlineStatus)
                return e;
            var t = new s.HttpResponseBodyGetGroupMembersOnlineStatus;
            if (e.usersOnlineStatus) {
                if (!Array.isArray(e.usersOnlineStatus))
                    throw TypeError(".HttpResponseBodyGetGroupMembersOnlineStatus.usersOnlineStatus: array expected");
                t.usersOnlineStatus = [];
                for (var n = 0; n < e.usersOnlineStatus.length; ++n) {
                    if ("object" !== typeof e.usersOnlineStatus[n])
                        throw TypeError(".HttpResponseBodyGetGroupMembersOnlineStatus.usersOnlineStatus: object expected");
                    t.usersOnlineStatus[n] = s.CommonUserOnlineStatus.fromObject(e.usersOnlineStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.usersOnlineStatus = []),
            e.usersOnlineStatus && e.usersOnlineStatus.length) {
                n.usersOnlineStatus = [];
                for (var r = 0; r < e.usersOnlineStatus.length; ++r)
                    n.usersOnlineStatus[r] = s.CommonUserOnlineStatus.toObject(e.usersOnlineStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchGetUserOnlineStatus = function() {
        function e(e) {
            if (this.userIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.userIds && e.userIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.userIds.length; ++n)
                    t.uint32(e.userIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchGetUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.userIds && r.userIds.length || (r.userIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.userIds.push(e.uint32())
                    } else
                        r.userIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchGetUserOnlineStatus)
                return e;
            var t = new s.HttpRequestBodyBatchGetUserOnlineStatus;
            if (e.userIds) {
                if (!Array.isArray(e.userIds))
                    throw TypeError(".HttpRequestBodyBatchGetUserOnlineStatus.userIds: array expected");
                t.userIds = [];
                for (var n = 0; n < e.userIds.length; ++n)
                    t.userIds[n] = e.userIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userIds = []),
            e.userIds && e.userIds.length) {
                n.userIds = [];
                for (var r = 0; r < e.userIds.length; ++r)
                    n.userIds[r] = e.userIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchGetUserOnlineStatus = function() {
        function e(e) {
            if (this.usersOnlineStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.usersOnlineStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.usersOnlineStatus && e.usersOnlineStatus.length)
                for (var n = 0; n < e.usersOnlineStatus.length; ++n)
                    s.CommonUserOnlineStatus.encode(e.usersOnlineStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchGetUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.usersOnlineStatus && r.usersOnlineStatus.length || (r.usersOnlineStatus = []),
                    r.usersOnlineStatus.push(s.CommonUserOnlineStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchGetUserOnlineStatus)
                return e;
            var t = new s.HttpResponseBodyBatchGetUserOnlineStatus;
            if (e.usersOnlineStatus) {
                if (!Array.isArray(e.usersOnlineStatus))
                    throw TypeError(".HttpResponseBodyBatchGetUserOnlineStatus.usersOnlineStatus: array expected");
                t.usersOnlineStatus = [];
                for (var n = 0; n < e.usersOnlineStatus.length; ++n) {
                    if ("object" !== typeof e.usersOnlineStatus[n])
                        throw TypeError(".HttpResponseBodyBatchGetUserOnlineStatus.usersOnlineStatus: object expected");
                    t.usersOnlineStatus[n] = s.CommonUserOnlineStatus.fromObject(e.usersOnlineStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.usersOnlineStatus = []),
            e.usersOnlineStatus && e.usersOnlineStatus.length) {
                n.usersOnlineStatus = [];
                for (var r = 0; r < e.usersOnlineStatus.length; ++r)
                    n.usersOnlineStatus[r] = s.CommonUserOnlineStatus.toObject(e.usersOnlineStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetWebUserOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.statusType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.statusType && e.hasOwnProperty("statusType") && t.uint32(8).int32(e.statusType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetWebUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.statusType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetWebUserOnlineStatus)
                return e;
            var t = new s.HttpRequestBodySetWebUserOnlineStatus;
            switch (e.statusType) {
            case "CommonUserOnlineStatusTypeOffline":
            case 0:
                t.statusType = 0;
                break;
            case "CommonUserOnlineStatusTypeMobileOnline":
            case 1:
                t.statusType = 1;
                break;
            case "CommonUserOnlineStatusTypePCLeave":
            case 2:
                t.statusType = 2;
                break;
            case "CommonUserOnlineStatusTypePCOnline":
            case 3:
                t.statusType = 3;
                break;
            case "CommonUserOnlineStatusTypeExternal":
            case 4:
                t.statusType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.statusType = t.enums === String ? "CommonUserOnlineStatusTypeOffline" : 0),
            null != e.statusType && e.hasOwnProperty("statusType") && (n.statusType = t.enums === String ? s.CommonUserOnlineStatusType[e.statusType] : e.statusType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetWebUserOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetWebUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetWebUserOnlineStatus ? e : new s.HttpResponseBodySetWebUserOnlineStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySubscribeUserOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.deviceType = 0,
        e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(8).int32(e.deviceType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(24).int32(e.conversationType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySubscribeUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.deviceType = e.int32();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                case 3:
                    r.conversationType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySubscribeUserOnlineStatus)
                return e;
            var t = new s.HttpRequestBodySubscribeUserOnlineStatus;
            switch (e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0,
            n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySubscribeUserOnlineStatus = function() {
        function e(e) {
            if (this.usersOnlineStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.usersOnlineStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.usersOnlineStatus && e.usersOnlineStatus.length)
                for (var n = 0; n < e.usersOnlineStatus.length; ++n)
                    s.CommonUserOnlineStatus.encode(e.usersOnlineStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySubscribeUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.usersOnlineStatus && r.usersOnlineStatus.length || (r.usersOnlineStatus = []),
                    r.usersOnlineStatus.push(s.CommonUserOnlineStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySubscribeUserOnlineStatus)
                return e;
            var t = new s.HttpResponseBodySubscribeUserOnlineStatus;
            if (e.usersOnlineStatus) {
                if (!Array.isArray(e.usersOnlineStatus))
                    throw TypeError(".HttpResponseBodySubscribeUserOnlineStatus.usersOnlineStatus: array expected");
                t.usersOnlineStatus = [];
                for (var n = 0; n < e.usersOnlineStatus.length; ++n) {
                    if ("object" !== typeof e.usersOnlineStatus[n])
                        throw TypeError(".HttpResponseBodySubscribeUserOnlineStatus.usersOnlineStatus: object expected");
                    t.usersOnlineStatus[n] = s.CommonUserOnlineStatus.fromObject(e.usersOnlineStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.usersOnlineStatus = []),
            e.usersOnlineStatus && e.usersOnlineStatus.length) {
                n.usersOnlineStatus = [];
                for (var r = 0; r < e.usersOnlineStatus.length; ++r)
                    n.usersOnlineStatus[r] = s.CommonUserOnlineStatus.toObject(e.usersOnlineStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUnsubscribeUserOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.deviceType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(8).int32(e.deviceType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUnsubscribeUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.deviceType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUnsubscribeUserOnlineStatus)
                return e;
            var t = new s.HttpRequestBodyUnsubscribeUserOnlineStatus;
            switch (e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUnsubscribeUserOnlineStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUnsubscribeUserOnlineStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUnsubscribeUserOnlineStatus ? e : new s.HttpResponseBodyUnsubscribeUserOnlineStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetInvitationUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        var t;
        return e.prototype.userId = 0,
        e.prototype.groupId = 0,
        Object.defineProperty(e.prototype, "oneOfId", {
            get: a.oneOfGetter(t = ["userId", "groupId"]),
            set: a.oneOfSetter(t)
        }),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetInvitationUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetInvitationUrl)
                return e;
            var t = new s.HttpRequestBodyGetInvitationUrl;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId,
            t.oneofs && (n.oneOfId = "userId")),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId,
            t.oneofs && (n.oneOfId = "groupId")),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetInvitationUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.invitationUrl = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.invitationUrl && e.hasOwnProperty("invitationUrl") && t.uint32(10).string(e.invitationUrl),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(16).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetInvitationUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.invitationUrl = e.string();
                    break;
                case 2:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetInvitationUrl)
                return e;
            var t = new s.HttpResponseBodyGetInvitationUrl;
            return null != e.invitationUrl && (t.invitationUrl = String(e.invitationUrl)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.invitationUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            return null != e.invitationUrl && e.hasOwnProperty("invitationUrl") && (n.invitationUrl = e.invitationUrl),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckInvitationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.invitationCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.invitationCode && e.hasOwnProperty("invitationCode") && t.uint32(10).string(e.invitationCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckInvitationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.invitationCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckInvitationCode)
                return e;
            var t = new s.HttpRequestBodyCheckInvitationCode;
            return null != e.invitationCode && (t.invitationCode = String(e.invitationCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.invitationCode = ""),
            null != e.invitationCode && e.hasOwnProperty("invitationCode") && (n.invitationCode = e.invitationCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckInvitationCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.path = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.path && e.hasOwnProperty("path") && t.uint32(10).string(e.path),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckInvitationCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.path = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCheckInvitationCode)
                return e;
            var t = new s.HttpResponseBodyCheckInvitationCode;
            return null != e.path && (t.path = String(e.path)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.path = ""),
            null != e.path && e.hasOwnProperty("path") && (n.path = e.path),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyCompanies = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyCompanies;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetMyCompanies ? e : new s.HttpRequestBodyGetMyCompanies
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyCompanies = function() {
        function e(e) {
            if (this.companies = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companies = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.companies && e.companies.length)
                for (var n = 0; n < e.companies.length; ++n)
                    s.HttpCompany.encode(e.companies[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyCompanies;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companies && r.companies.length || (r.companies = []),
                    r.companies.push(s.HttpCompany.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyCompanies)
                return e;
            var t = new s.HttpResponseBodyGetMyCompanies;
            if (e.companies) {
                if (!Array.isArray(e.companies))
                    throw TypeError(".HttpResponseBodyGetMyCompanies.companies: array expected");
                t.companies = [];
                for (var n = 0; n < e.companies.length; ++n) {
                    if ("object" !== typeof e.companies[n])
                        throw TypeError(".HttpResponseBodyGetMyCompanies.companies: object expected");
                    t.companies[n] = s.HttpCompany.fromObject(e.companies[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.companies = []),
            e.companies && e.companies.length) {
                n.companies = [];
                for (var r = 0; r < e.companies.length; ++r)
                    n.companies[r] = s.HttpCompany.toObject(e.companies[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetCompanyBaseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetCompanyBaseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetCompanyBaseInfo)
                return e;
            var t = new s.HttpRequestBodyGetCompanyBaseInfo;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = ""),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetCompanyBaseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.company = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.company && e.hasOwnProperty("company") && s.HttpCompany.encode(e.company, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetCompanyBaseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.company = s.HttpCompany.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetCompanyBaseInfo)
                return e;
            var t = new s.HttpResponseBodyGetCompanyBaseInfo;
            if (null != e.company) {
                if ("object" !== typeof e.company)
                    throw TypeError(".HttpResponseBodyGetCompanyBaseInfo.company: object expected");
                t.company = s.HttpCompany.fromObject(e.company)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.company = null),
            null != e.company && e.hasOwnProperty("company") && (n.company = s.HttpCompany.toObject(e.company, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetCompanyOrganization = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetCompanyOrganization;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetCompanyOrganization)
                return e;
            var t = new s.HttpRequestBodyGetCompanyOrganization;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = ""),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetCompanyOrganization = function() {
        function e(e) {
            if (this.companyMembers = [],
            this.companyDepartments = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyMembers = a.emptyArray,
        e.prototype.companyDepartments = a.emptyArray,
        e.prototype.company = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.companyMembers && e.companyMembers.length)
                for (var n = 0; n < e.companyMembers.length; ++n)
                    s.HttpCompanyMember.encode(e.companyMembers[n], t.uint32(10).fork()).ldelim();
            if (null != e.companyDepartments && e.companyDepartments.length)
                for (n = 0; n < e.companyDepartments.length; ++n)
                    s.HttpCompanyDepartment.encode(e.companyDepartments[n], t.uint32(18).fork()).ldelim();
            return null != e.company && e.hasOwnProperty("company") && s.HttpCompany.encode(e.company, t.uint32(26).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetCompanyOrganization;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyMembers && r.companyMembers.length || (r.companyMembers = []),
                    r.companyMembers.push(s.HttpCompanyMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.companyDepartments && r.companyDepartments.length || (r.companyDepartments = []),
                    r.companyDepartments.push(s.HttpCompanyDepartment.decode(e, e.uint32()));
                    break;
                case 3:
                    r.company = s.HttpCompany.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetCompanyOrganization)
                return e;
            var t = new s.HttpResponseBodyGetCompanyOrganization;
            if (e.companyMembers) {
                if (!Array.isArray(e.companyMembers))
                    throw TypeError(".HttpResponseBodyGetCompanyOrganization.companyMembers: array expected");
                t.companyMembers = [];
                for (var n = 0; n < e.companyMembers.length; ++n) {
                    if ("object" !== typeof e.companyMembers[n])
                        throw TypeError(".HttpResponseBodyGetCompanyOrganization.companyMembers: object expected");
                    t.companyMembers[n] = s.HttpCompanyMember.fromObject(e.companyMembers[n])
                }
            }
            if (e.companyDepartments) {
                if (!Array.isArray(e.companyDepartments))
                    throw TypeError(".HttpResponseBodyGetCompanyOrganization.companyDepartments: array expected");
                t.companyDepartments = [];
                for (n = 0; n < e.companyDepartments.length; ++n) {
                    if ("object" !== typeof e.companyDepartments[n])
                        throw TypeError(".HttpResponseBodyGetCompanyOrganization.companyDepartments: object expected");
                    t.companyDepartments[n] = s.HttpCompanyDepartment.fromObject(e.companyDepartments[n])
                }
            }
            if (null != e.company) {
                if ("object" !== typeof e.company)
                    throw TypeError(".HttpResponseBodyGetCompanyOrganization.company: object expected");
                t.company = s.HttpCompany.fromObject(e.company)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.companyMembers = [],
            n.companyDepartments = []),
            t.defaults && (n.company = null),
            e.companyMembers && e.companyMembers.length) {
                n.companyMembers = [];
                for (var r = 0; r < e.companyMembers.length; ++r)
                    n.companyMembers[r] = s.HttpCompanyMember.toObject(e.companyMembers[r], t)
            }
            if (e.companyDepartments && e.companyDepartments.length) {
                n.companyDepartments = [];
                for (r = 0; r < e.companyDepartments.length; ++r)
                    n.companyDepartments[r] = s.HttpCompanyDepartment.toObject(e.companyDepartments[r], t)
            }
            return null != e.company && e.hasOwnProperty("company") && (n.company = s.HttpCompany.toObject(e.company, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetDepartmentStar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.departmentId = "",
        e.prototype.status = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.departmentId && e.hasOwnProperty("departmentId") && t.uint32(18).string(e.departmentId),
            null != e.status && e.hasOwnProperty("status") && t.uint32(24).bool(e.status),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetDepartmentStar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.departmentId = e.string();
                    break;
                case 3:
                    r.status = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetDepartmentStar)
                return e;
            var t = new s.HttpRequestBodySetDepartmentStar;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.departmentId && (t.departmentId = String(e.departmentId)),
            null != e.status && (t.status = Boolean(e.status)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = "",
            n.departmentId = "",
            n.status = !1),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.departmentId && e.hasOwnProperty("departmentId") && (n.departmentId = e.departmentId),
            null != e.status && e.hasOwnProperty("status") && (n.status = e.status),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetDepartmentStar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetDepartmentStar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetDepartmentStar ? e : new s.HttpResponseBodySetDepartmentStar
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyGroupIds = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyGroupIds;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetMyGroupIds ? e : new s.HttpRequestBodyGetMyGroupIds
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyGroupIds = function() {
        function e(e) {
            if (this.groupVersions = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupVersions = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupVersions && e.groupVersions.length)
                for (var n = 0; n < e.groupVersions.length; ++n)
                    s.HttpGroupVersion.encode(e.groupVersions[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyGroupIds;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupVersions && r.groupVersions.length || (r.groupVersions = []),
                    r.groupVersions.push(s.HttpGroupVersion.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyGroupIds)
                return e;
            var t = new s.HttpResponseBodyGetMyGroupIds;
            if (e.groupVersions) {
                if (!Array.isArray(e.groupVersions))
                    throw TypeError(".HttpResponseBodyGetMyGroupIds.groupVersions: array expected");
                t.groupVersions = [];
                for (var n = 0; n < e.groupVersions.length; ++n) {
                    if ("object" !== typeof e.groupVersions[n])
                        throw TypeError(".HttpResponseBodyGetMyGroupIds.groupVersions: object expected");
                    t.groupVersions[n] = s.HttpGroupVersion.fromObject(e.groupVersions[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupVersions = []),
            e.groupVersions && e.groupVersions.length) {
                n.groupVersions = [];
                for (var r = 0; r < e.groupVersions.length; ++r)
                    n.groupVersions[r] = s.HttpGroupVersion.toObject(e.groupVersions[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyPrivateGroupIds = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyPrivateGroupIds;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetMyPrivateGroupIds ? e : new s.HttpRequestBodyGetMyPrivateGroupIds
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyPrivateGroupIds = function() {
        function e(e) {
            if (this.groupVersions = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupVersions = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupVersions && e.groupVersions.length)
                for (var n = 0; n < e.groupVersions.length; ++n)
                    s.HttpGroupVersion.encode(e.groupVersions[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyPrivateGroupIds;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupVersions && r.groupVersions.length || (r.groupVersions = []),
                    r.groupVersions.push(s.HttpGroupVersion.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyPrivateGroupIds)
                return e;
            var t = new s.HttpResponseBodyGetMyPrivateGroupIds;
            if (e.groupVersions) {
                if (!Array.isArray(e.groupVersions))
                    throw TypeError(".HttpResponseBodyGetMyPrivateGroupIds.groupVersions: array expected");
                t.groupVersions = [];
                for (var n = 0; n < e.groupVersions.length; ++n) {
                    if ("object" !== typeof e.groupVersions[n])
                        throw TypeError(".HttpResponseBodyGetMyPrivateGroupIds.groupVersions: object expected");
                    t.groupVersions[n] = s.HttpGroupVersion.fromObject(e.groupVersions[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupVersions = []),
            e.groupVersions && e.groupVersions.length) {
                n.groupVersions = [];
                for (var r = 0; r < e.groupVersions.length; ++r)
                    n.groupVersions[r] = s.HttpGroupVersion.toObject(e.groupVersions[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupBaseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupBaseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupBaseInfo)
                return e;
            var t = new s.HttpRequestBodyGetGroupBaseInfo;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupBaseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupName = "",
        e.prototype.avatarUrl = "",
        e.prototype.memberCount = 0,
        e.prototype.isPrivate = !1,
        e.prototype.groupType = 0,
        e.prototype.invitationVerification = !1,
        e.prototype.qrcodeStatus = !1,
        e.prototype.qrcodeExpiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.isInBlackList = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupName && e.hasOwnProperty("groupName") && t.uint32(10).string(e.groupName),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(18).string(e.avatarUrl),
            null != e.memberCount && e.hasOwnProperty("memberCount") && t.uint32(24).uint32(e.memberCount),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && t.uint32(32).bool(e.isPrivate),
            null != e.groupType && e.hasOwnProperty("groupType") && t.uint32(40).int32(e.groupType),
            null != e.invitationVerification && e.hasOwnProperty("invitationVerification") && t.uint32(48).bool(e.invitationVerification),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && t.uint32(56).bool(e.qrcodeStatus),
            null != e.qrcodeExpiredTimestamp && e.hasOwnProperty("qrcodeExpiredTimestamp") && t.uint32(64).uint64(e.qrcodeExpiredTimestamp),
            null != e.isInBlackList && e.hasOwnProperty("isInBlackList") && t.uint32(72).bool(e.isInBlackList),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupBaseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupName = e.string();
                    break;
                case 2:
                    r.avatarUrl = e.string();
                    break;
                case 3:
                    r.memberCount = e.uint32();
                    break;
                case 4:
                    r.isPrivate = e.bool();
                    break;
                case 5:
                    r.groupType = e.int32();
                    break;
                case 6:
                    r.invitationVerification = e.bool();
                    break;
                case 7:
                    r.qrcodeStatus = e.bool();
                    break;
                case 8:
                    r.qrcodeExpiredTimestamp = e.uint64();
                    break;
                case 9:
                    r.isInBlackList = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupBaseInfo)
                return e;
            var t = new s.HttpResponseBodyGetGroupBaseInfo;
            switch (null != e.groupName && (t.groupName = String(e.groupName)),
            null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.memberCount && (t.memberCount = e.memberCount >>> 0),
            null != e.isPrivate && (t.isPrivate = Boolean(e.isPrivate)),
            e.groupType) {
            case "CommonGroupTypeUndefined":
            case 0:
                t.groupType = 0;
                break;
            case "CommonGroupTypeGeneral":
            case 1:
                t.groupType = 1;
                break;
            case "CommonGroupTypeCompany":
            case 2:
                t.groupType = 2;
                break;
            case "CommonGroupTypeDepartment":
            case 3:
                t.groupType = 3;
                break;
            case "CommonGroupTypeLive":
            case 4:
                t.groupType = 4;
                break
            }
            return null != e.invitationVerification && (t.invitationVerification = Boolean(e.invitationVerification)),
            null != e.qrcodeStatus && (t.qrcodeStatus = Boolean(e.qrcodeStatus)),
            null != e.qrcodeExpiredTimestamp && (a.Long ? (t.qrcodeExpiredTimestamp = a.Long.fromValue(e.qrcodeExpiredTimestamp)).unsigned = !0 : "string" === typeof e.qrcodeExpiredTimestamp ? t.qrcodeExpiredTimestamp = parseInt(e.qrcodeExpiredTimestamp, 10) : "number" === typeof e.qrcodeExpiredTimestamp ? t.qrcodeExpiredTimestamp = e.qrcodeExpiredTimestamp : "object" === typeof e.qrcodeExpiredTimestamp && (t.qrcodeExpiredTimestamp = new a.LongBits(e.qrcodeExpiredTimestamp.low >>> 0,e.qrcodeExpiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.isInBlackList && (t.isInBlackList = Boolean(e.isInBlackList)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.groupName = "",
                n.avatarUrl = "",
                n.memberCount = 0,
                n.isPrivate = !1,
                n.groupType = t.enums === String ? "CommonGroupTypeUndefined" : 0,
                n.invitationVerification = !1,
                n.qrcodeStatus = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.qrcodeExpiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.qrcodeExpiredTimestamp = t.longs === String ? "0" : 0;
                n.isInBlackList = !1
            }
            return null != e.groupName && e.hasOwnProperty("groupName") && (n.groupName = e.groupName),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.memberCount && e.hasOwnProperty("memberCount") && (n.memberCount = e.memberCount),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && (n.isPrivate = e.isPrivate),
            null != e.groupType && e.hasOwnProperty("groupType") && (n.groupType = t.enums === String ? s.CommonGroupType[e.groupType] : e.groupType),
            null != e.invitationVerification && e.hasOwnProperty("invitationVerification") && (n.invitationVerification = e.invitationVerification),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && (n.qrcodeStatus = e.qrcodeStatus),
            null != e.qrcodeExpiredTimestamp && e.hasOwnProperty("qrcodeExpiredTimestamp") && ("number" === typeof e.qrcodeExpiredTimestamp ? n.qrcodeExpiredTimestamp = t.longs === String ? String(e.qrcodeExpiredTimestamp) : e.qrcodeExpiredTimestamp : n.qrcodeExpiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.qrcodeExpiredTimestamp) : t.longs === Number ? new a.LongBits(e.qrcodeExpiredTimestamp.low >>> 0,e.qrcodeExpiredTimestamp.high >>> 0).toNumber(!0) : e.qrcodeExpiredTimestamp),
            null != e.isInBlackList && e.hasOwnProperty("isInBlackList") && (n.isInBlackList = e.isInBlackList),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupsInfo = function() {
        function e(e) {
            if (this.groupIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupIds && e.groupIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.groupIds.length; ++n)
                    t.uint32(e.groupIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupsInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.groupIds && r.groupIds.length || (r.groupIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.groupIds.push(e.uint32())
                    } else
                        r.groupIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupsInfo)
                return e;
            var t = new s.HttpRequestBodyGetGroupsInfo;
            if (e.groupIds) {
                if (!Array.isArray(e.groupIds))
                    throw TypeError(".HttpRequestBodyGetGroupsInfo.groupIds: array expected");
                t.groupIds = [];
                for (var n = 0; n < e.groupIds.length; ++n)
                    t.groupIds[n] = e.groupIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupIds = []),
            e.groupIds && e.groupIds.length) {
                n.groupIds = [];
                for (var r = 0; r < e.groupIds.length; ++r)
                    n.groupIds[r] = e.groupIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupsInfo = function() {
        function e(e) {
            if (this.groups = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groups = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groups && e.groups.length)
                for (var n = 0; n < e.groups.length; ++n)
                    s.HttpGroup.encode(e.groups[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupsInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groups && r.groups.length || (r.groups = []),
                    r.groups.push(s.HttpGroup.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupsInfo)
                return e;
            var t = new s.HttpResponseBodyGetGroupsInfo;
            if (e.groups) {
                if (!Array.isArray(e.groups))
                    throw TypeError(".HttpResponseBodyGetGroupsInfo.groups: array expected");
                t.groups = [];
                for (var n = 0; n < e.groups.length; ++n) {
                    if ("object" !== typeof e.groups[n])
                        throw TypeError(".HttpResponseBodyGetGroupsInfo.groups: object expected");
                    t.groups[n] = s.HttpGroup.fromObject(e.groups[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groups = []),
            e.groups && e.groups.length) {
                n.groups = [];
                for (var r = 0; r < e.groups.length; ++r)
                    n.groups[r] = s.HttpGroup.toObject(e.groups[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupMembers)
                return e;
            var t = new s.HttpRequestBodyGetGroupMembers;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupMembers = function() {
        function e(e) {
            if (this.groupMembers = [],
            this.groupCompanyInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.groupMembers = a.emptyArray,
        e.prototype.groupCompanyInfos = a.emptyArray,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.groupMembers && e.groupMembers.length)
                for (var n = 0; n < e.groupMembers.length; ++n)
                    s.HttpGroupMember.encode(e.groupMembers[n], t.uint32(18).fork()).ldelim();
            if (null != e.groupCompanyInfos && e.groupCompanyInfos.length)
                for (n = 0; n < e.groupCompanyInfos.length; ++n)
                    s.HttpGroupCompanyInfo.encode(e.groupCompanyInfos[n], t.uint32(26).fork()).ldelim();
            return null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(32).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.groupMembers && r.groupMembers.length || (r.groupMembers = []),
                    r.groupMembers.push(s.HttpGroupMember.decode(e, e.uint32()));
                    break;
                case 3:
                    r.groupCompanyInfos && r.groupCompanyInfos.length || (r.groupCompanyInfos = []),
                    r.groupCompanyInfos.push(s.HttpGroupCompanyInfo.decode(e, e.uint32()));
                    break;
                case 4:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupMembers)
                return e;
            var t = new s.HttpResponseBodyGetGroupMembers;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.groupMembers) {
                if (!Array.isArray(e.groupMembers))
                    throw TypeError(".HttpResponseBodyGetGroupMembers.groupMembers: array expected");
                t.groupMembers = [];
                for (var n = 0; n < e.groupMembers.length; ++n) {
                    if ("object" !== typeof e.groupMembers[n])
                        throw TypeError(".HttpResponseBodyGetGroupMembers.groupMembers: object expected");
                    t.groupMembers[n] = s.HttpGroupMember.fromObject(e.groupMembers[n])
                }
            }
            if (e.groupCompanyInfos) {
                if (!Array.isArray(e.groupCompanyInfos))
                    throw TypeError(".HttpResponseBodyGetGroupMembers.groupCompanyInfos: array expected");
                t.groupCompanyInfos = [];
                for (n = 0; n < e.groupCompanyInfos.length; ++n) {
                    if ("object" !== typeof e.groupCompanyInfos[n])
                        throw TypeError(".HttpResponseBodyGetGroupMembers.groupCompanyInfos: object expected");
                    t.groupCompanyInfos[n] = s.HttpGroupCompanyInfo.fromObject(e.groupCompanyInfos[n])
                }
            }
            return null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupMembers = [],
            n.groupCompanyInfos = []),
            t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            if (null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.groupMembers && e.groupMembers.length) {
                n.groupMembers = [];
                for (var o = 0; o < e.groupMembers.length; ++o)
                    n.groupMembers[o] = s.HttpGroupMember.toObject(e.groupMembers[o], t)
            }
            if (e.groupCompanyInfos && e.groupCompanyInfos.length) {
                n.groupCompanyInfos = [];
                for (o = 0; o < e.groupCompanyInfos.length; ++o)
                    n.groupCompanyInfos[o] = s.HttpGroupCompanyInfo.toObject(e.groupCompanyInfos[o], t)
            }
            return null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupsAllInfo = function() {
        function e(e) {
            if (this.groupIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupIds && e.groupIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.groupIds.length; ++n)
                    t.uint32(e.groupIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupsAllInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.groupIds && r.groupIds.length || (r.groupIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.groupIds.push(e.uint32())
                    } else
                        r.groupIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupsAllInfo)
                return e;
            var t = new s.HttpRequestBodyGetGroupsAllInfo;
            if (e.groupIds) {
                if (!Array.isArray(e.groupIds))
                    throw TypeError(".HttpRequestBodyGetGroupsAllInfo.groupIds: array expected");
                t.groupIds = [];
                for (var n = 0; n < e.groupIds.length; ++n)
                    t.groupIds[n] = e.groupIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupIds = []),
            e.groupIds && e.groupIds.length) {
                n.groupIds = [];
                for (var r = 0; r < e.groupIds.length; ++r)
                    n.groupIds[r] = e.groupIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupsAllInfo = function() {
        function e(e) {
            if (this.groupsAllInfo = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupsAllInfo = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupsAllInfo && e.groupsAllInfo.length)
                for (var n = 0; n < e.groupsAllInfo.length; ++n)
                    s.HttpGroupAllInfo.encode(e.groupsAllInfo[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupsAllInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupsAllInfo && r.groupsAllInfo.length || (r.groupsAllInfo = []),
                    r.groupsAllInfo.push(s.HttpGroupAllInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupsAllInfo)
                return e;
            var t = new s.HttpResponseBodyGetGroupsAllInfo;
            if (e.groupsAllInfo) {
                if (!Array.isArray(e.groupsAllInfo))
                    throw TypeError(".HttpResponseBodyGetGroupsAllInfo.groupsAllInfo: array expected");
                t.groupsAllInfo = [];
                for (var n = 0; n < e.groupsAllInfo.length; ++n) {
                    if ("object" !== typeof e.groupsAllInfo[n])
                        throw TypeError(".HttpResponseBodyGetGroupsAllInfo.groupsAllInfo: object expected");
                    t.groupsAllInfo[n] = s.HttpGroupAllInfo.fromObject(e.groupsAllInfo[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupsAllInfo = []),
            e.groupsAllInfo && e.groupsAllInfo.length) {
                n.groupsAllInfo = [];
                for (var r = 0; r < e.groupsAllInfo.length; ++r)
                    n.groupsAllInfo[r] = s.HttpGroupAllInfo.toObject(e.groupsAllInfo[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateGroup = function() {
        function e(e) {
            if (this.userIds = [],
            this.syncMessageIds = [],
            this.departments = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupName = "",
        e.prototype.userIds = a.emptyArray,
        e.prototype.isPrivate = !1,
        e.prototype.syncMessageConversationId = 0,
        e.prototype.syncMessageConversationType = 0,
        e.prototype.syncMessageIds = a.emptyArray,
        e.prototype.departments = a.emptyArray,
        e.prototype.groupType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupName && e.hasOwnProperty("groupName") && t.uint32(10).string(e.groupName),
            null != e.userIds && e.userIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.userIds.length; ++n)
                    t.uint32(e.userIds[n]);
                t.ldelim()
            }
            if (null != e.isPrivate && e.hasOwnProperty("isPrivate") && t.uint32(24).bool(e.isPrivate),
            null != e.syncMessageConversationId && e.hasOwnProperty("syncMessageConversationId") && t.uint32(32).uint32(e.syncMessageConversationId),
            null != e.syncMessageConversationType && e.hasOwnProperty("syncMessageConversationType") && t.uint32(40).int32(e.syncMessageConversationType),
            null != e.syncMessageIds && e.syncMessageIds.length)
                for (n = 0; n < e.syncMessageIds.length; ++n)
                    t.uint32(50).string(e.syncMessageIds[n]);
            if (null != e.departments && e.departments.length)
                for (n = 0; n < e.departments.length; ++n)
                    s.HttpGroupDepartment.encode(e.departments[n], t.uint32(58).fork()).ldelim();
            return null != e.groupType && e.hasOwnProperty("groupType") && t.uint32(64).int32(e.groupType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupName = e.string();
                    break;
                case 2:
                    if (r.userIds && r.userIds.length || (r.userIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.userIds.push(e.uint32())
                    } else
                        r.userIds.push(e.uint32());
                    break;
                case 3:
                    r.isPrivate = e.bool();
                    break;
                case 4:
                    r.syncMessageConversationId = e.uint32();
                    break;
                case 5:
                    r.syncMessageConversationType = e.int32();
                    break;
                case 6:
                    r.syncMessageIds && r.syncMessageIds.length || (r.syncMessageIds = []),
                    r.syncMessageIds.push(e.string());
                    break;
                case 7:
                    r.departments && r.departments.length || (r.departments = []),
                    r.departments.push(s.HttpGroupDepartment.decode(e, e.uint32()));
                    break;
                case 8:
                    r.groupType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateGroup)
                return e;
            var t = new s.HttpRequestBodyCreateGroup;
            if (null != e.groupName && (t.groupName = String(e.groupName)),
            e.userIds) {
                if (!Array.isArray(e.userIds))
                    throw TypeError(".HttpRequestBodyCreateGroup.userIds: array expected");
                t.userIds = [];
                for (var n = 0; n < e.userIds.length; ++n)
                    t.userIds[n] = e.userIds[n] >>> 0
            }
            switch (null != e.isPrivate && (t.isPrivate = Boolean(e.isPrivate)),
            null != e.syncMessageConversationId && (t.syncMessageConversationId = e.syncMessageConversationId >>> 0),
            e.syncMessageConversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.syncMessageConversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.syncMessageConversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.syncMessageConversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.syncMessageConversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.syncMessageConversationType = 4;
                break
            }
            if (e.syncMessageIds) {
                if (!Array.isArray(e.syncMessageIds))
                    throw TypeError(".HttpRequestBodyCreateGroup.syncMessageIds: array expected");
                t.syncMessageIds = [];
                for (n = 0; n < e.syncMessageIds.length; ++n)
                    t.syncMessageIds[n] = String(e.syncMessageIds[n])
            }
            if (e.departments) {
                if (!Array.isArray(e.departments))
                    throw TypeError(".HttpRequestBodyCreateGroup.departments: array expected");
                t.departments = [];
                for (n = 0; n < e.departments.length; ++n) {
                    if ("object" !== typeof e.departments[n])
                        throw TypeError(".HttpRequestBodyCreateGroup.departments: object expected");
                    t.departments[n] = s.HttpGroupDepartment.fromObject(e.departments[n])
                }
            }
            switch (e.groupType) {
            case "CommonGroupTypeUndefined":
            case 0:
                t.groupType = 0;
                break;
            case "CommonGroupTypeGeneral":
            case 1:
                t.groupType = 1;
                break;
            case "CommonGroupTypeCompany":
            case 2:
                t.groupType = 2;
                break;
            case "CommonGroupTypeDepartment":
            case 3:
                t.groupType = 3;
                break;
            case "CommonGroupTypeLive":
            case 4:
                t.groupType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userIds = [],
            n.syncMessageIds = [],
            n.departments = []),
            t.defaults && (n.groupName = "",
            n.isPrivate = !1,
            n.syncMessageConversationId = 0,
            n.syncMessageConversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.groupType = t.enums === String ? "CommonGroupTypeUndefined" : 0),
            null != e.groupName && e.hasOwnProperty("groupName") && (n.groupName = e.groupName),
            e.userIds && e.userIds.length) {
                n.userIds = [];
                for (var r = 0; r < e.userIds.length; ++r)
                    n.userIds[r] = e.userIds[r]
            }
            if (null != e.isPrivate && e.hasOwnProperty("isPrivate") && (n.isPrivate = e.isPrivate),
            null != e.syncMessageConversationId && e.hasOwnProperty("syncMessageConversationId") && (n.syncMessageConversationId = e.syncMessageConversationId),
            null != e.syncMessageConversationType && e.hasOwnProperty("syncMessageConversationType") && (n.syncMessageConversationType = t.enums === String ? s.CommonConversationType[e.syncMessageConversationType] : e.syncMessageConversationType),
            e.syncMessageIds && e.syncMessageIds.length) {
                n.syncMessageIds = [];
                for (r = 0; r < e.syncMessageIds.length; ++r)
                    n.syncMessageIds[r] = e.syncMessageIds[r]
            }
            if (e.departments && e.departments.length) {
                n.departments = [];
                for (r = 0; r < e.departments.length; ++r)
                    n.departments[r] = s.HttpGroupDepartment.toObject(e.departments[r], t)
            }
            return null != e.groupType && e.hasOwnProperty("groupType") && (n.groupType = t.enums === String ? s.CommonGroupType[e.groupType] : e.groupType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateGroup = function() {
        function e(e) {
            if (this.notFriendUserIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupAllInfo = null,
        e.prototype.notFriendUserIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupAllInfo && e.hasOwnProperty("groupAllInfo") && s.HttpGroupAllInfo.encode(e.groupAllInfo, t.uint32(10).fork()).ldelim(),
            null != e.notFriendUserIds && e.notFriendUserIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.notFriendUserIds.length; ++n)
                    t.uint32(e.notFriendUserIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupAllInfo = s.HttpGroupAllInfo.decode(e, e.uint32());
                    break;
                case 2:
                    if (r.notFriendUserIds && r.notFriendUserIds.length || (r.notFriendUserIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.notFriendUserIds.push(e.uint32())
                    } else
                        r.notFriendUserIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateGroup)
                return e;
            var t = new s.HttpResponseBodyCreateGroup;
            if (null != e.groupAllInfo) {
                if ("object" !== typeof e.groupAllInfo)
                    throw TypeError(".HttpResponseBodyCreateGroup.groupAllInfo: object expected");
                t.groupAllInfo = s.HttpGroupAllInfo.fromObject(e.groupAllInfo)
            }
            if (e.notFriendUserIds) {
                if (!Array.isArray(e.notFriendUserIds))
                    throw TypeError(".HttpResponseBodyCreateGroup.notFriendUserIds: array expected");
                t.notFriendUserIds = [];
                for (var n = 0; n < e.notFriendUserIds.length; ++n)
                    t.notFriendUserIds[n] = e.notFriendUserIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.notFriendUserIds = []),
            t.defaults && (n.groupAllInfo = null),
            null != e.groupAllInfo && e.hasOwnProperty("groupAllInfo") && (n.groupAllInfo = s.HttpGroupAllInfo.toObject(e.groupAllInfo, t)),
            e.notFriendUserIds && e.notFriendUserIds.length) {
                n.notFriendUserIds = [];
                for (var r = 0; r < e.notFriendUserIds.length; ++r)
                    n.notFriendUserIds[r] = e.notFriendUserIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyClonePrivateGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyClonePrivateGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyClonePrivateGroup)
                return e;
            var t = new s.HttpRequestBodyClonePrivateGroup;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyClonePrivateGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupAllInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupAllInfo && e.hasOwnProperty("groupAllInfo") && s.HttpGroupAllInfo.encode(e.groupAllInfo, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyClonePrivateGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupAllInfo = s.HttpGroupAllInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyClonePrivateGroup)
                return e;
            var t = new s.HttpResponseBodyClonePrivateGroup;
            if (null != e.groupAllInfo) {
                if ("object" !== typeof e.groupAllInfo)
                    throw TypeError(".HttpResponseBodyClonePrivateGroup.groupAllInfo: object expected");
                t.groupAllInfo = s.HttpGroupAllInfo.fromObject(e.groupAllInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupAllInfo = null),
            null != e.groupAllInfo && e.hasOwnProperty("groupAllInfo") && (n.groupAllInfo = s.HttpGroupAllInfo.toObject(e.groupAllInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDissolveGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDissolveGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDissolveGroup)
                return e;
            var t = new s.HttpRequestBodyDissolveGroup;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDissolveGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDissolveGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDissolveGroup ? e : new s.HttpResponseBodyDissolveGroup
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpgradeGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.companyId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(18).string(e.companyId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpgradeGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.companyId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpgradeGroup)
                return e;
            var t = new s.HttpRequestBodyUpgradeGroup;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.companyId && (t.companyId = String(e.companyId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.companyId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpgradeGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpgradeGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUpgradeGroup ? e : new s.HttpResponseBodyUpgradeGroup
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupMembers = function() {
        function e(e) {
            if (this.memberIds = [],
            this.departments = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.prototype.requestMessage = "",
        e.prototype.departments = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            if (null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(26).string(e.requestMessage),
            null != e.departments && e.departments.length)
                for (n = 0; n < e.departments.length; ++n)
                    s.HttpGroupDepartment.encode(e.departments[n], t.uint32(34).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                case 3:
                    r.requestMessage = e.string();
                    break;
                case 4:
                    r.departments && r.departments.length || (r.departments = []),
                    r.departments.push(s.HttpGroupDepartment.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupMembers)
                return e;
            var t = new s.HttpRequestBodyAddGroupMembers;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyAddGroupMembers.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            if (null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            e.departments) {
                if (!Array.isArray(e.departments))
                    throw TypeError(".HttpRequestBodyAddGroupMembers.departments: array expected");
                t.departments = [];
                for (n = 0; n < e.departments.length; ++n) {
                    if ("object" !== typeof e.departments[n])
                        throw TypeError(".HttpRequestBodyAddGroupMembers.departments: object expected");
                    t.departments[n] = s.HttpGroupDepartment.fromObject(e.departments[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = [],
            n.departments = []),
            t.defaults && (n.groupId = 0,
            n.requestMessage = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            if (null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            e.departments && e.departments.length) {
                n.departments = [];
                for (r = 0; r < e.departments.length; ++r)
                    n.departments[r] = s.HttpGroupDepartment.toObject(e.departments[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddGroupMembers ? e : new s.HttpResponseBodyAddGroupMembers
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteGroupMembers = function() {
        function e(e) {
            if (this.memberIds = [],
            this.departments = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.prototype.departments = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            if (null != e.departments && e.departments.length)
                for (n = 0; n < e.departments.length; ++n)
                    s.HttpGroupDepartment.encode(e.departments[n], t.uint32(26).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteGroupMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                case 3:
                    r.departments && r.departments.length || (r.departments = []),
                    r.departments.push(s.HttpGroupDepartment.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteGroupMembers)
                return e;
            var t = new s.HttpRequestBodyDeleteGroupMembers;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyDeleteGroupMembers.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            if (e.departments) {
                if (!Array.isArray(e.departments))
                    throw TypeError(".HttpRequestBodyDeleteGroupMembers.departments: array expected");
                t.departments = [];
                for (n = 0; n < e.departments.length; ++n) {
                    if ("object" !== typeof e.departments[n])
                        throw TypeError(".HttpRequestBodyDeleteGroupMembers.departments: object expected");
                    t.departments[n] = s.HttpGroupDepartment.fromObject(e.departments[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = [],
            n.departments = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            if (e.departments && e.departments.length) {
                n.departments = [];
                for (r = 0; r < e.departments.length; ++r)
                    n.departments[r] = s.HttpGroupDepartment.toObject(e.departments[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteGroupMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteGroupMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteGroupMembers ? e : new s.HttpResponseBodyDeleteGroupMembers
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyLeaveGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyLeaveGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyLeaveGroup)
                return e;
            var t = new s.HttpRequestBodyLeaveGroup;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyLeaveGroup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyLeaveGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyLeaveGroup ? e : new s.HttpResponseBodyLeaveGroup
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.groupName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.groupName && e.hasOwnProperty("groupName") && t.uint32(18).string(e.groupName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.groupName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupName)
                return e;
            var t = new s.HttpRequestBodySetGroupName;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.groupName && (t.groupName = String(e.groupName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.groupName = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.groupName && e.hasOwnProperty("groupName") && (n.groupName = e.groupName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupName ? e : new s.HttpResponseBodySetGroupName
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupOwner = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.ownerId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.ownerId && e.hasOwnProperty("ownerId") && t.uint32(16).uint32(e.ownerId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupOwner;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.ownerId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupOwner)
                return e;
            var t = new s.HttpRequestBodySetGroupOwner;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.ownerId && (t.ownerId = e.ownerId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.ownerId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.ownerId && e.hasOwnProperty("ownerId") && (n.ownerId = e.ownerId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupOwner = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupOwner;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupOwner ? e : new s.HttpResponseBodySetGroupOwner
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupMyAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.alias = "",
        e.prototype.updateUserId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.alias && e.hasOwnProperty("alias") && t.uint32(18).string(e.alias),
            null != e.updateUserId && e.hasOwnProperty("updateUserId") && t.uint32(24).uint32(e.updateUserId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupMyAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.alias = e.string();
                    break;
                case 3:
                    r.updateUserId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupMyAlias)
                return e;
            var t = new s.HttpRequestBodySetGroupMyAlias;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.alias && (t.alias = String(e.alias)),
            null != e.updateUserId && (t.updateUserId = e.updateUserId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.alias = "",
            n.updateUserId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.alias && e.hasOwnProperty("alias") && (n.alias = e.alias),
            null != e.updateUserId && e.hasOwnProperty("updateUserId") && (n.updateUserId = e.updateUserId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupMyAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupMyAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupMyAlias ? e : new s.HttpResponseBodySetGroupMyAlias
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupNotice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.groupNotice = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && t.uint32(18).string(e.groupNotice),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupNotice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.groupNotice = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupNotice)
                return e;
            var t = new s.HttpRequestBodySetGroupNotice;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.groupNotice && (t.groupNotice = String(e.groupNotice)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.groupNotice = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && (n.groupNotice = e.groupNotice),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupNotice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupNotice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupNotice ? e : new s.HttpResponseBodySetGroupNotice
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyJoinGroupByQRCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrcode = "",
        e.prototype.requestMessage = "",
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.qrcode && e.hasOwnProperty("qrcode") && t.uint32(10).string(e.qrcode),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(18).string(e.requestMessage),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(24).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyJoinGroupByQRCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.qrcode = e.string();
                    break;
                case 2:
                    r.requestMessage = e.string();
                    break;
                case 3:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyJoinGroupByQRCode)
                return e;
            var t = new s.HttpRequestBodyJoinGroupByQRCode;
            return null != e.qrcode && (t.qrcode = String(e.qrcode)),
            null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.qrcode = "",
            n.requestMessage = "",
            n.groupId = 0),
            null != e.qrcode && e.hasOwnProperty("qrcode") && (n.qrcode = e.qrcode),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyJoinGroupByQRCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupsAllInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupsAllInfo && e.hasOwnProperty("groupsAllInfo") && s.HttpGroupAllInfo.encode(e.groupsAllInfo, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyJoinGroupByQRCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupsAllInfo = s.HttpGroupAllInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyJoinGroupByQRCode)
                return e;
            var t = new s.HttpResponseBodyJoinGroupByQRCode;
            if (null != e.groupsAllInfo) {
                if ("object" !== typeof e.groupsAllInfo)
                    throw TypeError(".HttpResponseBodyJoinGroupByQRCode.groupsAllInfo: object expected");
                t.groupsAllInfo = s.HttpGroupAllInfo.fromObject(e.groupsAllInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupsAllInfo = null),
            null != e.groupsAllInfo && e.hasOwnProperty("groupsAllInfo") && (n.groupsAllInfo = s.HttpGroupAllInfo.toObject(e.groupsAllInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupInvitationVerification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.invitationVerification = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.invitationVerification && e.hasOwnProperty("invitationVerification") && t.uint32(16).bool(e.invitationVerification),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupInvitationVerification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.invitationVerification = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupInvitationVerification)
                return e;
            var t = new s.HttpRequestBodySetGroupInvitationVerification;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.invitationVerification && (t.invitationVerification = Boolean(e.invitationVerification)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.invitationVerification = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.invitationVerification && e.hasOwnProperty("invitationVerification") && (n.invitationVerification = e.invitationVerification),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupInvitationVerification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupInvitationVerification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupInvitationVerification ? e : new s.HttpResponseBodySetGroupInvitationVerification
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupInvitedMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupInvitedMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupInvitedMembers)
                return e;
            var t = new s.HttpRequestBodyGetGroupInvitedMembers;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.messageId && (t.messageId = String(e.messageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupInvitedMembers = function() {
        function e(e) {
            if (this.inviteMembers = [],
            this.inviteDepartments = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.senderId = 0,
        e.prototype.senderName = "",
        e.prototype.senderThumbAvatar = "",
        e.prototype.requestMessage = "",
        e.prototype.hasConfirmed = !1,
        e.prototype.inviteMembers = a.emptyArray,
        e.prototype.hasReject = !1,
        e.prototype.inviteDepartments = a.emptyArray,
        e.prototype.groupJoinType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(8).uint32(e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(18).string(e.senderName),
            null != e.senderThumbAvatar && e.hasOwnProperty("senderThumbAvatar") && t.uint32(26).string(e.senderThumbAvatar),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(34).string(e.requestMessage),
            null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && t.uint32(40).bool(e.hasConfirmed),
            null != e.inviteMembers && e.inviteMembers.length)
                for (var n = 0; n < e.inviteMembers.length; ++n)
                    s.HttpGroupInviteMember.encode(e.inviteMembers[n], t.uint32(50).fork()).ldelim();
            if (null != e.hasReject && e.hasOwnProperty("hasReject") && t.uint32(56).bool(e.hasReject),
            null != e.inviteDepartments && e.inviteDepartments.length)
                for (n = 0; n < e.inviteDepartments.length; ++n)
                    s.CommonCompanyDepartmentInfo.encode(e.inviteDepartments[n], t.uint32(66).fork()).ldelim();
            return null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && t.uint32(72).int32(e.groupJoinType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupInvitedMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.senderId = e.uint32();
                    break;
                case 2:
                    r.senderName = e.string();
                    break;
                case 3:
                    r.senderThumbAvatar = e.string();
                    break;
                case 4:
                    r.requestMessage = e.string();
                    break;
                case 5:
                    r.hasConfirmed = e.bool();
                    break;
                case 6:
                    r.inviteMembers && r.inviteMembers.length || (r.inviteMembers = []),
                    r.inviteMembers.push(s.HttpGroupInviteMember.decode(e, e.uint32()));
                    break;
                case 7:
                    r.hasReject = e.bool();
                    break;
                case 8:
                    r.inviteDepartments && r.inviteDepartments.length || (r.inviteDepartments = []),
                    r.inviteDepartments.push(s.CommonCompanyDepartmentInfo.decode(e, e.uint32()));
                    break;
                case 9:
                    r.groupJoinType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupInvitedMembers)
                return e;
            var t = new s.HttpResponseBodyGetGroupInvitedMembers;
            if (null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.senderThumbAvatar && (t.senderThumbAvatar = String(e.senderThumbAvatar)),
            null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            null != e.hasConfirmed && (t.hasConfirmed = Boolean(e.hasConfirmed)),
            e.inviteMembers) {
                if (!Array.isArray(e.inviteMembers))
                    throw TypeError(".HttpResponseBodyGetGroupInvitedMembers.inviteMembers: array expected");
                t.inviteMembers = [];
                for (var n = 0; n < e.inviteMembers.length; ++n) {
                    if ("object" !== typeof e.inviteMembers[n])
                        throw TypeError(".HttpResponseBodyGetGroupInvitedMembers.inviteMembers: object expected");
                    t.inviteMembers[n] = s.HttpGroupInviteMember.fromObject(e.inviteMembers[n])
                }
            }
            if (null != e.hasReject && (t.hasReject = Boolean(e.hasReject)),
            e.inviteDepartments) {
                if (!Array.isArray(e.inviteDepartments))
                    throw TypeError(".HttpResponseBodyGetGroupInvitedMembers.inviteDepartments: array expected");
                t.inviteDepartments = [];
                for (n = 0; n < e.inviteDepartments.length; ++n) {
                    if ("object" !== typeof e.inviteDepartments[n])
                        throw TypeError(".HttpResponseBodyGetGroupInvitedMembers.inviteDepartments: object expected");
                    t.inviteDepartments[n] = s.CommonCompanyDepartmentInfo.fromObject(e.inviteDepartments[n])
                }
            }
            switch (e.groupJoinType) {
            case "CommonGroupJoinTypeUndefined":
            case 0:
                t.groupJoinType = 0;
                break;
            case "CommonGroupJoinTypeByInvitation":
            case 1:
                t.groupJoinType = 1;
                break;
            case "CommonGroupJoinTypeByQRCode":
            case 2:
                t.groupJoinType = 2;
                break;
            case "CommonGroupJoinTypeByWechatShareUrl":
            case 3:
                t.groupJoinType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.inviteMembers = [],
            n.inviteDepartments = []),
            t.defaults && (n.senderId = 0,
            n.senderName = "",
            n.senderThumbAvatar = "",
            n.requestMessage = "",
            n.hasConfirmed = !1,
            n.hasReject = !1,
            n.groupJoinType = t.enums === String ? "CommonGroupJoinTypeUndefined" : 0),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.senderThumbAvatar && e.hasOwnProperty("senderThumbAvatar") && (n.senderThumbAvatar = e.senderThumbAvatar),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && (n.hasConfirmed = e.hasConfirmed),
            e.inviteMembers && e.inviteMembers.length) {
                n.inviteMembers = [];
                for (var r = 0; r < e.inviteMembers.length; ++r)
                    n.inviteMembers[r] = s.HttpGroupInviteMember.toObject(e.inviteMembers[r], t)
            }
            if (null != e.hasReject && e.hasOwnProperty("hasReject") && (n.hasReject = e.hasReject),
            e.inviteDepartments && e.inviteDepartments.length) {
                n.inviteDepartments = [];
                for (r = 0; r < e.inviteDepartments.length; ++r)
                    n.inviteDepartments[r] = s.CommonCompanyDepartmentInfo.toObject(e.inviteDepartments[r], t)
            }
            return null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && (n.groupJoinType = t.enums === String ? s.CommonGroupJoinType[e.groupJoinType] : e.groupJoinType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAcceptGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAcceptGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAcceptGroupInviteMembers)
                return e;
            var t = new s.HttpRequestBodyAcceptGroupInviteMembers;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.messageId && (t.messageId = String(e.messageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAcceptGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAcceptGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAcceptGroupInviteMembers ? e : new s.HttpResponseBodyAcceptGroupInviteMembers
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRejectGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRejectGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRejectGroupInviteMembers)
                return e;
            var t = new s.HttpRequestBodyRejectGroupInviteMembers;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.messageId && (t.messageId = String(e.messageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRejectGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRejectGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRejectGroupInviteMembers ? e : new s.HttpResponseBodyRejectGroupInviteMembers
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupInviteMembersList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.offset = 0,
        e.prototype.limit = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.offset && e.hasOwnProperty("offset") && t.uint32(16).uint32(e.offset),
            null != e.limit && e.hasOwnProperty("limit") && t.uint32(24).uint32(e.limit),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupInviteMembersList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.offset = e.uint32();
                    break;
                case 3:
                    r.limit = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupInviteMembersList)
                return e;
            var t = new s.HttpRequestBodyGetGroupInviteMembersList;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.offset && (t.offset = e.offset >>> 0),
            null != e.limit && (t.limit = e.limit >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.offset = 0,
            n.limit = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.offset && e.hasOwnProperty("offset") && (n.offset = e.offset),
            null != e.limit && e.hasOwnProperty("limit") && (n.limit = e.limit),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpGroupInviteMembersItem = function() {
        function e(e) {
            if (this.inviteMembers = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.senderId = 0,
        e.prototype.senderName = "",
        e.prototype.senderThumbAvatar = "",
        e.prototype.requestMessage = "",
        e.prototype.hasConfirmed = !1,
        e.prototype.inviteMembers = a.emptyArray,
        e.prototype.hasReject = !1,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.messageId = "",
        e.prototype.groupJoinType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(8).uint32(e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(18).string(e.senderName),
            null != e.senderThumbAvatar && e.hasOwnProperty("senderThumbAvatar") && t.uint32(26).string(e.senderThumbAvatar),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(34).string(e.requestMessage),
            null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && t.uint32(40).bool(e.hasConfirmed),
            null != e.inviteMembers && e.inviteMembers.length)
                for (var n = 0; n < e.inviteMembers.length; ++n)
                    s.HttpGroupInviteMember.encode(e.inviteMembers[n], t.uint32(50).fork()).ldelim();
            return null != e.hasReject && e.hasOwnProperty("hasReject") && t.uint32(56).bool(e.hasReject),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(64).uint64(e.expiredTimestamp),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(74).string(e.messageId),
            null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && t.uint32(80).int32(e.groupJoinType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpGroupInviteMembersItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.senderId = e.uint32();
                    break;
                case 2:
                    r.senderName = e.string();
                    break;
                case 3:
                    r.senderThumbAvatar = e.string();
                    break;
                case 4:
                    r.requestMessage = e.string();
                    break;
                case 5:
                    r.hasConfirmed = e.bool();
                    break;
                case 6:
                    r.inviteMembers && r.inviteMembers.length || (r.inviteMembers = []),
                    r.inviteMembers.push(s.HttpGroupInviteMember.decode(e, e.uint32()));
                    break;
                case 7:
                    r.hasReject = e.bool();
                    break;
                case 8:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 9:
                    r.messageId = e.string();
                    break;
                case 10:
                    r.groupJoinType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpGroupInviteMembersItem)
                return e;
            var t = new s.HttpGroupInviteMembersItem;
            if (null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.senderThumbAvatar && (t.senderThumbAvatar = String(e.senderThumbAvatar)),
            null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            null != e.hasConfirmed && (t.hasConfirmed = Boolean(e.hasConfirmed)),
            e.inviteMembers) {
                if (!Array.isArray(e.inviteMembers))
                    throw TypeError(".HttpGroupInviteMembersItem.inviteMembers: array expected");
                t.inviteMembers = [];
                for (var n = 0; n < e.inviteMembers.length; ++n) {
                    if ("object" !== typeof e.inviteMembers[n])
                        throw TypeError(".HttpGroupInviteMembersItem.inviteMembers: object expected");
                    t.inviteMembers[n] = s.HttpGroupInviteMember.fromObject(e.inviteMembers[n])
                }
            }
            switch (null != e.hasReject && (t.hasReject = Boolean(e.hasReject)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.messageId && (t.messageId = String(e.messageId)),
            e.groupJoinType) {
            case "CommonGroupJoinTypeUndefined":
            case 0:
                t.groupJoinType = 0;
                break;
            case "CommonGroupJoinTypeByInvitation":
            case 1:
                t.groupJoinType = 1;
                break;
            case "CommonGroupJoinTypeByQRCode":
            case 2:
                t.groupJoinType = 2;
                break;
            case "CommonGroupJoinTypeByWechatShareUrl":
            case 3:
                t.groupJoinType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.inviteMembers = []),
            t.defaults) {
                if (n.senderId = 0,
                n.senderName = "",
                n.senderThumbAvatar = "",
                n.requestMessage = "",
                n.hasConfirmed = !1,
                n.hasReject = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                n.messageId = "",
                n.groupJoinType = t.enums === String ? "CommonGroupJoinTypeUndefined" : 0
            }
            if (null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.senderThumbAvatar && e.hasOwnProperty("senderThumbAvatar") && (n.senderThumbAvatar = e.senderThumbAvatar),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && (n.hasConfirmed = e.hasConfirmed),
            e.inviteMembers && e.inviteMembers.length) {
                n.inviteMembers = [];
                for (var o = 0; o < e.inviteMembers.length; ++o)
                    n.inviteMembers[o] = s.HttpGroupInviteMember.toObject(e.inviteMembers[o], t)
            }
            return null != e.hasReject && e.hasOwnProperty("hasReject") && (n.hasReject = e.hasReject),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && (n.groupJoinType = t.enums === String ? s.CommonGroupJoinType[e.groupJoinType] : e.groupJoinType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupInviteMembersList = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.prototype.hasMore = !1,
        e.prototype.processingInviteCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpGroupInviteMembersItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            null != e.processingInviteCount && e.hasOwnProperty("processingInviteCount") && t.uint32(24).uint32(e.processingInviteCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupInviteMembersList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpGroupInviteMembersItem.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                case 3:
                    r.processingInviteCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupInviteMembersList)
                return e;
            var t = new s.HttpResponseBodyGetGroupInviteMembersList;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyGetGroupInviteMembersList.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyGetGroupInviteMembersList.items: object expected");
                    t.items[n] = s.HttpGroupInviteMembersItem.fromObject(e.items[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            null != e.processingInviteCount && (t.processingInviteCount = e.processingInviteCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.hasMore = !1,
            n.processingInviteCount = 0),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpGroupInviteMembersItem.toObject(e.items[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            null != e.processingInviteCount && e.hasOwnProperty("processingInviteCount") && (n.processingInviteCount = e.processingInviteCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupProcessingInviteCount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupProcessingInviteCount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupProcessingInviteCount)
                return e;
            var t = new s.HttpRequestBodyGetGroupProcessingInviteCount;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupProcessingInviteCount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.processingInviteCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.processingInviteCount && e.hasOwnProperty("processingInviteCount") && t.uint32(8).uint32(e.processingInviteCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupProcessingInviteCount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.processingInviteCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupProcessingInviteCount)
                return e;
            var t = new s.HttpResponseBodyGetGroupProcessingInviteCount;
            return null != e.processingInviteCount && (t.processingInviteCount = e.processingInviteCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.processingInviteCount = 0),
            null != e.processingInviteCount && e.hasOwnProperty("processingInviteCount") && (n.processingInviteCount = e.processingInviteCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAcceptAllGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAcceptAllGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAcceptAllGroupInviteMembers)
                return e;
            var t = new s.HttpRequestBodyAcceptAllGroupInviteMembers;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAcceptAllGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAcceptAllGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAcceptAllGroupInviteMembers ? e : new s.HttpResponseBodyAcceptAllGroupInviteMembers
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRejectAllGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRejectAllGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRejectAllGroupInviteMembers)
                return e;
            var t = new s.HttpRequestBodyRejectAllGroupInviteMembers;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRejectAllGroupInviteMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRejectAllGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRejectAllGroupInviteMembers ? e : new s.HttpResponseBodyRejectAllGroupInviteMembers
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupSendRemindMessagePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.canAllSendRemindMessage = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.canAllSendRemindMessage && e.hasOwnProperty("canAllSendRemindMessage") && t.uint32(16).bool(e.canAllSendRemindMessage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupSendRemindMessagePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.canAllSendRemindMessage = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupSendRemindMessagePermission)
                return e;
            var t = new s.HttpRequestBodySetGroupSendRemindMessagePermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.canAllSendRemindMessage && (t.canAllSendRemindMessage = Boolean(e.canAllSendRemindMessage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.canAllSendRemindMessage = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.canAllSendRemindMessage && e.hasOwnProperty("canAllSendRemindMessage") && (n.canAllSendRemindMessage = e.canAllSendRemindMessage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupSendRemindMessagePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupSendRemindMessagePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupSendRemindMessagePermission)
                return e;
            var t = new s.HttpResponseBodySetGroupSendRemindMessagePermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupPrivacyProtect = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.privacyProtect = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.privacyProtect && e.hasOwnProperty("privacyProtect") && t.uint32(16).bool(e.privacyProtect),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupPrivacyProtect;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.privacyProtect = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupPrivacyProtect)
                return e;
            var t = new s.HttpRequestBodySetGroupPrivacyProtect;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.privacyProtect && (t.privacyProtect = Boolean(e.privacyProtect)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.privacyProtect = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.privacyProtect && e.hasOwnProperty("privacyProtect") && (n.privacyProtect = e.privacyProtect),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupPrivacyProtect = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupPrivacyProtect;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupPrivacyProtect)
                return e;
            var t = new s.HttpResponseBodySetGroupPrivacyProtect;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupQRCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupQRCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupQRCode)
                return e;
            var t = new s.HttpRequestBodyGetGroupQRCode;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupQRCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(16).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupQRCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupQRCode)
                return e;
            var t = new s.HttpResponseBodyGetGroupQRCode;
            return null != e.url && (t.url = String(e.url)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.url = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            return null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupQRCodeShortUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype["public"] = !1,
        e.prototype.updated = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e["public"] && e.hasOwnProperty("public") && t.uint32(16).bool(e["public"]),
            null != e.updated && e.hasOwnProperty("updated") && t.uint32(24).bool(e.updated),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupQRCodeShortUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r["public"] = e.bool();
                    break;
                case 3:
                    r.updated = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupQRCodeShortUrl)
                return e;
            var t = new s.HttpRequestBodyGetGroupQRCodeShortUrl;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e["public"] && (t["public"] = Boolean(e["public"])),
            null != e.updated && (t.updated = Boolean(e.updated)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n["public"] = !1,
            n.updated = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e["public"] && e.hasOwnProperty("public") && (n["public"] = e["public"]),
            null != e.updated && e.hasOwnProperty("updated") && (n.updated = e.updated),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupQRCodeShortUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.qrcodeStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(16).uint64(e.expiredTimestamp),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && t.uint32(24).bool(e.qrcodeStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupQRCodeShortUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 3:
                    r.qrcodeStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupQRCodeShortUrl)
                return e;
            var t = new s.HttpResponseBodyGetGroupQRCodeShortUrl;
            return null != e.url && (t.url = String(e.url)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.qrcodeStatus && (t.qrcodeStatus = Boolean(e.qrcodeStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.url = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                n.qrcodeStatus = !1
            }
            return null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && (n.qrcodeStatus = e.qrcodeStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupQRCodeStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.qrcodeStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && t.uint32(16).bool(e.qrcodeStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupQRCodeStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.qrcodeStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupQRCodeStatus)
                return e;
            var t = new s.HttpRequestBodySetGroupQRCodeStatus;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.qrcodeStatus && (t.qrcodeStatus = Boolean(e.qrcodeStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.qrcodeStatus = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.qrcodeStatus && e.hasOwnProperty("qrcodeStatus") && (n.qrcodeStatus = e.qrcodeStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupQRCodeStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupQRCodeStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupQRCodeStatus)
                return e;
            var t = new s.HttpResponseBodySetGroupQRCodeStatus;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupQRCodeExpiredTimestamp = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(16).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupQRCodeExpiredTimestamp;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupQRCodeExpiredTimestamp)
                return e;
            var t = new s.HttpRequestBodySetGroupQRCodeExpiredTimestamp;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupQRCodeExpiredTimestamp = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupQRCodeExpiredTimestamp;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupQRCodeExpiredTimestamp)
                return e;
            var t = new s.HttpResponseBodySetGroupQRCodeExpiredTimestamp;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.canGetHistoryBeforeJoinedTimestamp = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.canGetHistoryBeforeJoinedTimestamp && e.hasOwnProperty("canGetHistoryBeforeJoinedTimestamp") && t.uint32(16).bool(e.canGetHistoryBeforeJoinedTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.canGetHistoryBeforeJoinedTimestamp = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp)
                return e;
            var t = new s.HttpRequestBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.canGetHistoryBeforeJoinedTimestamp && (t.canGetHistoryBeforeJoinedTimestamp = Boolean(e.canGetHistoryBeforeJoinedTimestamp)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.canGetHistoryBeforeJoinedTimestamp = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.canGetHistoryBeforeJoinedTimestamp && e.hasOwnProperty("canGetHistoryBeforeJoinedTimestamp") && (n.canGetHistoryBeforeJoinedTimestamp = e.canGetHistoryBeforeJoinedTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp)
                return e;
            var t = new s.HttpResponseBodySetGroupMemberCanGetHistoryBeforeJoinedTimestamp;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupState = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupState;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupState)
                return e;
            var t = new s.HttpRequestBodyGetGroupState;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupState = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.exists = !1,
        e.prototype.inGroup = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.exists && e.hasOwnProperty("exists") && t.uint32(8).bool(e.exists),
            null != e.inGroup && e.hasOwnProperty("inGroup") && t.uint32(16).bool(e.inGroup),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupState;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.exists = e.bool();
                    break;
                case 2:
                    r.inGroup = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupState)
                return e;
            var t = new s.HttpResponseBodyGetGroupState;
            return null != e.exists && (t.exists = Boolean(e.exists)),
            null != e.inGroup && (t.inGroup = Boolean(e.inGroup)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.exists = !1,
            n.inGroup = !1),
            null != e.exists && e.hasOwnProperty("exists") && (n.exists = e.exists),
            null != e.inGroup && e.hasOwnProperty("inGroup") && (n.inGroup = e.inGroup),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupAdmins = function() {
        function e(e) {
            if (this.memberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupAdmins;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupAdmins)
                return e;
            var t = new s.HttpRequestBodyAddGroupAdmins;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyAddGroupAdmins.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupAdmins = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupAdmins;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddGroupAdmins ? e : new s.HttpResponseBodyAddGroupAdmins
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteGroupAdmins = function() {
        function e(e) {
            if (this.memberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteGroupAdmins;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteGroupAdmins)
                return e;
            var t = new s.HttpRequestBodyDeleteGroupAdmins;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyDeleteGroupAdmins.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteGroupAdmins = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteGroupAdmins;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteGroupAdmins ? e : new s.HttpResponseBodyDeleteGroupAdmins
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupBlackList = function() {
        function e(e) {
            if (this.memberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupBlackList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupBlackList)
                return e;
            var t = new s.HttpRequestBodyAddGroupBlackList;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyAddGroupBlackList.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupBlackList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupBlackList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddGroupBlackList ? e : new s.HttpResponseBodyAddGroupBlackList
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteGroupBlackList = function() {
        function e(e) {
            if (this.memberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteGroupBlackList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteGroupBlackList)
                return e;
            var t = new s.HttpRequestBodyDeleteGroupBlackList;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyDeleteGroupBlackList.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteGroupBlackList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteGroupBlackList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteGroupBlackList ? e : new s.HttpResponseBodyDeleteGroupBlackList
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupWhiteList = function() {
        function e(e) {
            if (this.memberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupWhiteList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupWhiteList)
                return e;
            var t = new s.HttpRequestBodyAddGroupWhiteList;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyAddGroupWhiteList.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupWhiteList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupWhiteList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddGroupWhiteList ? e : new s.HttpResponseBodyAddGroupWhiteList
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteGroupWhiteList = function() {
        function e(e) {
            if (this.memberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberIds && e.memberIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.uint32(e.memberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteGroupWhiteList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    if (r.memberIds && r.memberIds.length || (r.memberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.memberIds.push(e.uint32())
                    } else
                        r.memberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteGroupWhiteList)
                return e;
            var t = new s.HttpRequestBodyDeleteGroupWhiteList;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.memberIds) {
                if (!Array.isArray(e.memberIds))
                    throw TypeError(".HttpRequestBodyDeleteGroupWhiteList.memberIds: array expected");
                t.memberIds = [];
                for (var n = 0; n < e.memberIds.length; ++n)
                    t.memberIds[n] = e.memberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.memberIds && e.memberIds.length) {
                n.memberIds = [];
                for (var r = 0; r < e.memberIds.length; ++r)
                    n.memberIds[r] = e.memberIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteGroupWhiteList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteGroupWhiteList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteGroupWhiteList ? e : new s.HttpResponseBodyDeleteGroupWhiteList
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupEveryoneSendMessagePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.allowEveryoneSendMessage = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.allowEveryoneSendMessage && e.hasOwnProperty("allowEveryoneSendMessage") && t.uint32(16).bool(e.allowEveryoneSendMessage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupEveryoneSendMessagePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.allowEveryoneSendMessage = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupEveryoneSendMessagePermission)
                return e;
            var t = new s.HttpRequestBodySetGroupEveryoneSendMessagePermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.allowEveryoneSendMessage && (t.allowEveryoneSendMessage = Boolean(e.allowEveryoneSendMessage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.allowEveryoneSendMessage = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.allowEveryoneSendMessage && e.hasOwnProperty("allowEveryoneSendMessage") && (n.allowEveryoneSendMessage = e.allowEveryoneSendMessage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupEveryoneSendMessagePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupEveryoneSendMessagePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupEveryoneSendMessagePermission)
                return e;
            var t = new s.HttpResponseBodySetGroupEveryoneSendMessagePermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupNotAllowAddFriendPermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.notAllowAddFriend = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.notAllowAddFriend && e.hasOwnProperty("notAllowAddFriend") && t.uint32(16).bool(e.notAllowAddFriend),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupNotAllowAddFriendPermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.notAllowAddFriend = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupNotAllowAddFriendPermission)
                return e;
            var t = new s.HttpRequestBodySetGroupNotAllowAddFriendPermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.notAllowAddFriend && (t.notAllowAddFriend = Boolean(e.notAllowAddFriend)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.notAllowAddFriend = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.notAllowAddFriend && e.hasOwnProperty("notAllowAddFriend") && (n.notAllowAddFriend = e.notAllowAddFriend),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupNotAllowAddFriendPermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupNotAllowAddFriendPermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupNotAllowAddFriendPermission)
                return e;
            var t = new s.HttpResponseBodySetGroupNotAllowAddFriendPermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupRobotAddPermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.canAllAddRobot = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.canAllAddRobot && e.hasOwnProperty("canAllAddRobot") && t.uint32(16).bool(e.canAllAddRobot),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupRobotAddPermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.canAllAddRobot = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupRobotAddPermission)
                return e;
            var t = new s.HttpRequestBodySetGroupRobotAddPermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.canAllAddRobot && (t.canAllAddRobot = Boolean(e.canAllAddRobot)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.canAllAddRobot = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.canAllAddRobot && e.hasOwnProperty("canAllAddRobot") && (n.canAllAddRobot = e.canAllAddRobot),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupRobotAddPermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupRobotAddPermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupRobotAddPermission)
                return e;
            var t = new s.HttpResponseBodySetGroupRobotAddPermission;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupRobotTemplates = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupRobotTemplates;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupRobotTemplates)
                return e;
            var t = new s.HttpRequestBodyGetGroupRobotTemplates;
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupRobotTemplates = function() {
        function e(e) {
            if (this.templates = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.templates = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            null != e.templates && e.templates.length)
                for (var n = 0; n < e.templates.length; ++n)
                    s.HttpGroupRobotTemplateInfo.encode(e.templates[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupRobotTemplates;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                case 2:
                    r.templates && r.templates.length || (r.templates = []),
                    r.templates.push(s.HttpGroupRobotTemplateInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupRobotTemplates)
                return e;
            var t = new s.HttpResponseBodyGetGroupRobotTemplates;
            if (null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            e.templates) {
                if (!Array.isArray(e.templates))
                    throw TypeError(".HttpResponseBodyGetGroupRobotTemplates.templates: array expected");
                t.templates = [];
                for (var n = 0; n < e.templates.length; ++n) {
                    if ("object" !== typeof e.templates[n])
                        throw TypeError(".HttpResponseBodyGetGroupRobotTemplates.templates: object expected");
                    t.templates[n] = s.HttpGroupRobotTemplateInfo.fromObject(e.templates[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.templates = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            e.templates && e.templates.length) {
                n.templates = [];
                for (var o = 0; o < e.templates.length; ++o)
                    n.templates[o] = s.HttpGroupRobotTemplateInfo.toObject(e.templates[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupRobot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.templateId = 0,
        e.prototype.webhookToken = "",
        e.prototype.robotName = "",
        e.prototype.sendMessage = !1,
        e.prototype.avatarUrl = "",
        e.prototype.thumbAvatarUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.templateId && e.hasOwnProperty("templateId") && t.uint32(16).uint32(e.templateId),
            null != e.webhookToken && e.hasOwnProperty("webhookToken") && t.uint32(26).string(e.webhookToken),
            null != e.robotName && e.hasOwnProperty("robotName") && t.uint32(34).string(e.robotName),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && t.uint32(40).bool(e.sendMessage),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(50).string(e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(58).string(e.thumbAvatarUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupRobot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.templateId = e.uint32();
                    break;
                case 3:
                    r.webhookToken = e.string();
                    break;
                case 4:
                    r.robotName = e.string();
                    break;
                case 5:
                    r.sendMessage = e.bool();
                    break;
                case 6:
                    r.avatarUrl = e.string();
                    break;
                case 7:
                    r.thumbAvatarUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupRobot)
                return e;
            var t = new s.HttpRequestBodyAddGroupRobot;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.templateId && (t.templateId = e.templateId >>> 0),
            null != e.webhookToken && (t.webhookToken = String(e.webhookToken)),
            null != e.robotName && (t.robotName = String(e.robotName)),
            null != e.sendMessage && (t.sendMessage = Boolean(e.sendMessage)),
            null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.templateId = 0,
            n.webhookToken = "",
            n.robotName = "",
            n.sendMessage = !1,
            n.avatarUrl = "",
            n.thumbAvatarUrl = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.templateId && e.hasOwnProperty("templateId") && (n.templateId = e.templateId),
            null != e.webhookToken && e.hasOwnProperty("webhookToken") && (n.webhookToken = e.webhookToken),
            null != e.robotName && e.hasOwnProperty("robotName") && (n.robotName = e.robotName),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && (n.sendMessage = e.sendMessage),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupRobot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupRobot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyAddGroupRobot)
                return e;
            var t = new s.HttpResponseBodyAddGroupRobot;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupRobotWebhook = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupRobotWebhook;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetGroupRobotWebhook ? e : new s.HttpRequestBodyGetGroupRobotWebhook
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupRobotWebhook = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.webhookToken = "",
        e.prototype.webhook = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.webhookToken && e.hasOwnProperty("webhookToken") && t.uint32(10).string(e.webhookToken),
            null != e.webhook && e.hasOwnProperty("webhook") && t.uint32(18).string(e.webhook),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupRobotWebhook;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.webhookToken = e.string();
                    break;
                case 2:
                    r.webhook = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupRobotWebhook)
                return e;
            var t = new s.HttpResponseBodyGetGroupRobotWebhook;
            return null != e.webhookToken && (t.webhookToken = String(e.webhookToken)),
            null != e.webhook && (t.webhook = String(e.webhook)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.webhookToken = "",
            n.webhook = ""),
            null != e.webhookToken && e.hasOwnProperty("webhookToken") && (n.webhookToken = e.webhookToken),
            null != e.webhook && e.hasOwnProperty("webhook") && (n.webhook = e.webhook),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadGroupRobotAvatar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.prototype.data = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            null != e.data && e.hasOwnProperty("data") && t.uint32(18).bytes(e.data),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadGroupRobotAvatar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                case 2:
                    r.data = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadGroupRobotAvatar)
                return e;
            var t = new s.HttpRequestBodyUploadGroupRobotAvatar;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0,
            t.bytes === String ? n.data = "" : (n.data = [],
            t.bytes !== Array && (n.data = a.newBuffer(n.data)))),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadGroupRobotAvatar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.avatarUrl = "",
        e.prototype.thumbAvatarUrl = "",
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.avatarVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(10).string(e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && t.uint32(18).string(e.thumbAvatarUrl),
            null != e.version && e.hasOwnProperty("version") && t.uint32(24).uint64(e.version),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && t.uint32(32).uint64(e.avatarVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadGroupRobotAvatar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.avatarUrl = e.string();
                    break;
                case 2:
                    r.thumbAvatarUrl = e.string();
                    break;
                case 3:
                    r.version = e.uint64();
                    break;
                case 4:
                    r.avatarVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUploadGroupRobotAvatar)
                return e;
            var t = new s.HttpResponseBodyUploadGroupRobotAvatar;
            return null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.thumbAvatarUrl && (t.thumbAvatarUrl = String(e.thumbAvatarUrl)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.avatarVersion && (a.Long ? (t.avatarVersion = a.Long.fromValue(e.avatarVersion)).unsigned = !0 : "string" === typeof e.avatarVersion ? t.avatarVersion = parseInt(e.avatarVersion, 10) : "number" === typeof e.avatarVersion ? t.avatarVersion = e.avatarVersion : "object" === typeof e.avatarVersion && (t.avatarVersion = new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.avatarUrl = "",
                n.thumbAvatarUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.avatarVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.avatarVersion = t.longs === String ? "0" : 0
            }
            return null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.thumbAvatarUrl && e.hasOwnProperty("thumbAvatarUrl") && (n.thumbAvatarUrl = e.thumbAvatarUrl),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && ("number" === typeof e.avatarVersion ? n.avatarVersion = t.longs === String ? String(e.avatarVersion) : e.avatarVersion : n.avatarVersion = t.longs === String ? a.Long.prototype.toString.call(e.avatarVersion) : t.longs === Number ? new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0) : e.avatarVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupRobotName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.prototype.robotName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            null != e.robotName && e.hasOwnProperty("robotName") && t.uint32(18).string(e.robotName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupRobotName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                case 2:
                    r.robotName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupRobotName)
                return e;
            var t = new s.HttpRequestBodySetGroupRobotName;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            null != e.robotName && (t.robotName = String(e.robotName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0,
            n.robotName = ""),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            null != e.robotName && e.hasOwnProperty("robotName") && (n.robotName = e.robotName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupRobotName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupRobotName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupRobotName)
                return e;
            var t = new s.HttpResponseBodySetGroupRobotName;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupRobotSendMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.prototype.sendMessage = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && t.uint32(16).bool(e.sendMessage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupRobotSendMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                case 2:
                    r.sendMessage = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupRobotSendMessage)
                return e;
            var t = new s.HttpRequestBodySetGroupRobotSendMessage;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            null != e.sendMessage && (t.sendMessage = Boolean(e.sendMessage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0,
            n.sendMessage = !1),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && (n.sendMessage = e.sendMessage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupRobotSendMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupRobotSendMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetGroupRobotSendMessage)
                return e;
            var t = new s.HttpResponseBodySetGroupRobotSendMessage;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteGroupRobot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteGroupRobot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteGroupRobot)
                return e;
            var t = new s.HttpRequestBodyDeleteGroupRobot;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteGroupRobot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robotId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robotId && e.hasOwnProperty("robotId") && t.uint32(8).uint32(e.robotId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteGroupRobot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robotId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDeleteGroupRobot)
                return e;
            var t = new s.HttpResponseBodyDeleteGroupRobot;
            return null != e.robotId && (t.robotId = e.robotId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.robotId = 0),
            null != e.robotId && e.hasOwnProperty("robotId") && (n.robotId = e.robotId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetGroupMessageTop = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).int32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetGroupMessageTop;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.int32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetGroupMessageTop)
                return e;
            var t = new s.HttpRequestBodySetGroupMessageTop;
            return null != e.groupId && (t.groupId = 0 | e.groupId),
            null != e.messageId && (t.messageId = String(e.messageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetGroupMessageTop = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetGroupMessageTop;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetGroupMessageTop ? e : new s.HttpResponseBodySetGroupMessageTop
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCancelGroupMessageTop = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).int32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCancelGroupMessageTop;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.int32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCancelGroupMessageTop)
                return e;
            var t = new s.HttpRequestBodyCancelGroupMessageTop;
            return null != e.groupId && (t.groupId = 0 | e.groupId),
            null != e.messageId && (t.messageId = String(e.messageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCancelGroupMessageTop = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCancelGroupMessageTop;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyCancelGroupMessageTop ? e : new s.HttpResponseBodyCancelGroupMessageTop
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAddGroupAppeal = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.prototype.reason = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            null != e.reason && e.hasOwnProperty("reason") && t.uint32(26).string(e.reason),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAddGroupAppeal;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                case 3:
                    r.reason = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAddGroupAppeal)
                return e;
            var t = new s.HttpRequestBodyAddGroupAppeal;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.reason && (t.reason = String(e.reason)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = "",
            n.reason = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.reason && e.hasOwnProperty("reason") && (n.reason = e.reason),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAddGroupAppeal = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAddGroupAppeal;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAddGroupAppeal ? e : new s.HttpResponseBodyAddGroupAppeal
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetLatestConversations = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.number = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.number && e.hasOwnProperty("number") && t.uint32(8).uint32(e.number),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetLatestConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.number = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetLatestConversations)
                return e;
            var t = new s.HttpRequestBodyGetLatestConversations;
            return null != e.number && (t.number = e.number >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.number = 0),
            null != e.number && e.hasOwnProperty("number") && (n.number = e.number),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetLatestConversations = function() {
        function e(e) {
            if (this.conversations = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversations = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversations && e.conversations.length)
                for (var n = 0; n < e.conversations.length; ++n)
                    s.HttpConversation.encode(e.conversations[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetLatestConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversations && r.conversations.length || (r.conversations = []),
                    r.conversations.push(s.HttpConversation.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetLatestConversations)
                return e;
            var t = new s.HttpResponseBodyGetLatestConversations;
            if (e.conversations) {
                if (!Array.isArray(e.conversations))
                    throw TypeError(".HttpResponseBodyGetLatestConversations.conversations: array expected");
                t.conversations = [];
                for (var n = 0; n < e.conversations.length; ++n) {
                    if ("object" !== typeof e.conversations[n])
                        throw TypeError(".HttpResponseBodyGetLatestConversations.conversations: object expected");
                    t.conversations[n] = s.HttpConversation.fromObject(e.conversations[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversations = []),
            e.conversations && e.conversations.length) {
                n.conversations = [];
                for (var r = 0; r < e.conversations.length; ++r)
                    n.conversations[r] = s.HttpConversation.toObject(e.conversations[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetExternalLatestConversations = function() {
        function e(e) {
            if (this.myExternalUserIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.number = 0,
        e.prototype.myExternalUserIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.number && e.hasOwnProperty("number") && t.uint32(8).uint32(e.number),
            null != e.myExternalUserIds && e.myExternalUserIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.myExternalUserIds.length; ++n)
                    t.uint32(e.myExternalUserIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetExternalLatestConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.number = e.uint32();
                    break;
                case 2:
                    if (r.myExternalUserIds && r.myExternalUserIds.length || (r.myExternalUserIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.myExternalUserIds.push(e.uint32())
                    } else
                        r.myExternalUserIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetExternalLatestConversations)
                return e;
            var t = new s.HttpRequestBodyGetExternalLatestConversations;
            if (null != e.number && (t.number = e.number >>> 0),
            e.myExternalUserIds) {
                if (!Array.isArray(e.myExternalUserIds))
                    throw TypeError(".HttpRequestBodyGetExternalLatestConversations.myExternalUserIds: array expected");
                t.myExternalUserIds = [];
                for (var n = 0; n < e.myExternalUserIds.length; ++n)
                    t.myExternalUserIds[n] = e.myExternalUserIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.myExternalUserIds = []),
            t.defaults && (n.number = 0),
            null != e.number && e.hasOwnProperty("number") && (n.number = e.number),
            e.myExternalUserIds && e.myExternalUserIds.length) {
                n.myExternalUserIds = [];
                for (var r = 0; r < e.myExternalUserIds.length; ++r)
                    n.myExternalUserIds[r] = e.myExternalUserIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetExternalLatestConversations = function() {
        function e(e) {
            if (this.conversations = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversations = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversations && e.conversations.length)
                for (var n = 0; n < e.conversations.length; ++n)
                    s.HttpConversation.encode(e.conversations[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetExternalLatestConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversations && r.conversations.length || (r.conversations = []),
                    r.conversations.push(s.HttpConversation.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetExternalLatestConversations)
                return e;
            var t = new s.HttpResponseBodyGetExternalLatestConversations;
            if (e.conversations) {
                if (!Array.isArray(e.conversations))
                    throw TypeError(".HttpResponseBodyGetExternalLatestConversations.conversations: array expected");
                t.conversations = [];
                for (var n = 0; n < e.conversations.length; ++n) {
                    if ("object" !== typeof e.conversations[n])
                        throw TypeError(".HttpResponseBodyGetExternalLatestConversations.conversations: object expected");
                    t.conversations[n] = s.HttpConversation.fromObject(e.conversations[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversations = []),
            e.conversations && e.conversations.length) {
                n.conversations = [];
                for (var r = 0; r < e.conversations.length; ++r)
                    n.conversations[r] = s.HttpConversation.toObject(e.conversations[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetConversationReadStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(24).uint64(e.sequence),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetConversationReadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.sequence = e.uint64();
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetConversationReadStatus)
                return e;
            var t = new s.HttpRequestBodySetConversationReadStatus;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !0 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0))),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
                n.userId = 0
            }
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0) : e.sequence),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetConversationReadStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetConversationReadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetConversationReadStatus ? e : new s.HttpResponseBodySetConversationReadStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchGetConversationReadSequence = function() {
        function e(e) {
            if (this.conversationIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationIds && e.conversationIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.conversationIds.length; ++n)
                    t.uint32(e.conversationIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchGetConversationReadSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.conversationIds && r.conversationIds.length || (r.conversationIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.conversationIds.push(e.uint32())
                    } else
                        r.conversationIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchGetConversationReadSequence)
                return e;
            var t = new s.HttpRequestBodyBatchGetConversationReadSequence;
            if (e.conversationIds) {
                if (!Array.isArray(e.conversationIds))
                    throw TypeError(".HttpRequestBodyBatchGetConversationReadSequence.conversationIds: array expected");
                t.conversationIds = [];
                for (var n = 0; n < e.conversationIds.length; ++n)
                    t.conversationIds[n] = e.conversationIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversationIds = []),
            e.conversationIds && e.conversationIds.length) {
                n.conversationIds = [];
                for (var r = 0; r < e.conversationIds.length; ++r)
                    n.conversationIds[r] = e.conversationIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchGetConversationReadSequence = function() {
        function e(e) {
            if (this.readSequences = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.readSequences = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.readSequences && e.readSequences.length)
                for (var n = 0; n < e.readSequences.length; ++n)
                    s.HttpConversationSequence.encode(e.readSequences[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchGetConversationReadSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.readSequences && r.readSequences.length || (r.readSequences = []),
                    r.readSequences.push(s.HttpConversationSequence.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchGetConversationReadSequence)
                return e;
            var t = new s.HttpResponseBodyBatchGetConversationReadSequence;
            if (e.readSequences) {
                if (!Array.isArray(e.readSequences))
                    throw TypeError(".HttpResponseBodyBatchGetConversationReadSequence.readSequences: array expected");
                t.readSequences = [];
                for (var n = 0; n < e.readSequences.length; ++n) {
                    if ("object" !== typeof e.readSequences[n])
                        throw TypeError(".HttpResponseBodyBatchGetConversationReadSequence.readSequences: object expected");
                    t.readSequences[n] = s.HttpConversationSequence.fromObject(e.readSequences[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.readSequences = []),
            e.readSequences && e.readSequences.length) {
                n.readSequences = [];
                for (var r = 0; r < e.readSequences.length; ++r)
                    n.readSequences[r] = s.HttpConversationSequence.toObject(e.readSequences[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRemoveConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.deleteServerMessages = !1,
        e.prototype.notRemoveConversation = !1,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.deleteServerMessages && e.hasOwnProperty("deleteServerMessages") && t.uint32(24).bool(e.deleteServerMessages),
            null != e.notRemoveConversation && e.hasOwnProperty("notRemoveConversation") && t.uint32(32).bool(e.notRemoveConversation),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(40).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRemoveConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.deleteServerMessages = e.bool();
                    break;
                case 4:
                    r.notRemoveConversation = e.bool();
                    break;
                case 5:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRemoveConversation)
                return e;
            var t = new s.HttpRequestBodyRemoveConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.deleteServerMessages && (t.deleteServerMessages = Boolean(e.deleteServerMessages)),
            null != e.notRemoveConversation && (t.notRemoveConversation = Boolean(e.notRemoveConversation)),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.deleteServerMessages = !1,
            n.notRemoveConversation = !1,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.deleteServerMessages && e.hasOwnProperty("deleteServerMessages") && (n.deleteServerMessages = e.deleteServerMessages),
            null != e.notRemoveConversation && e.hasOwnProperty("notRemoveConversation") && (n.notRemoveConversation = e.notRemoveConversation),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRemoveConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRemoveConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRemoveConversation ? e : new s.HttpResponseBodyRemoveConversation
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDestroyPrivateConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.removeConversation = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.removeConversation && e.hasOwnProperty("removeConversation") && t.uint32(24).bool(e.removeConversation),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDestroyPrivateConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.removeConversation = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDestroyPrivateConversation)
                return e;
            var t = new s.HttpRequestBodyDestroyPrivateConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.removeConversation && (t.removeConversation = Boolean(e.removeConversation)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.removeConversation = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.removeConversation && e.hasOwnProperty("removeConversation") && (n.removeConversation = e.removeConversation),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDestroyPrivateConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDestroyPrivateConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDestroyPrivateConversation ? e : new s.HttpResponseBodyDestroyPrivateConversation
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDestroyAllPrivateConversations = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDestroyAllPrivateConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyDestroyAllPrivateConversations ? e : new s.HttpRequestBodyDestroyAllPrivateConversations
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDestroyAllPrivateConversations = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDestroyAllPrivateConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDestroyAllPrivateConversations ? e : new s.HttpResponseBodyDestroyAllPrivateConversations
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetConversationHistory = function() {
        function e(e) {
            if (this.bodyTypes = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationType = 0,
        e.prototype.conversationId = 0,
        e.prototype.count = 0,
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.downDirection = !1,
        e.prototype.fixUrl = !1,
        e.prototype.bodyTypes = a.emptyArray,
        e.prototype.userId = 0,
        e.prototype.area = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(8).int32(e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            null != e.count && e.hasOwnProperty("count") && t.uint32(24).uint32(e.count),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(32).uint64(e.sequence),
            null != e.downDirection && e.hasOwnProperty("downDirection") && t.uint32(40).bool(e.downDirection),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && t.uint32(48).bool(e.fixUrl),
            null != e.bodyTypes && e.bodyTypes.length)
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.uint32(58).string(e.bodyTypes[n]);
            return null != e.userId && e.hasOwnProperty("userId") && t.uint32(64).uint32(e.userId),
            null != e.area && e.hasOwnProperty("area") && t.uint32(72).int32(e.area),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetConversationHistory;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationType = e.int32();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                case 3:
                    r.count = e.uint32();
                    break;
                case 4:
                    r.sequence = e.uint64();
                    break;
                case 5:
                    r.downDirection = e.bool();
                    break;
                case 6:
                    r.fixUrl = e.bool();
                    break;
                case 7:
                    r.bodyTypes && r.bodyTypes.length || (r.bodyTypes = []),
                    r.bodyTypes.push(e.string());
                    break;
                case 8:
                    r.userId = e.uint32();
                    break;
                case 9:
                    r.area = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetConversationHistory)
                return e;
            var t = new s.HttpRequestBodyGetConversationHistory;
            switch (e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !0 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0))),
            null != e.downDirection && (t.downDirection = Boolean(e.downDirection)),
            null != e.fixUrl && (t.fixUrl = Boolean(e.fixUrl)),
            e.bodyTypes) {
                if (!Array.isArray(e.bodyTypes))
                    throw TypeError(".HttpRequestBodyGetConversationHistory.bodyTypes: array expected");
                t.bodyTypes = [];
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.bodyTypes[n] = String(e.bodyTypes[n])
            }
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.area) {
            case "CommonMessageAreaAll":
            case 0:
                t.area = 0;
                break;
            case "CommonMessageAreaLecture":
            case 1:
                t.area = 1;
                break;
            case "CommonMessageAreaQuestion":
            case 2:
                t.area = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.bodyTypes = []),
            t.defaults) {
                if (n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                n.conversationId = 0,
                n.count = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
                n.downDirection = !1,
                n.fixUrl = !1,
                n.userId = 0,
                n.area = t.enums === String ? "CommonMessageAreaAll" : 0
            }
            if (null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0) : e.sequence),
            null != e.downDirection && e.hasOwnProperty("downDirection") && (n.downDirection = e.downDirection),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && (n.fixUrl = e.fixUrl),
            e.bodyTypes && e.bodyTypes.length) {
                n.bodyTypes = [];
                for (var o = 0; o < e.bodyTypes.length; ++o)
                    n.bodyTypes[o] = e.bodyTypes[o]
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.area && e.hasOwnProperty("area") && (n.area = t.enums === String ? s.CommonMessageArea[e.area] : e.area),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetConversationHistory = function() {
        function e(e) {
            if (this.messages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messages = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.messages && e.messages.length)
                for (var n = 0; n < e.messages.length; ++n)
                    s.CommonMessage.encode(e.messages[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetConversationHistory;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messages && r.messages.length || (r.messages = []),
                    r.messages.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetConversationHistory)
                return e;
            var t = new s.HttpResponseBodyGetConversationHistory;
            if (e.messages) {
                if (!Array.isArray(e.messages))
                    throw TypeError(".HttpResponseBodyGetConversationHistory.messages: array expected");
                t.messages = [];
                for (var n = 0; n < e.messages.length; ++n) {
                    if ("object" !== typeof e.messages[n])
                        throw TypeError(".HttpResponseBodyGetConversationHistory.messages: object expected");
                    t.messages[n] = s.CommonMessage.fromObject(e.messages[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messages = []),
            t.defaults && (n.hasMore = !1),
            e.messages && e.messages.length) {
                n.messages = [];
                for (var r = 0; r < e.messages.length; ++r)
                    n.messages[r] = s.CommonMessage.toObject(e.messages[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestGetConversationSequence = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.userId = 0,
        e.prototype.area = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(24).uint32(e.userId),
            null != e.area && e.hasOwnProperty("area") && t.uint32(32).int32(e.area),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestGetConversationSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.userId = e.uint32();
                    break;
                case 4:
                    r.area = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestGetConversationSequence)
                return e;
            var t = new s.HttpRequestGetConversationSequence;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.area) {
            case "CommonMessageAreaAll":
            case 0:
                t.area = 0;
                break;
            case "CommonMessageAreaLecture":
            case 1:
                t.area = 1;
                break;
            case "CommonMessageAreaQuestion":
            case 2:
                t.area = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.userId = 0,
            n.area = t.enums === String ? "CommonMessageAreaAll" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.area && e.hasOwnProperty("area") && (n.area = t.enums === String ? s.CommonMessageArea[e.area] : e.area),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseGetConversationSequence = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.minSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.message = null,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.minSequence && e.hasOwnProperty("minSequence") && t.uint32(24).uint64(e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && t.uint32(32).uint64(e.maxSequence),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(42).fork()).ldelim(),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(48).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseGetConversationSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.minSequence = e.uint64();
                    break;
                case 4:
                    r.maxSequence = e.uint64();
                    break;
                case 5:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 6:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseGetConversationSequence)
                return e;
            var t = new s.HttpResponseGetConversationSequence;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.minSequence && (a.Long ? (t.minSequence = a.Long.fromValue(e.minSequence)).unsigned = !0 : "string" === typeof e.minSequence ? t.minSequence = parseInt(e.minSequence, 10) : "number" === typeof e.minSequence ? t.minSequence = e.minSequence : "object" === typeof e.minSequence && (t.minSequence = new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0))),
            null != e.maxSequence && (a.Long ? (t.maxSequence = a.Long.fromValue(e.maxSequence)).unsigned = !0 : "string" === typeof e.maxSequence ? t.maxSequence = parseInt(e.maxSequence, 10) : "number" === typeof e.maxSequence ? t.maxSequence = e.maxSequence : "object" === typeof e.maxSequence && (t.maxSequence = new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0))),
            null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".HttpResponseGetConversationSequence.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.minSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.minSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.maxSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.maxSequence = t.longs === String ? "0" : 0;
                n.message = null,
                n.userId = 0
            }
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.minSequence && e.hasOwnProperty("minSequence") && ("number" === typeof e.minSequence ? n.minSequence = t.longs === String ? String(e.minSequence) : e.minSequence : n.minSequence = t.longs === String ? a.Long.prototype.toString.call(e.minSequence) : t.longs === Number ? new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0) : e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && ("number" === typeof e.maxSequence ? n.maxSequence = t.longs === String ? String(e.maxSequence) : e.maxSequence : n.maxSequence = t.longs === String ? a.Long.prototype.toString.call(e.maxSequence) : t.longs === Number ? new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0) : e.maxSequence),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchGetConversationsSequence = function() {
        function e(e) {
            if (this.conversationsSequence = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationsSequence = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationsSequence && e.conversationsSequence.length)
                for (var n = 0; n < e.conversationsSequence.length; ++n)
                    s.HttpRequestGetConversationSequence.encode(e.conversationsSequence[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchGetConversationsSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationsSequence && r.conversationsSequence.length || (r.conversationsSequence = []),
                    r.conversationsSequence.push(s.HttpRequestGetConversationSequence.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchGetConversationsSequence)
                return e;
            var t = new s.HttpRequestBodyBatchGetConversationsSequence;
            if (e.conversationsSequence) {
                if (!Array.isArray(e.conversationsSequence))
                    throw TypeError(".HttpRequestBodyBatchGetConversationsSequence.conversationsSequence: array expected");
                t.conversationsSequence = [];
                for (var n = 0; n < e.conversationsSequence.length; ++n) {
                    if ("object" !== typeof e.conversationsSequence[n])
                        throw TypeError(".HttpRequestBodyBatchGetConversationsSequence.conversationsSequence: object expected");
                    t.conversationsSequence[n] = s.HttpRequestGetConversationSequence.fromObject(e.conversationsSequence[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversationsSequence = []),
            e.conversationsSequence && e.conversationsSequence.length) {
                n.conversationsSequence = [];
                for (var r = 0; r < e.conversationsSequence.length; ++r)
                    n.conversationsSequence[r] = s.HttpRequestGetConversationSequence.toObject(e.conversationsSequence[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchGetConversationsSequence = function() {
        function e(e) {
            if (this.conversationsSequence = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationsSequence = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationsSequence && e.conversationsSequence.length)
                for (var n = 0; n < e.conversationsSequence.length; ++n)
                    s.HttpResponseGetConversationSequence.encode(e.conversationsSequence[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchGetConversationsSequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationsSequence && r.conversationsSequence.length || (r.conversationsSequence = []),
                    r.conversationsSequence.push(s.HttpResponseGetConversationSequence.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchGetConversationsSequence)
                return e;
            var t = new s.HttpResponseBodyBatchGetConversationsSequence;
            if (e.conversationsSequence) {
                if (!Array.isArray(e.conversationsSequence))
                    throw TypeError(".HttpResponseBodyBatchGetConversationsSequence.conversationsSequence: array expected");
                t.conversationsSequence = [];
                for (var n = 0; n < e.conversationsSequence.length; ++n) {
                    if ("object" !== typeof e.conversationsSequence[n])
                        throw TypeError(".HttpResponseBodyBatchGetConversationsSequence.conversationsSequence: object expected");
                    t.conversationsSequence[n] = s.HttpResponseGetConversationSequence.fromObject(e.conversationsSequence[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversationsSequence = []),
            e.conversationsSequence && e.conversationsSequence.length) {
                n.conversationsSequence = [];
                for (var r = 0; r < e.conversationsSequence.length; ++r)
                    n.conversationsSequence[r] = s.HttpResponseGetConversationSequence.toObject(e.conversationsSequence[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUseScreenshot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUseScreenshot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUseScreenshot)
                return e;
            var t = new s.HttpRequestBodyUseScreenshot;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUseScreenshot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUseScreenshot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUseScreenshot ? e : new s.HttpResponseBodyUseScreenshot
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySyncUnreadNumber = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.number = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.number && e.hasOwnProperty("number") && t.uint32(8).uint32(e.number),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySyncUnreadNumber;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.number = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySyncUnreadNumber)
                return e;
            var t = new s.HttpRequestBodySyncUnreadNumber;
            return null != e.number && (t.number = e.number >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.number = 0),
            null != e.number && e.hasOwnProperty("number") && (n.number = e.number),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySyncUnreadNumber = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySyncUnreadNumber;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySyncUnreadNumber ? e : new s.HttpResponseBodySyncUnreadNumber
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteConversationMessages = function() {
        function e(e) {
            if (this.deleteMessageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.deleteMessageIds = a.emptyArray,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.deleteMessageIds && e.deleteMessageIds.length)
                for (var n = 0; n < e.deleteMessageIds.length; ++n)
                    t.uint32(26).string(e.deleteMessageIds[n]);
            return null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteConversationMessages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.deleteMessageIds && r.deleteMessageIds.length || (r.deleteMessageIds = []),
                    r.deleteMessageIds.push(e.string());
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteConversationMessages)
                return e;
            var t = new s.HttpRequestBodyDeleteConversationMessages;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.deleteMessageIds) {
                if (!Array.isArray(e.deleteMessageIds))
                    throw TypeError(".HttpRequestBodyDeleteConversationMessages.deleteMessageIds: array expected");
                t.deleteMessageIds = [];
                for (var n = 0; n < e.deleteMessageIds.length; ++n)
                    t.deleteMessageIds[n] = String(e.deleteMessageIds[n])
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.deleteMessageIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.deleteMessageIds && e.deleteMessageIds.length) {
                n.deleteMessageIds = [];
                for (var r = 0; r < e.deleteMessageIds.length; ++r)
                    n.deleteMessageIds[r] = e.deleteMessageIds[r]
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteConversationMessages = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.minSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.minSequence && e.hasOwnProperty("minSequence") && t.uint32(24).uint64(e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && t.uint32(32).uint64(e.maxSequence),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteConversationMessages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.minSequence = e.uint64();
                    break;
                case 4:
                    r.maxSequence = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDeleteConversationMessages)
                return e;
            var t = new s.HttpResponseBodyDeleteConversationMessages;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.minSequence && (a.Long ? (t.minSequence = a.Long.fromValue(e.minSequence)).unsigned = !0 : "string" === typeof e.minSequence ? t.minSequence = parseInt(e.minSequence, 10) : "number" === typeof e.minSequence ? t.minSequence = e.minSequence : "object" === typeof e.minSequence && (t.minSequence = new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0))),
            null != e.maxSequence && (a.Long ? (t.maxSequence = a.Long.fromValue(e.maxSequence)).unsigned = !0 : "string" === typeof e.maxSequence ? t.maxSequence = parseInt(e.maxSequence, 10) : "number" === typeof e.maxSequence ? t.maxSequence = e.maxSequence : "object" === typeof e.maxSequence && (t.maxSequence = new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.minSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.minSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.maxSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.maxSequence = t.longs === String ? "0" : 0
            }
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.minSequence && e.hasOwnProperty("minSequence") && ("number" === typeof e.minSequence ? n.minSequence = t.longs === String ? String(e.minSequence) : e.minSequence : n.minSequence = t.longs === String ? a.Long.prototype.toString.call(e.minSequence) : t.longs === Number ? new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0) : e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && ("number" === typeof e.maxSequence ? n.maxSequence = t.longs === String ? String(e.maxSequence) : e.maxSequence : n.maxSequence = t.longs === String ? a.Long.prototype.toString.call(e.maxSequence) : t.longs === Number ? new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0) : e.maxSequence),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetConversationCalendar = function() {
        function e(e) {
            if (this.bodyTypes = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.bodyTypes = a.emptyArray,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.bodyTypes && e.bodyTypes.length)
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.uint32(26).string(e.bodyTypes[n]);
            return null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetConversationCalendar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.bodyTypes && r.bodyTypes.length || (r.bodyTypes = []),
                    r.bodyTypes.push(e.string());
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetConversationCalendar)
                return e;
            var t = new s.HttpRequestBodyGetConversationCalendar;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.bodyTypes) {
                if (!Array.isArray(e.bodyTypes))
                    throw TypeError(".HttpRequestBodyGetConversationCalendar.bodyTypes: array expected");
                t.bodyTypes = [];
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.bodyTypes[n] = String(e.bodyTypes[n])
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.bodyTypes = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.bodyTypes && e.bodyTypes.length) {
                n.bodyTypes = [];
                for (var r = 0; r < e.bodyTypes.length; ++r)
                    n.bodyTypes[r] = e.bodyTypes[r]
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetConversationCalendar = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpConversationCalendarDay.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetConversationCalendar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpConversationCalendarDay.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetConversationCalendar)
                return e;
            var t = new s.HttpResponseBodyGetConversationCalendar;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyGetConversationCalendar.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyGetConversationCalendar.items: object expected");
                    t.items[n] = s.HttpConversationCalendarDay.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpConversationCalendarDay.toObject(e.items[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetCombinedMessageItems = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.combinedMessageId = "",
        e.prototype.fixUrl = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.combinedMessageId && e.hasOwnProperty("combinedMessageId") && t.uint32(26).string(e.combinedMessageId),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && t.uint32(32).bool(e.fixUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetCombinedMessageItems;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.combinedMessageId = e.string();
                    break;
                case 4:
                    r.fixUrl = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetCombinedMessageItems)
                return e;
            var t = new s.HttpRequestBodyGetCombinedMessageItems;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.combinedMessageId && (t.combinedMessageId = String(e.combinedMessageId)),
            null != e.fixUrl && (t.fixUrl = Boolean(e.fixUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.combinedMessageId = "",
            n.fixUrl = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.combinedMessageId && e.hasOwnProperty("combinedMessageId") && (n.combinedMessageId = e.combinedMessageId),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && (n.fixUrl = e.fixUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetCombinedMessageItems = function() {
        function e(e) {
            if (this.combinedMessageItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.combinedMessageItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.combinedMessageItems && e.combinedMessageItems.length)
                for (var n = 0; n < e.combinedMessageItems.length; ++n)
                    s.CommonMessage.encode(e.combinedMessageItems[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetCombinedMessageItems;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.combinedMessageItems && r.combinedMessageItems.length || (r.combinedMessageItems = []),
                    r.combinedMessageItems.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetCombinedMessageItems)
                return e;
            var t = new s.HttpResponseBodyGetCombinedMessageItems;
            if (e.combinedMessageItems) {
                if (!Array.isArray(e.combinedMessageItems))
                    throw TypeError(".HttpResponseBodyGetCombinedMessageItems.combinedMessageItems: array expected");
                t.combinedMessageItems = [];
                for (var n = 0; n < e.combinedMessageItems.length; ++n) {
                    if ("object" !== typeof e.combinedMessageItems[n])
                        throw TypeError(".HttpResponseBodyGetCombinedMessageItems.combinedMessageItems: object expected");
                    t.combinedMessageItems[n] = s.CommonMessage.fromObject(e.combinedMessageItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.combinedMessageItems = []),
            e.combinedMessageItems && e.combinedMessageItems.length) {
                n.combinedMessageItems = [];
                for (var r = 0; r < e.combinedMessageItems.length; ++r)
                    n.combinedMessageItems[r] = s.CommonMessage.toObject(e.combinedMessageItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyPlayVoiceMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyPlayVoiceMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyPlayVoiceMessage ? e : new s.HttpResponseBodyPlayVoiceMessage
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupMessageUnreadDetails = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.messageId = "",
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(18).string(e.messageId),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(24).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupMessageUnreadDetails;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.messageId = e.string();
                    break;
                case 3:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupMessageUnreadDetails)
                return e;
            var t = new s.HttpRequestBodyGetGroupMessageUnreadDetails;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.messageId = "",
            n.userId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupMessageUnreadDetails = function() {
        function e(e) {
            if (this.messageUnreadStatus = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageUnreadStatus = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.messageUnreadStatus && e.messageUnreadStatus.length)
                for (var n = 0; n < e.messageUnreadStatus.length; ++n)
                    s.HttpMessageUnreadStatus.encode(e.messageUnreadStatus[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupMessageUnreadDetails;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageUnreadStatus && r.messageUnreadStatus.length || (r.messageUnreadStatus = []),
                    r.messageUnreadStatus.push(s.HttpMessageUnreadStatus.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupMessageUnreadDetails)
                return e;
            var t = new s.HttpResponseBodyGetGroupMessageUnreadDetails;
            if (e.messageUnreadStatus) {
                if (!Array.isArray(e.messageUnreadStatus))
                    throw TypeError(".HttpResponseBodyGetGroupMessageUnreadDetails.messageUnreadStatus: array expected");
                t.messageUnreadStatus = [];
                for (var n = 0; n < e.messageUnreadStatus.length; ++n) {
                    if ("object" !== typeof e.messageUnreadStatus[n])
                        throw TypeError(".HttpResponseBodyGetGroupMessageUnreadDetails.messageUnreadStatus: object expected");
                    t.messageUnreadStatus[n] = s.HttpMessageUnreadStatus.fromObject(e.messageUnreadStatus[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messageUnreadStatus = []),
            e.messageUnreadStatus && e.messageUnreadStatus.length) {
                n.messageUnreadStatus = [];
                for (var r = 0; r < e.messageUnreadStatus.length; ++r)
                    n.messageUnreadStatus[r] = s.HttpMessageUnreadStatus.toObject(e.messageUnreadStatus[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMessagesUnreadStatus = function() {
        function e(e) {
            if (this.messageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.messageIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.messageIds && e.messageIds.length)
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.uint32(26).string(e.messageIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMessagesUnreadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.messageIds && r.messageIds.length || (r.messageIds = []),
                    r.messageIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMessagesUnreadStatus)
                return e;
            var t = new s.HttpRequestBodySetMessagesUnreadStatus;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.messageIds) {
                if (!Array.isArray(e.messageIds))
                    throw TypeError(".HttpRequestBodySetMessagesUnreadStatus.messageIds: array expected");
                t.messageIds = [];
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.messageIds[n] = String(e.messageIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messageIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.messageIds && e.messageIds.length) {
                n.messageIds = [];
                for (var r = 0; r < e.messageIds.length; ++r)
                    n.messageIds[r] = e.messageIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMessagesUnreadStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMessagesUnreadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetMessagesUnreadStatus ? e : new s.HttpResponseBodySetMessagesUnreadStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchSetMessagesUnreadStatus = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpSetMessagesUnreadStatusItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchSetMessagesUnreadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpSetMessagesUnreadStatusItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchSetMessagesUnreadStatus)
                return e;
            var t = new s.HttpRequestBodyBatchSetMessagesUnreadStatus;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpRequestBodyBatchSetMessagesUnreadStatus.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpRequestBodyBatchSetMessagesUnreadStatus.items: object expected");
                    t.items[n] = s.HttpSetMessagesUnreadStatusItem.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpSetMessagesUnreadStatusItem.toObject(e.items[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpSetMessagesUnreadStatusItem = function() {
        function e(e) {
            if (this.messageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.messageIds = a.emptyArray,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.messageIds && e.messageIds.length)
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.uint32(26).string(e.messageIds[n]);
            return null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpSetMessagesUnreadStatusItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.messageIds && r.messageIds.length || (r.messageIds = []),
                    r.messageIds.push(e.string());
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpSetMessagesUnreadStatusItem)
                return e;
            var t = new s.HttpSetMessagesUnreadStatusItem;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.messageIds) {
                if (!Array.isArray(e.messageIds))
                    throw TypeError(".HttpSetMessagesUnreadStatusItem.messageIds: array expected");
                t.messageIds = [];
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.messageIds[n] = String(e.messageIds[n])
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messageIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.messageIds && e.messageIds.length) {
                n.messageIds = [];
                for (var r = 0; r < e.messageIds.length; ++r)
                    n.messageIds[r] = e.messageIds[r]
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchSetMessagesUnreadStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchSetMessagesUnreadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyBatchSetMessagesUnreadStatus ? e : new s.HttpResponseBodyBatchSetMessagesUnreadStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetThirdPartyAppInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appKey = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(10).string(e.appKey),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetThirdPartyAppInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appKey = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetThirdPartyAppInfo)
                return e;
            var t = new s.HttpRequestBodyGetThirdPartyAppInfo;
            return null != e.appKey && (t.appKey = String(e.appKey)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appKey = ""),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetThirdPartyAppInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appIconUrl = "",
        e.prototype.appName = "",
        e.prototype.appKey = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appIconUrl && e.hasOwnProperty("appIconUrl") && t.uint32(10).string(e.appIconUrl),
            null != e.appName && e.hasOwnProperty("appName") && t.uint32(18).string(e.appName),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(26).string(e.appKey),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetThirdPartyAppInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appIconUrl = e.string();
                    break;
                case 2:
                    r.appName = e.string();
                    break;
                case 3:
                    r.appKey = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetThirdPartyAppInfo)
                return e;
            var t = new s.HttpResponseBodyGetThirdPartyAppInfo;
            return null != e.appIconUrl && (t.appIconUrl = String(e.appIconUrl)),
            null != e.appName && (t.appName = String(e.appName)),
            null != e.appKey && (t.appKey = String(e.appKey)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appIconUrl = "",
            n.appName = "",
            n.appKey = ""),
            null != e.appIconUrl && e.hasOwnProperty("appIconUrl") && (n.appIconUrl = e.appIconUrl),
            null != e.appName && e.hasOwnProperty("appName") && (n.appName = e.appName),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchGetThirdPartyAppsInfo = function() {
        function e(e) {
            if (this.appKeys = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appKeys = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.appKeys && e.appKeys.length)
                for (var n = 0; n < e.appKeys.length; ++n)
                    t.uint32(10).string(e.appKeys[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchGetThirdPartyAppsInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appKeys && r.appKeys.length || (r.appKeys = []),
                    r.appKeys.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchGetThirdPartyAppsInfo)
                return e;
            var t = new s.HttpRequestBodyBatchGetThirdPartyAppsInfo;
            if (e.appKeys) {
                if (!Array.isArray(e.appKeys))
                    throw TypeError(".HttpRequestBodyBatchGetThirdPartyAppsInfo.appKeys: array expected");
                t.appKeys = [];
                for (var n = 0; n < e.appKeys.length; ++n)
                    t.appKeys[n] = String(e.appKeys[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.appKeys = []),
            e.appKeys && e.appKeys.length) {
                n.appKeys = [];
                for (var r = 0; r < e.appKeys.length; ++r)
                    n.appKeys[r] = e.appKeys[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchGetThirdPartyAppsInfo = function() {
        function e(e) {
            if (this.appsInfo = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appsInfo = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.appsInfo && e.appsInfo.length)
                for (var n = 0; n < e.appsInfo.length; ++n)
                    s.HttpResponseBodyGetThirdPartyAppInfo.encode(e.appsInfo[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchGetThirdPartyAppsInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appsInfo && r.appsInfo.length || (r.appsInfo = []),
                    r.appsInfo.push(s.HttpResponseBodyGetThirdPartyAppInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchGetThirdPartyAppsInfo)
                return e;
            var t = new s.HttpResponseBodyBatchGetThirdPartyAppsInfo;
            if (e.appsInfo) {
                if (!Array.isArray(e.appsInfo))
                    throw TypeError(".HttpResponseBodyBatchGetThirdPartyAppsInfo.appsInfo: array expected");
                t.appsInfo = [];
                for (var n = 0; n < e.appsInfo.length; ++n) {
                    if ("object" !== typeof e.appsInfo[n])
                        throw TypeError(".HttpResponseBodyBatchGetThirdPartyAppsInfo.appsInfo: object expected");
                    t.appsInfo[n] = s.HttpResponseBodyGetThirdPartyAppInfo.fromObject(e.appsInfo[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.appsInfo = []),
            e.appsInfo && e.appsInfo.length) {
                n.appsInfo = [];
                for (var r = 0; r < e.appsInfo.length; ++r)
                    n.appsInfo[r] = s.HttpResponseBodyGetThirdPartyAppInfo.toObject(e.appsInfo[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyClickButtonActionCallbackUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationType = 0,
        e.prototype.conversationId = 0,
        e.prototype.messageId = "",
        e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(8).int32(e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(26).string(e.messageId),
            null != e.url && e.hasOwnProperty("url") && t.uint32(34).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyClickButtonActionCallbackUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationType = e.int32();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                case 3:
                    r.messageId = e.string();
                    break;
                case 4:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyClickButtonActionCallbackUrl)
                return e;
            var t = new s.HttpRequestBodyClickButtonActionCallbackUrl;
            switch (e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.conversationId = 0,
            n.messageId = "",
            n.url = ""),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyClickButtonActionCallbackUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyClickButtonActionCallbackUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyClickButtonActionCallbackUrl ? e : new s.HttpResponseBodyClickButtonActionCallbackUrl
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyClickServiceAccountMenu = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.menuId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.menuId && e.hasOwnProperty("menuId") && t.uint32(16).uint32(e.menuId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyClickServiceAccountMenu;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.menuId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyClickServiceAccountMenu)
                return e;
            var t = new s.HttpRequestBodyClickServiceAccountMenu;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.menuId && (t.menuId = e.menuId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.menuId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.menuId && e.hasOwnProperty("menuId") && (n.menuId = e.menuId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyClickServiceAccountMenu = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyClickServiceAccountMenu;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyClickServiceAccountMenu ? e : new s.HttpResponseBodyClickServiceAccountMenu
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGifHotWords = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGifHotWords;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetGifHotWords ? e : new s.HttpRequestBodyGetGifHotWords
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGifHotWords = function() {
        function e(e) {
            if (this.hotWords = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.hotWords = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.hotWords && e.hotWords.length)
                for (var n = 0; n < e.hotWords.length; ++n)
                    t.uint32(10).string(e.hotWords[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGifHotWords;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.hotWords && r.hotWords.length || (r.hotWords = []),
                    r.hotWords.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGifHotWords)
                return e;
            var t = new s.HttpResponseBodyGetGifHotWords;
            if (e.hotWords) {
                if (!Array.isArray(e.hotWords))
                    throw TypeError(".HttpResponseBodyGetGifHotWords.hotWords: array expected");
                t.hotWords = [];
                for (var n = 0; n < e.hotWords.length; ++n)
                    t.hotWords[n] = String(e.hotWords[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.hotWords = []),
            e.hotWords && e.hotWords.length) {
                n.hotWords = [];
                for (var r = 0; r < e.hotWords.length; ++r)
                    n.hotWords[r] = e.hotWords[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGifSearchSuggest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.key = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.key && e.hasOwnProperty("key") && t.uint32(10).string(e.key),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGifSearchSuggest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.key = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGifSearchSuggest)
                return e;
            var t = new s.HttpRequestBodyGetGifSearchSuggest;
            return null != e.key && (t.key = String(e.key)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.key = ""),
            null != e.key && e.hasOwnProperty("key") && (n.key = e.key),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGifSearchSuggest = function() {
        function e(e) {
            if (this.suggests = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.suggests = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.suggests && e.suggests.length)
                for (var n = 0; n < e.suggests.length; ++n)
                    t.uint32(10).string(e.suggests[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGifSearchSuggest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.suggests && r.suggests.length || (r.suggests = []),
                    r.suggests.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGifSearchSuggest)
                return e;
            var t = new s.HttpResponseBodyGetGifSearchSuggest;
            if (e.suggests) {
                if (!Array.isArray(e.suggests))
                    throw TypeError(".HttpResponseBodyGetGifSearchSuggest.suggests: array expected");
                t.suggests = [];
                for (var n = 0; n < e.suggests.length; ++n)
                    t.suggests[n] = String(e.suggests[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.suggests = []),
            e.suggests && e.suggests.length) {
                n.suggests = [];
                for (var r = 0; r < e.suggests.length; ++r)
                    n.suggests[r] = e.suggests[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGifSearchResults = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.key = "",
        e.prototype.offset = 0,
        e.prototype.limit = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.key && e.hasOwnProperty("key") && t.uint32(10).string(e.key),
            null != e.offset && e.hasOwnProperty("offset") && t.uint32(16).uint32(e.offset),
            null != e.limit && e.hasOwnProperty("limit") && t.uint32(24).uint32(e.limit),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGifSearchResults;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.key = e.string();
                    break;
                case 2:
                    r.offset = e.uint32();
                    break;
                case 3:
                    r.limit = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGifSearchResults)
                return e;
            var t = new s.HttpRequestBodyGifSearchResults;
            return null != e.key && (t.key = String(e.key)),
            null != e.offset && (t.offset = e.offset >>> 0),
            null != e.limit && (t.limit = e.limit >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.key = "",
            n.offset = 0,
            n.limit = 0),
            null != e.key && e.hasOwnProperty("key") && (n.key = e.key),
            null != e.offset && e.hasOwnProperty("offset") && (n.offset = e.offset),
            null != e.limit && e.hasOwnProperty("limit") && (n.limit = e.limit),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGifSearchResults = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.pagination = null,
        e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.pagination && e.hasOwnProperty("pagination") && s.HttpGifSearchPagination.encode(e.pagination, t.uint32(10).fork()).ldelim(),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpGifSearchItem.encode(e.items[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGifSearchResults;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.pagination = s.HttpGifSearchPagination.decode(e, e.uint32());
                    break;
                case 2:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpGifSearchItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGifSearchResults)
                return e;
            var t = new s.HttpResponseBodyGifSearchResults;
            if (null != e.pagination) {
                if ("object" !== typeof e.pagination)
                    throw TypeError(".HttpResponseBodyGifSearchResults.pagination: object expected");
                t.pagination = s.HttpGifSearchPagination.fromObject(e.pagination)
            }
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyGifSearchResults.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyGifSearchResults.items: object expected");
                    t.items[n] = s.HttpGifSearchItem.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.pagination = null),
            null != e.pagination && e.hasOwnProperty("pagination") && (n.pagination = s.HttpGifSearchPagination.toObject(e.pagination, t)),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpGifSearchItem.toObject(e.items[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetTopConversations = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetTopConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetTopConversations ? e : new s.HttpRequestBodyGetTopConversations
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetTopConversations = function() {
        function e(e) {
            if (this.conversations = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversations = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversations && e.conversations.length)
                for (var n = 0; n < e.conversations.length; ++n)
                    s.HttpTopConversation.encode(e.conversations[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetTopConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversations && r.conversations.length || (r.conversations = []),
                    r.conversations.push(s.HttpTopConversation.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetTopConversations)
                return e;
            var t = new s.HttpResponseBodyGetTopConversations;
            if (e.conversations) {
                if (!Array.isArray(e.conversations))
                    throw TypeError(".HttpResponseBodyGetTopConversations.conversations: array expected");
                t.conversations = [];
                for (var n = 0; n < e.conversations.length; ++n) {
                    if ("object" !== typeof e.conversations[n])
                        throw TypeError(".HttpResponseBodyGetTopConversations.conversations: object expected");
                    t.conversations[n] = s.HttpTopConversation.fromObject(e.conversations[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversations = []),
            e.conversations && e.conversations.length) {
                n.conversations = [];
                for (var r = 0; r < e.conversations.length; ++r)
                    n.conversations[r] = s.HttpTopConversation.toObject(e.conversations[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetExternalTopConversations = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetExternalTopConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetExternalTopConversations ? e : new s.HttpRequestBodyGetExternalTopConversations
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetExternalTopConversations = function() {
        function e(e) {
            if (this.conversations = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversations = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversations && e.conversations.length)
                for (var n = 0; n < e.conversations.length; ++n)
                    s.HttpTopConversation.encode(e.conversations[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetExternalTopConversations;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversations && r.conversations.length || (r.conversations = []),
                    r.conversations.push(s.HttpTopConversation.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetExternalTopConversations)
                return e;
            var t = new s.HttpResponseBodyGetExternalTopConversations;
            if (e.conversations) {
                if (!Array.isArray(e.conversations))
                    throw TypeError(".HttpResponseBodyGetExternalTopConversations.conversations: array expected");
                t.conversations = [];
                for (var n = 0; n < e.conversations.length; ++n) {
                    if ("object" !== typeof e.conversations[n])
                        throw TypeError(".HttpResponseBodyGetExternalTopConversations.conversations: object expected");
                    t.conversations[n] = s.HttpTopConversation.fromObject(e.conversations[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversations = []),
            e.conversations && e.conversations.length) {
                n.conversations = [];
                for (var r = 0; r < e.conversations.length; ++r)
                    n.conversations[r] = s.HttpTopConversation.toObject(e.conversations[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMySentRedpackets = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.index = 0,
        e.prototype.count = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.index && e.hasOwnProperty("index") && t.uint32(8).uint32(e.index),
            null != e.count && e.hasOwnProperty("count") && t.uint32(16).uint32(e.count),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMySentRedpackets;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.index = e.uint32();
                    break;
                case 2:
                    r.count = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetMySentRedpackets)
                return e;
            var t = new s.HttpRequestBodyGetMySentRedpackets;
            return null != e.index && (t.index = e.index >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.index = 0,
            n.count = 0),
            null != e.index && e.hasOwnProperty("index") && (n.index = e.index),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMySentRedpackets = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpRedpacketsSentItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMySentRedpackets;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpRedpacketsSentItem.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMySentRedpackets)
                return e;
            var t = new s.HttpResponseBodyGetMySentRedpackets;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyGetMySentRedpackets.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyGetMySentRedpackets.items: object expected");
                    t.items[n] = s.HttpRedpacketsSentItem.fromObject(e.items[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.hasMore = !1),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpRedpacketsSentItem.toObject(e.items[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyReceivedRedpackets = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.index = 0,
        e.prototype.count = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.index && e.hasOwnProperty("index") && t.uint32(8).uint32(e.index),
            null != e.count && e.hasOwnProperty("count") && t.uint32(16).uint32(e.count),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyReceivedRedpackets;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.index = e.uint32();
                    break;
                case 2:
                    r.count = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetMyReceivedRedpackets)
                return e;
            var t = new s.HttpRequestBodyGetMyReceivedRedpackets;
            return null != e.index && (t.index = e.index >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.index = 0,
            n.count = 0),
            null != e.index && e.hasOwnProperty("index") && (n.index = e.index),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyReceivedRedpackets = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpRedpacketReceivedItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyReceivedRedpackets;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpRedpacketReceivedItem.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyReceivedRedpackets)
                return e;
            var t = new s.HttpResponseBodyGetMyReceivedRedpackets;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyGetMyReceivedRedpackets.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyGetMyReceivedRedpackets.items: object expected");
                    t.items[n] = s.HttpRedpacketReceivedItem.fromObject(e.items[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.hasMore = !1),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpRedpacketReceivedItem.toObject(e.items[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetRedpacketSignature = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetRedpacketSignature;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetRedpacketSignature ? e : new s.HttpRequestBodyGetRedpacketSignature
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetRedpacketSignature = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.signature = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.signature && e.hasOwnProperty("signature") && t.uint32(10).string(e.signature),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(16).uint64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetRedpacketSignature;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.signature = e.string();
                    break;
                case 2:
                    r.timestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetRedpacketSignature)
                return e;
            var t = new s.HttpResponseBodyGetRedpacketSignature;
            return null != e.signature && (t.signature = String(e.signature)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.signature = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.signature && e.hasOwnProperty("signature") && (n.signature = e.signature),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRedpacketComment = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.comment = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.comment && e.hasOwnProperty("comment") && t.uint32(18).string(e.comment),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRedpacketComment;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.comment = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRedpacketComment)
                return e;
            var t = new s.HttpRequestBodyRedpacketComment;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.comment && (t.comment = String(e.comment)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.redpacketId = "",
            n.comment = ""),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.comment && e.hasOwnProperty("comment") && (n.comment = e.comment),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRedpacketComment = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRedpacketComment;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRedpacketComment ? e : new s.HttpResponseBodyRedpacketComment
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetRedpacketData = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetRedpacketData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetRedpacketData ? e : new s.HttpRequestBodyGetRedpacketData
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetRedpacketData = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.hasSentPrice = 0,
        e.prototype.hasSentCount = 0,
        e.prototype.hasReceivedPrice = 0,
        e.prototype.hasReceivedCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.hasSentPrice && e.hasOwnProperty("hasSentPrice") && t.uint32(8).uint32(e.hasSentPrice),
            null != e.hasSentCount && e.hasOwnProperty("hasSentCount") && t.uint32(16).uint32(e.hasSentCount),
            null != e.hasReceivedPrice && e.hasOwnProperty("hasReceivedPrice") && t.uint32(24).uint32(e.hasReceivedPrice),
            null != e.hasReceivedCount && e.hasOwnProperty("hasReceivedCount") && t.uint32(32).uint32(e.hasReceivedCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetRedpacketData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.hasSentPrice = e.uint32();
                    break;
                case 2:
                    r.hasSentCount = e.uint32();
                    break;
                case 3:
                    r.hasReceivedPrice = e.uint32();
                    break;
                case 4:
                    r.hasReceivedCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetRedpacketData)
                return e;
            var t = new s.HttpResponseBodyGetRedpacketData;
            return null != e.hasSentPrice && (t.hasSentPrice = e.hasSentPrice >>> 0),
            null != e.hasSentCount && (t.hasSentCount = e.hasSentCount >>> 0),
            null != e.hasReceivedPrice && (t.hasReceivedPrice = e.hasReceivedPrice >>> 0),
            null != e.hasReceivedCount && (t.hasReceivedCount = e.hasReceivedCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.hasSentPrice = 0,
            n.hasSentCount = 0,
            n.hasReceivedPrice = 0,
            n.hasReceivedCount = 0),
            null != e.hasSentPrice && e.hasOwnProperty("hasSentPrice") && (n.hasSentPrice = e.hasSentPrice),
            null != e.hasSentCount && e.hasOwnProperty("hasSentCount") && (n.hasSentCount = e.hasSentCount),
            null != e.hasReceivedPrice && e.hasOwnProperty("hasReceivedPrice") && (n.hasReceivedPrice = e.hasReceivedPrice),
            null != e.hasReceivedCount && e.hasOwnProperty("hasReceivedCount") && (n.hasReceivedCount = e.hasReceivedCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetRedpacketReceivedDetails = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.index = 0,
        e.prototype.count = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.index && e.hasOwnProperty("index") && t.uint32(16).uint32(e.index),
            null != e.count && e.hasOwnProperty("count") && t.uint32(24).uint32(e.count),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetRedpacketReceivedDetails;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.index = e.uint32();
                    break;
                case 3:
                    r.count = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetRedpacketReceivedDetails)
                return e;
            var t = new s.HttpRequestBodyGetRedpacketReceivedDetails;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.index && (t.index = e.index >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.redpacketId = "",
            n.index = 0,
            n.count = 0),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.index && e.hasOwnProperty("index") && (n.index = e.index),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetRedpacketReceivedDetails = function() {
        function e(e) {
            if (this.receivers = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketType = 0,
        e.prototype.senderId = 0,
        e.prototype.description = "",
        e.prototype.totalCount = 0,
        e.prototype.totalPrice = 0,
        e.prototype.hasReveivedCount = 0,
        e.prototype.hasReceivedPrice = 0,
        e.prototype.myReceivedPrice = 0,
        e.prototype.hasExpired = !1,
        e.prototype.bestReceiverId = 0,
        e.prototype.redpacketCreateTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.redpacketLastReceivedTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.receivers = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(8).int32(e.redpacketType),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(16).uint32(e.senderId),
            null != e.description && e.hasOwnProperty("description") && t.uint32(26).string(e.description),
            null != e.totalCount && e.hasOwnProperty("totalCount") && t.uint32(32).uint32(e.totalCount),
            null != e.totalPrice && e.hasOwnProperty("totalPrice") && t.uint32(40).uint32(e.totalPrice),
            null != e.hasReveivedCount && e.hasOwnProperty("hasReveivedCount") && t.uint32(48).uint32(e.hasReveivedCount),
            null != e.hasReceivedPrice && e.hasOwnProperty("hasReceivedPrice") && t.uint32(56).uint32(e.hasReceivedPrice),
            null != e.myReceivedPrice && e.hasOwnProperty("myReceivedPrice") && t.uint32(64).uint32(e.myReceivedPrice),
            null != e.hasExpired && e.hasOwnProperty("hasExpired") && t.uint32(72).bool(e.hasExpired),
            null != e.bestReceiverId && e.hasOwnProperty("bestReceiverId") && t.uint32(80).uint32(e.bestReceiverId),
            null != e.redpacketCreateTimestamp && e.hasOwnProperty("redpacketCreateTimestamp") && t.uint32(88).uint64(e.redpacketCreateTimestamp),
            null != e.redpacketLastReceivedTimestamp && e.hasOwnProperty("redpacketLastReceivedTimestamp") && t.uint32(96).uint64(e.redpacketLastReceivedTimestamp),
            null != e.receivers && e.receivers.length)
                for (var n = 0; n < e.receivers.length; ++n)
                    s.HttpRedpacketReceiver.encode(e.receivers[n], t.uint32(106).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(112).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetRedpacketReceivedDetails;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketType = e.int32();
                    break;
                case 2:
                    r.senderId = e.uint32();
                    break;
                case 3:
                    r.description = e.string();
                    break;
                case 4:
                    r.totalCount = e.uint32();
                    break;
                case 5:
                    r.totalPrice = e.uint32();
                    break;
                case 6:
                    r.hasReveivedCount = e.uint32();
                    break;
                case 7:
                    r.hasReceivedPrice = e.uint32();
                    break;
                case 8:
                    r.myReceivedPrice = e.uint32();
                    break;
                case 9:
                    r.hasExpired = e.bool();
                    break;
                case 10:
                    r.bestReceiverId = e.uint32();
                    break;
                case 11:
                    r.redpacketCreateTimestamp = e.uint64();
                    break;
                case 12:
                    r.redpacketLastReceivedTimestamp = e.uint64();
                    break;
                case 13:
                    r.receivers && r.receivers.length || (r.receivers = []),
                    r.receivers.push(s.HttpRedpacketReceiver.decode(e, e.uint32()));
                    break;
                case 14:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetRedpacketReceivedDetails)
                return e;
            var t = new s.HttpResponseBodyGetRedpacketReceivedDetails;
            switch (e.redpacketType) {
            case "CommonRedpacketTypeUndefined":
            case 0:
                t.redpacketType = 0;
                break;
            case "CommonRedpacketTypePersonal":
            case 1:
                t.redpacketType = 1;
                break;
            case "CommonRedpacketTypeGroupNormal":
            case 2:
                t.redpacketType = 2;
                break;
            case "CommonRedpacketTypeGroupRandom":
            case 3:
                t.redpacketType = 3;
                break
            }
            if (null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.description && (t.description = String(e.description)),
            null != e.totalCount && (t.totalCount = e.totalCount >>> 0),
            null != e.totalPrice && (t.totalPrice = e.totalPrice >>> 0),
            null != e.hasReveivedCount && (t.hasReveivedCount = e.hasReveivedCount >>> 0),
            null != e.hasReceivedPrice && (t.hasReceivedPrice = e.hasReceivedPrice >>> 0),
            null != e.myReceivedPrice && (t.myReceivedPrice = e.myReceivedPrice >>> 0),
            null != e.hasExpired && (t.hasExpired = Boolean(e.hasExpired)),
            null != e.bestReceiverId && (t.bestReceiverId = e.bestReceiverId >>> 0),
            null != e.redpacketCreateTimestamp && (a.Long ? (t.redpacketCreateTimestamp = a.Long.fromValue(e.redpacketCreateTimestamp)).unsigned = !0 : "string" === typeof e.redpacketCreateTimestamp ? t.redpacketCreateTimestamp = parseInt(e.redpacketCreateTimestamp, 10) : "number" === typeof e.redpacketCreateTimestamp ? t.redpacketCreateTimestamp = e.redpacketCreateTimestamp : "object" === typeof e.redpacketCreateTimestamp && (t.redpacketCreateTimestamp = new a.LongBits(e.redpacketCreateTimestamp.low >>> 0,e.redpacketCreateTimestamp.high >>> 0).toNumber(!0))),
            null != e.redpacketLastReceivedTimestamp && (a.Long ? (t.redpacketLastReceivedTimestamp = a.Long.fromValue(e.redpacketLastReceivedTimestamp)).unsigned = !0 : "string" === typeof e.redpacketLastReceivedTimestamp ? t.redpacketLastReceivedTimestamp = parseInt(e.redpacketLastReceivedTimestamp, 10) : "number" === typeof e.redpacketLastReceivedTimestamp ? t.redpacketLastReceivedTimestamp = e.redpacketLastReceivedTimestamp : "object" === typeof e.redpacketLastReceivedTimestamp && (t.redpacketLastReceivedTimestamp = new a.LongBits(e.redpacketLastReceivedTimestamp.low >>> 0,e.redpacketLastReceivedTimestamp.high >>> 0).toNumber(!0))),
            e.receivers) {
                if (!Array.isArray(e.receivers))
                    throw TypeError(".HttpResponseBodyGetRedpacketReceivedDetails.receivers: array expected");
                t.receivers = [];
                for (var n = 0; n < e.receivers.length; ++n) {
                    if ("object" !== typeof e.receivers[n])
                        throw TypeError(".HttpResponseBodyGetRedpacketReceivedDetails.receivers: object expected");
                    t.receivers[n] = s.HttpRedpacketReceiver.fromObject(e.receivers[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.receivers = []),
            t.defaults) {
                if (n.redpacketType = t.enums === String ? "CommonRedpacketTypeUndefined" : 0,
                n.senderId = 0,
                n.description = "",
                n.totalCount = 0,
                n.totalPrice = 0,
                n.hasReveivedCount = 0,
                n.hasReceivedPrice = 0,
                n.myReceivedPrice = 0,
                n.hasExpired = !1,
                n.bestReceiverId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.redpacketCreateTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.redpacketCreateTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.redpacketLastReceivedTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.redpacketLastReceivedTimestamp = t.longs === String ? "0" : 0;
                n.hasMore = !1
            }
            if (null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = t.enums === String ? s.CommonRedpacketType[e.redpacketType] : e.redpacketType),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.totalCount && e.hasOwnProperty("totalCount") && (n.totalCount = e.totalCount),
            null != e.totalPrice && e.hasOwnProperty("totalPrice") && (n.totalPrice = e.totalPrice),
            null != e.hasReveivedCount && e.hasOwnProperty("hasReveivedCount") && (n.hasReveivedCount = e.hasReveivedCount),
            null != e.hasReceivedPrice && e.hasOwnProperty("hasReceivedPrice") && (n.hasReceivedPrice = e.hasReceivedPrice),
            null != e.myReceivedPrice && e.hasOwnProperty("myReceivedPrice") && (n.myReceivedPrice = e.myReceivedPrice),
            null != e.hasExpired && e.hasOwnProperty("hasExpired") && (n.hasExpired = e.hasExpired),
            null != e.bestReceiverId && e.hasOwnProperty("bestReceiverId") && (n.bestReceiverId = e.bestReceiverId),
            null != e.redpacketCreateTimestamp && e.hasOwnProperty("redpacketCreateTimestamp") && ("number" === typeof e.redpacketCreateTimestamp ? n.redpacketCreateTimestamp = t.longs === String ? String(e.redpacketCreateTimestamp) : e.redpacketCreateTimestamp : n.redpacketCreateTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.redpacketCreateTimestamp) : t.longs === Number ? new a.LongBits(e.redpacketCreateTimestamp.low >>> 0,e.redpacketCreateTimestamp.high >>> 0).toNumber(!0) : e.redpacketCreateTimestamp),
            null != e.redpacketLastReceivedTimestamp && e.hasOwnProperty("redpacketLastReceivedTimestamp") && ("number" === typeof e.redpacketLastReceivedTimestamp ? n.redpacketLastReceivedTimestamp = t.longs === String ? String(e.redpacketLastReceivedTimestamp) : e.redpacketLastReceivedTimestamp : n.redpacketLastReceivedTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.redpacketLastReceivedTimestamp) : t.longs === Number ? new a.LongBits(e.redpacketLastReceivedTimestamp.low >>> 0,e.redpacketLastReceivedTimestamp.high >>> 0).toNumber(!0) : e.redpacketLastReceivedTimestamp),
            e.receivers && e.receivers.length) {
                n.receivers = [];
                for (var o = 0; o < e.receivers.length; ++o)
                    n.receivers[o] = s.HttpRedpacketReceiver.toObject(e.receivers[o], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendRedpacket = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.userId = 0,
        e.prototype.groupId = 0,
        e.prototype.price = 0,
        e.prototype.redpacketType = 0,
        e.prototype.description = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.prototype.count = 0,
        e.prototype.isPrivate = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(16).int32(e.userId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(24).int32(e.groupId),
            null != e.price && e.hasOwnProperty("price") && t.uint32(32).int32(e.price),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(40).int32(e.redpacketType),
            null != e.description && e.hasOwnProperty("description") && t.uint32(50).string(e.description),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(56).int64(e.timestamp),
            null != e.count && e.hasOwnProperty("count") && t.uint32(64).int32(e.count),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && t.uint32(72).bool(e.isPrivate),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendRedpacket;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.userId = e.int32();
                    break;
                case 3:
                    r.groupId = e.int32();
                    break;
                case 4:
                    r.price = e.int32();
                    break;
                case 5:
                    r.redpacketType = e.int32();
                    break;
                case 6:
                    r.description = e.string();
                    break;
                case 7:
                    r.timestamp = e.int64();
                    break;
                case 8:
                    r.count = e.int32();
                    break;
                case 9:
                    r.isPrivate = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendRedpacket)
                return e;
            var t = new s.HttpRequestBodySendRedpacket;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.userId && (t.userId = 0 | e.userId),
            null != e.groupId && (t.groupId = 0 | e.groupId),
            null != e.price && (t.price = 0 | e.price),
            null != e.redpacketType && (t.redpacketType = 0 | e.redpacketType),
            null != e.description && (t.description = String(e.description)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !1 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber())),
            null != e.count && (t.count = 0 | e.count),
            null != e.isPrivate && (t.isPrivate = Boolean(e.isPrivate)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.redpacketId = "",
                n.userId = 0,
                n.groupId = 0,
                n.price = 0,
                n.redpacketType = 0,
                n.description = "",
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.count = 0,
                n.isPrivate = !1
            }
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = e.redpacketType),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber() : e.timestamp),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && (n.isPrivate = e.isPrivate),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendRedpacket = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendRedpacket;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySendRedpacket ? e : new s.HttpResponseBodySendRedpacket
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGrabRedpacket = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.price = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.prototype.totalPrice = 0,
        e.prototype.totalCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.price && e.hasOwnProperty("price") && t.uint32(16).int32(e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(24).int64(e.timestamp),
            null != e.totalPrice && e.hasOwnProperty("totalPrice") && t.uint32(32).int32(e.totalPrice),
            null != e.totalCount && e.hasOwnProperty("totalCount") && t.uint32(40).int32(e.totalCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGrabRedpacket;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.price = e.int32();
                    break;
                case 3:
                    r.timestamp = e.int64();
                    break;
                case 4:
                    r.totalPrice = e.int32();
                    break;
                case 5:
                    r.totalCount = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGrabRedpacket)
                return e;
            var t = new s.HttpRequestBodyGrabRedpacket;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.price && (t.price = 0 | e.price),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !1 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber())),
            null != e.totalPrice && (t.totalPrice = 0 | e.totalPrice),
            null != e.totalCount && (t.totalCount = 0 | e.totalCount),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.redpacketId = "",
                n.price = 0,
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.totalPrice = 0,
                n.totalCount = 0
            }
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber() : e.timestamp),
            null != e.totalPrice && e.hasOwnProperty("totalPrice") && (n.totalPrice = e.totalPrice),
            null != e.totalCount && e.hasOwnProperty("totalCount") && (n.totalCount = e.totalCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGrabRedpacket = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGrabRedpacket;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGrabRedpacket ? e : new s.HttpResponseBodyGrabRedpacket
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetRedpacketExpired = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.prototype.price = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(16).int64(e.timestamp),
            null != e.price && e.hasOwnProperty("price") && t.uint32(24).int32(e.price),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetRedpacketExpired;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.timestamp = e.int64();
                    break;
                case 3:
                    r.price = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetRedpacketExpired)
                return e;
            var t = new s.HttpRequestBodySetRedpacketExpired;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !1 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber())),
            null != e.price && (t.price = 0 | e.price),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.redpacketId = "",
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.price = 0
            }
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber() : e.timestamp),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetRedpacketExpired = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetRedpacketExpired;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetRedpacketExpired ? e : new s.HttpResponseBodySetRedpacketExpired
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetJRMFRedpacketSignature = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetJRMFRedpacketSignature;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetJRMFRedpacketSignature ? e : new s.HttpRequestBodyGetJRMFRedpacketSignature
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetJRMFRedpacketSignature = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.signature = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.signature && e.hasOwnProperty("signature") && t.uint32(10).string(e.signature),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetJRMFRedpacketSignature;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.signature = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetJRMFRedpacketSignature)
                return e;
            var t = new s.HttpResponseBodyGetJRMFRedpacketSignature;
            return null != e.signature && (t.signature = String(e.signature)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.signature = ""),
            null != e.signature && e.hasOwnProperty("signature") && (n.signature = e.signature),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendTransfer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.transferId = "",
        e.prototype.receiverId = 0,
        e.prototype.price = 0,
        e.prototype.description = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.transferId && e.hasOwnProperty("transferId") && t.uint32(10).string(e.transferId),
            null != e.receiverId && e.hasOwnProperty("receiverId") && t.uint32(16).int32(e.receiverId),
            null != e.price && e.hasOwnProperty("price") && t.uint32(24).int32(e.price),
            null != e.description && e.hasOwnProperty("description") && t.uint32(34).string(e.description),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(40).int64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendTransfer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.transferId = e.string();
                    break;
                case 2:
                    r.receiverId = e.int32();
                    break;
                case 3:
                    r.price = e.int32();
                    break;
                case 4:
                    r.description = e.string();
                    break;
                case 5:
                    r.timestamp = e.int64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendTransfer)
                return e;
            var t = new s.HttpRequestBodySendTransfer;
            return null != e.transferId && (t.transferId = String(e.transferId)),
            null != e.receiverId && (t.receiverId = 0 | e.receiverId),
            null != e.price && (t.price = 0 | e.price),
            null != e.description && (t.description = String(e.description)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !1 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber())),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.transferId = "",
                n.receiverId = 0,
                n.price = 0,
                n.description = "",
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.transferId && e.hasOwnProperty("transferId") && (n.transferId = e.transferId),
            null != e.receiverId && e.hasOwnProperty("receiverId") && (n.receiverId = e.receiverId),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber() : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendTransfer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendTransfer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySendTransfer ? e : new s.HttpResponseBodySendTransfer
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyReceiveTransfer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.transferId = "",
        e.prototype.processingStatus = 0,
        e.prototype.price = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.transferId && e.hasOwnProperty("transferId") && t.uint32(10).string(e.transferId),
            null != e.processingStatus && e.hasOwnProperty("processingStatus") && t.uint32(16).int32(e.processingStatus),
            null != e.price && e.hasOwnProperty("price") && t.uint32(24).int32(e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(32).int64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyReceiveTransfer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.transferId = e.string();
                    break;
                case 2:
                    r.processingStatus = e.int32();
                    break;
                case 3:
                    r.price = e.int32();
                    break;
                case 4:
                    r.timestamp = e.int64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyReceiveTransfer)
                return e;
            var t = new s.HttpRequestBodyReceiveTransfer;
            return null != e.transferId && (t.transferId = String(e.transferId)),
            null != e.processingStatus && (t.processingStatus = 0 | e.processingStatus),
            null != e.price && (t.price = 0 | e.price),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !1 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber())),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.transferId = "",
                n.processingStatus = 0,
                n.price = 0,
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.transferId && e.hasOwnProperty("transferId") && (n.transferId = e.transferId),
            null != e.processingStatus && e.hasOwnProperty("processingStatus") && (n.processingStatus = e.processingStatus),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber() : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyReceiveTransfer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyReceiveTransfer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyReceiveTransfer ? e : new s.HttpResponseBodyReceiveTransfer
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateVote = function() {
        function e(e) {
            if (this.options = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.title = "",
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.options = a.emptyArray,
        e.prototype.anonymous = !1,
        e.prototype.open = !1,
        e.prototype.selectCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(24).uint64(e.endTimestamp),
            null != e.options && e.options.length)
                for (var n = 0; n < e.options.length; ++n)
                    s.CommonVoteOption.encode(e.options[n], t.uint32(34).fork()).ldelim();
            return null != e.anonymous && e.hasOwnProperty("anonymous") && t.uint32(40).bool(e.anonymous),
            null != e.open && e.hasOwnProperty("open") && t.uint32(48).bool(e.open),
            null != e.selectCount && e.hasOwnProperty("selectCount") && t.uint32(56).uint32(e.selectCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.endTimestamp = e.uint64();
                    break;
                case 4:
                    r.options && r.options.length || (r.options = []),
                    r.options.push(s.CommonVoteOption.decode(e, e.uint32()));
                    break;
                case 5:
                    r.anonymous = e.bool();
                    break;
                case 6:
                    r.open = e.bool();
                    break;
                case 7:
                    r.selectCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateVote)
                return e;
            var t = new s.HttpRequestBodyCreateVote;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.title && (t.title = String(e.title)),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            e.options) {
                if (!Array.isArray(e.options))
                    throw TypeError(".HttpRequestBodyCreateVote.options: array expected");
                t.options = [];
                for (var n = 0; n < e.options.length; ++n) {
                    if ("object" !== typeof e.options[n])
                        throw TypeError(".HttpRequestBodyCreateVote.options: object expected");
                    t.options[n] = s.CommonVoteOption.fromObject(e.options[n])
                }
            }
            return null != e.anonymous && (t.anonymous = Boolean(e.anonymous)),
            null != e.open && (t.open = Boolean(e.open)),
            null != e.selectCount && (t.selectCount = e.selectCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.options = []),
            t.defaults) {
                if (n.groupId = 0,
                n.title = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.anonymous = !1,
                n.open = !1,
                n.selectCount = 0
            }
            if (null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            e.options && e.options.length) {
                n.options = [];
                for (var o = 0; o < e.options.length; ++o)
                    n.options[o] = s.CommonVoteOption.toObject(e.options[o], t)
            }
            return null != e.anonymous && e.hasOwnProperty("anonymous") && (n.anonymous = e.anonymous),
            null != e.open && e.hasOwnProperty("open") && (n.open = e.open),
            null != e.selectCount && e.hasOwnProperty("selectCount") && (n.selectCount = e.selectCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateVote)
                return e;
            var t = new s.HttpResponseBodyCreateVote;
            return null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
            return null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetVote)
                return e;
            var t = new s.HttpRequestBodyGetVote;
            return null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
            return null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetVote = function() {
        function e(e) {
            if (this.detailOptions = [],
            this.myVoteOptionIds = [],
            this.notVoteMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.senderId = 0,
        e.prototype.senderName = "",
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.title = "",
        e.prototype.anonymous = !1,
        e.prototype.open = !1,
        e.prototype.selectCount = 0,
        e.prototype.detailOptions = a.emptyArray,
        e.prototype.myVoteOptionIds = a.emptyArray,
        e.prototype.voteMemberCount = 0,
        e.prototype.notVoteMemberCount = 0,
        e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype["delete"] = !1,
        e.prototype.version = 0,
        e.prototype.notVoteMemberIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(16).uint32(e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(26).string(e.senderName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(32).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(40).uint64(e.endTimestamp),
            null != e.title && e.hasOwnProperty("title") && t.uint32(50).string(e.title),
            null != e.anonymous && e.hasOwnProperty("anonymous") && t.uint32(56).bool(e.anonymous),
            null != e.open && e.hasOwnProperty("open") && t.uint32(64).bool(e.open),
            null != e.selectCount && e.hasOwnProperty("selectCount") && t.uint32(72).uint32(e.selectCount),
            null != e.detailOptions && e.detailOptions.length)
                for (var n = 0; n < e.detailOptions.length; ++n)
                    s.CommonVoteOptionDetail.encode(e.detailOptions[n], t.uint32(82).fork()).ldelim();
            if (null != e.myVoteOptionIds && e.myVoteOptionIds.length) {
                t.uint32(90).fork();
                for (n = 0; n < e.myVoteOptionIds.length; ++n)
                    t.uint32(e.myVoteOptionIds[n]);
                t.ldelim()
            }
            if (null != e.voteMemberCount && e.hasOwnProperty("voteMemberCount") && t.uint32(96).uint32(e.voteMemberCount),
            null != e.notVoteMemberCount && e.hasOwnProperty("notVoteMemberCount") && t.uint32(104).uint32(e.notVoteMemberCount),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(112).uint64(e.voteId),
            null != e["delete"] && e.hasOwnProperty("delete") && t.uint32(120).bool(e["delete"]),
            null != e.version && e.hasOwnProperty("version") && t.uint32(128).uint32(e.version),
            null != e.notVoteMemberIds && e.notVoteMemberIds.length) {
                t.uint32(138).fork();
                for (n = 0; n < e.notVoteMemberIds.length; ++n)
                    t.uint32(e.notVoteMemberIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.senderId = e.uint32();
                    break;
                case 3:
                    r.senderName = e.string();
                    break;
                case 4:
                    r.startTimestamp = e.uint64();
                    break;
                case 5:
                    r.endTimestamp = e.uint64();
                    break;
                case 6:
                    r.title = e.string();
                    break;
                case 7:
                    r.anonymous = e.bool();
                    break;
                case 8:
                    r.open = e.bool();
                    break;
                case 9:
                    r.selectCount = e.uint32();
                    break;
                case 10:
                    r.detailOptions && r.detailOptions.length || (r.detailOptions = []),
                    r.detailOptions.push(s.CommonVoteOptionDetail.decode(e, e.uint32()));
                    break;
                case 11:
                    if (r.myVoteOptionIds && r.myVoteOptionIds.length || (r.myVoteOptionIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.myVoteOptionIds.push(e.uint32())
                    } else
                        r.myVoteOptionIds.push(e.uint32());
                    break;
                case 12:
                    r.voteMemberCount = e.uint32();
                    break;
                case 13:
                    r.notVoteMemberCount = e.uint32();
                    break;
                case 14:
                    r.voteId = e.uint64();
                    break;
                case 15:
                    r["delete"] = e.bool();
                    break;
                case 16:
                    r.version = e.uint32();
                    break;
                case 17:
                    if (r.notVoteMemberIds && r.notVoteMemberIds.length || (r.notVoteMemberIds = []),
                    2 === (7 & i)) {
                        a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.notVoteMemberIds.push(e.uint32())
                    } else
                        r.notVoteMemberIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetVote)
                return e;
            var t = new s.HttpResponseBodyGetVote;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.title && (t.title = String(e.title)),
            null != e.anonymous && (t.anonymous = Boolean(e.anonymous)),
            null != e.open && (t.open = Boolean(e.open)),
            null != e.selectCount && (t.selectCount = e.selectCount >>> 0),
            e.detailOptions) {
                if (!Array.isArray(e.detailOptions))
                    throw TypeError(".HttpResponseBodyGetVote.detailOptions: array expected");
                t.detailOptions = [];
                for (var n = 0; n < e.detailOptions.length; ++n) {
                    if ("object" !== typeof e.detailOptions[n])
                        throw TypeError(".HttpResponseBodyGetVote.detailOptions: object expected");
                    t.detailOptions[n] = s.CommonVoteOptionDetail.fromObject(e.detailOptions[n])
                }
            }
            if (e.myVoteOptionIds) {
                if (!Array.isArray(e.myVoteOptionIds))
                    throw TypeError(".HttpResponseBodyGetVote.myVoteOptionIds: array expected");
                t.myVoteOptionIds = [];
                for (n = 0; n < e.myVoteOptionIds.length; ++n)
                    t.myVoteOptionIds[n] = e.myVoteOptionIds[n] >>> 0
            }
            if (null != e.voteMemberCount && (t.voteMemberCount = e.voteMemberCount >>> 0),
            null != e.notVoteMemberCount && (t.notVoteMemberCount = e.notVoteMemberCount >>> 0),
            null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            null != e["delete"] && (t["delete"] = Boolean(e["delete"])),
            null != e.version && (t.version = e.version >>> 0),
            e.notVoteMemberIds) {
                if (!Array.isArray(e.notVoteMemberIds))
                    throw TypeError(".HttpResponseBodyGetVote.notVoteMemberIds: array expected");
                t.notVoteMemberIds = [];
                for (n = 0; n < e.notVoteMemberIds.length; ++n)
                    t.notVoteMemberIds[n] = e.notVoteMemberIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.detailOptions = [],
            n.myVoteOptionIds = [],
            n.notVoteMemberIds = []),
            t.defaults) {
                if (n.groupId = 0,
                n.senderId = 0,
                n.senderName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                if (n.title = "",
                n.anonymous = !1,
                n.open = !1,
                n.selectCount = 0,
                n.voteMemberCount = 0,
                n.notVoteMemberCount = 0,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                n["delete"] = !1,
                n.version = 0
            }
            if (null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.anonymous && e.hasOwnProperty("anonymous") && (n.anonymous = e.anonymous),
            null != e.open && e.hasOwnProperty("open") && (n.open = e.open),
            null != e.selectCount && e.hasOwnProperty("selectCount") && (n.selectCount = e.selectCount),
            e.detailOptions && e.detailOptions.length) {
                n.detailOptions = [];
                for (var o = 0; o < e.detailOptions.length; ++o)
                    n.detailOptions[o] = s.CommonVoteOptionDetail.toObject(e.detailOptions[o], t)
            }
            if (e.myVoteOptionIds && e.myVoteOptionIds.length) {
                n.myVoteOptionIds = [];
                for (o = 0; o < e.myVoteOptionIds.length; ++o)
                    n.myVoteOptionIds[o] = e.myVoteOptionIds[o]
            }
            if (null != e.voteMemberCount && e.hasOwnProperty("voteMemberCount") && (n.voteMemberCount = e.voteMemberCount),
            null != e.notVoteMemberCount && e.hasOwnProperty("notVoteMemberCount") && (n.notVoteMemberCount = e.notVoteMemberCount),
            null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            null != e["delete"] && e.hasOwnProperty("delete") && (n["delete"] = e["delete"]),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            e.notVoteMemberIds && e.notVoteMemberIds.length) {
                n.notVoteMemberIds = [];
                for (o = 0; o < e.notVoteMemberIds.length; ++o)
                    n.notVoteMemberIds[o] = e.notVoteMemberIds[o]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendVote = function() {
        function e(e) {
            if (this.optionIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.optionIds = a.emptyArray,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            null != e.optionIds && e.optionIds.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.optionIds.length; ++n)
                    t.uint32(e.optionIds[n]);
                t.ldelim()
            }
            return null != e.version && e.hasOwnProperty("version") && t.uint32(24).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                case 2:
                    if (r.optionIds && r.optionIds.length || (r.optionIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.optionIds.push(e.uint32())
                    } else
                        r.optionIds.push(e.uint32());
                    break;
                case 3:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendVote)
                return e;
            var t = new s.HttpRequestBodySendVote;
            if (null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            e.optionIds) {
                if (!Array.isArray(e.optionIds))
                    throw TypeError(".HttpRequestBodySendVote.optionIds: array expected");
                t.optionIds = [];
                for (var n = 0; n < e.optionIds.length; ++n)
                    t.optionIds[n] = e.optionIds[n] >>> 0
            }
            return null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.optionIds = []),
            t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                n.version = 0
            }
            if (null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            e.optionIds && e.optionIds.length) {
                n.optionIds = [];
                for (var o = 0; o < e.optionIds.length; ++o)
                    n.optionIds[o] = e.optionIds[o]
            }
            return null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySendVote ? e : new s.HttpResponseBodySendVote
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteVote)
                return e;
            var t = new s.HttpRequestBodyDeleteVote;
            return null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
            return null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyDeleteVote ? e : new s.HttpResponseBodyDeleteVote
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyFinishVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyFinishVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyFinishVote)
                return e;
            var t = new s.HttpRequestBodyFinishVote;
            return null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
            return null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyFinishVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyFinishVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyFinishVote ? e : new s.HttpResponseBodyFinishVote
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyResendVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyResendVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyResendVote)
                return e;
            var t = new s.HttpRequestBodyResendVote;
            return null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
            return null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyResendVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyResendVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyResendVote ? e : new s.HttpResponseBodyResendVote
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateVote = function() {
        function e(e) {
            if (this.options = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.title = "",
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.anonymous = !1,
        e.prototype.open = !1,
        e.prototype.options = a.emptyArray,
        e.prototype.selectCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(24).uint64(e.endTimestamp),
            null != e.anonymous && e.hasOwnProperty("anonymous") && t.uint32(32).bool(e.anonymous),
            null != e.open && e.hasOwnProperty("open") && t.uint32(40).bool(e.open),
            null != e.options && e.options.length)
                for (var n = 0; n < e.options.length; ++n)
                    s.CommonVoteOption.encode(e.options[n], t.uint32(50).fork()).ldelim();
            return null != e.selectCount && e.hasOwnProperty("selectCount") && t.uint32(56).uint32(e.selectCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.endTimestamp = e.uint64();
                    break;
                case 4:
                    r.anonymous = e.bool();
                    break;
                case 5:
                    r.open = e.bool();
                    break;
                case 6:
                    r.options && r.options.length || (r.options = []),
                    r.options.push(s.CommonVoteOption.decode(e, e.uint32()));
                    break;
                case 7:
                    r.selectCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateVote)
                return e;
            var t = new s.HttpRequestBodyUpdateVote;
            if (null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            null != e.title && (t.title = String(e.title)),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.anonymous && (t.anonymous = Boolean(e.anonymous)),
            null != e.open && (t.open = Boolean(e.open)),
            e.options) {
                if (!Array.isArray(e.options))
                    throw TypeError(".HttpRequestBodyUpdateVote.options: array expected");
                t.options = [];
                for (var n = 0; n < e.options.length; ++n) {
                    if ("object" !== typeof e.options[n])
                        throw TypeError(".HttpRequestBodyUpdateVote.options: object expected");
                    t.options[n] = s.CommonVoteOption.fromObject(e.options[n])
                }
            }
            return null != e.selectCount && (t.selectCount = e.selectCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.options = []),
            t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                if (n.title = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.anonymous = !1,
                n.open = !1,
                n.selectCount = 0
            }
            if (null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.anonymous && e.hasOwnProperty("anonymous") && (n.anonymous = e.anonymous),
            null != e.open && e.hasOwnProperty("open") && (n.open = e.open),
            e.options && e.options.length) {
                n.options = [];
                for (var o = 0; o < e.options.length; ++o)
                    n.options[o] = s.CommonVoteOption.toObject(e.options[o], t)
            }
            return null != e.selectCount && e.hasOwnProperty("selectCount") && (n.selectCount = e.selectCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateVote = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUpdateVote ? e : new s.HttpResponseBodyUpdateVote
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetVoteOptionMembers = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.optionId = 0,
        e.prototype.offset = 0,
        e.prototype.limit = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            null != e.optionId && e.hasOwnProperty("optionId") && t.uint32(16).uint32(e.optionId),
            null != e.offset && e.hasOwnProperty("offset") && t.uint32(24).uint32(e.offset),
            null != e.limit && e.hasOwnProperty("limit") && t.uint32(32).uint32(e.limit),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetVoteOptionMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                case 2:
                    r.optionId = e.uint32();
                    break;
                case 3:
                    r.offset = e.uint32();
                    break;
                case 4:
                    r.limit = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetVoteOptionMembers)
                return e;
            var t = new s.HttpRequestBodyGetVoteOptionMembers;
            return null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            null != e.optionId && (t.optionId = e.optionId >>> 0),
            null != e.offset && (t.offset = e.offset >>> 0),
            null != e.limit && (t.limit = e.limit >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                n.optionId = 0,
                n.offset = 0,
                n.limit = 0
            }
            return null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            null != e.optionId && e.hasOwnProperty("optionId") && (n.optionId = e.optionId),
            null != e.offset && e.hasOwnProperty("offset") && (n.offset = e.offset),
            null != e.limit && e.hasOwnProperty("limit") && (n.limit = e.limit),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetVoteOptionMembers = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.hasMore = !1,
        e.prototype["delete"] = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.HttpGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            null != e["delete"] && e.hasOwnProperty("delete") && t.uint32(24).bool(e["delete"]),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetVoteOptionMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.HttpGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                case 3:
                    r["delete"] = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetVoteOptionMembers)
                return e;
            var t = new s.HttpResponseBodyGetVoteOptionMembers;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".HttpResponseBodyGetVoteOptionMembers.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".HttpResponseBodyGetVoteOptionMembers.members: object expected");
                    t.members[n] = s.HttpGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            null != e["delete"] && (t["delete"] = Boolean(e["delete"])),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults && (n.hasMore = !1,
            n["delete"] = !1),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.HttpGroupMember.toObject(e.members[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            null != e["delete"] && e.hasOwnProperty("delete") && (n["delete"] = e["delete"]),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetAppLoginUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appId = "",
        e.prototype.iosBundleId = "",
        e.prototype.androidBundleId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(10).string(e.appId),
            null != e.iosBundleId && e.hasOwnProperty("iosBundleId") && t.uint32(18).string(e.iosBundleId),
            null != e.androidBundleId && e.hasOwnProperty("androidBundleId") && t.uint32(26).string(e.androidBundleId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetAppLoginUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appId = e.string();
                    break;
                case 2:
                    r.iosBundleId = e.string();
                    break;
                case 3:
                    r.androidBundleId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetAppLoginUrl)
                return e;
            var t = new s.HttpRequestBodyGetAppLoginUrl;
            return null != e.appId && (t.appId = String(e.appId)),
            null != e.iosBundleId && (t.iosBundleId = String(e.iosBundleId)),
            null != e.androidBundleId && (t.androidBundleId = String(e.androidBundleId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appId = "",
            n.iosBundleId = "",
            n.androidBundleId = ""),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.iosBundleId && e.hasOwnProperty("iosBundleId") && (n.iosBundleId = e.iosBundleId),
            null != e.androidBundleId && e.hasOwnProperty("androidBundleId") && (n.androidBundleId = e.androidBundleId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetAppLoginUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetAppLoginUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetAppLoginUrl)
                return e;
            var t = new s.HttpResponseBodyGetAppLoginUrl;
            return null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = ""),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetBrownAppAuthToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appId = "",
        e.prototype.url = "",
        e.prototype.callback = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(10).string(e.appId),
            null != e.url && e.hasOwnProperty("url") && t.uint32(18).string(e.url),
            null != e.callback && e.hasOwnProperty("callback") && t.uint32(26).string(e.callback),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetBrownAppAuthToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appId = e.string();
                    break;
                case 2:
                    r.url = e.string();
                    break;
                case 3:
                    r.callback = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetBrownAppAuthToken)
                return e;
            var t = new s.HttpRequestBodyGetBrownAppAuthToken;
            return null != e.appId && (t.appId = String(e.appId)),
            null != e.url && (t.url = String(e.url)),
            null != e.callback && (t.callback = String(e.callback)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appId = "",
            n.url = "",
            n.callback = ""),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.callback && e.hasOwnProperty("callback") && (n.callback = e.callback),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetBrownAppAuthToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.token = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.token && e.hasOwnProperty("token") && t.uint32(10).string(e.token),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetBrownAppAuthToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.token = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetBrownAppAuthToken)
                return e;
            var t = new s.HttpResponseBodyGetBrownAppAuthToken;
            return null != e.token && (t.token = String(e.token)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.token = ""),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetBrownSDKToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appId = "",
        e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(10).string(e.appId),
            null != e.url && e.hasOwnProperty("url") && t.uint32(18).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetBrownSDKToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appId = e.string();
                    break;
                case 2:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetBrownSDKToken)
                return e;
            var t = new s.HttpRequestBodyGetBrownSDKToken;
            return null != e.appId && (t.appId = String(e.appId)),
            null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appId = "",
            n.url = ""),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetBrownSDKToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.token = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.token && e.hasOwnProperty("token") && t.uint32(18).string(e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(24).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetBrownSDKToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.token = e.string();
                    break;
                case 3:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetBrownSDKToken)
                return e;
            var t = new s.HttpResponseBodyGetBrownSDKToken;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.token && (t.token = String(e.token)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.userId = 0,
                n.token = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetAppInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(10).string(e.appId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetAppInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetAppInfo)
                return e;
            var t = new s.HttpRequestBodyGetAppInfo;
            return null != e.appId && (t.appId = String(e.appId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appId = ""),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetAppInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appName = "",
        e.prototype.appIcon = "",
        e.prototype.appDescription = "",
        e.prototype.domain = "",
        e.prototype.appId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.appName && e.hasOwnProperty("appName") && t.uint32(10).string(e.appName),
            null != e.appIcon && e.hasOwnProperty("appIcon") && t.uint32(18).string(e.appIcon),
            null != e.appDescription && e.hasOwnProperty("appDescription") && t.uint32(26).string(e.appDescription),
            null != e.domain && e.hasOwnProperty("domain") && t.uint32(34).string(e.domain),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(42).string(e.appId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetAppInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appName = e.string();
                    break;
                case 2:
                    r.appIcon = e.string();
                    break;
                case 3:
                    r.appDescription = e.string();
                    break;
                case 4:
                    r.domain = e.string();
                    break;
                case 5:
                    r.appId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetAppInfo)
                return e;
            var t = new s.HttpResponseBodyGetAppInfo;
            return null != e.appName && (t.appName = String(e.appName)),
            null != e.appIcon && (t.appIcon = String(e.appIcon)),
            null != e.appDescription && (t.appDescription = String(e.appDescription)),
            null != e.domain && (t.domain = String(e.domain)),
            null != e.appId && (t.appId = String(e.appId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.appName = "",
            n.appIcon = "",
            n.appDescription = "",
            n.domain = "",
            n.appId = ""),
            null != e.appName && e.hasOwnProperty("appName") && (n.appName = e.appName),
            null != e.appIcon && e.hasOwnProperty("appIcon") && (n.appIcon = e.appIcon),
            null != e.appDescription && e.hasOwnProperty("appDescription") && (n.appDescription = e.appDescription),
            null != e.domain && e.hasOwnProperty("domain") && (n.domain = e.domain),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckAppUserAuthorizationType = function() {
        function e(e) {
            if (this.grantItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.appId = "",
        e.prototype.permanentlyToken = "",
        e.prototype.grantItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(10).string(e.appId),
            null != e.permanentlyToken && e.hasOwnProperty("permanentlyToken") && t.uint32(18).string(e.permanentlyToken),
            null != e.grantItems && e.grantItems.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.grantItems.length; ++n)
                    t.int32(e.grantItems[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckAppUserAuthorizationType;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.appId = e.string();
                    break;
                case 2:
                    r.permanentlyToken = e.string();
                    break;
                case 3:
                    if (r.grantItems && r.grantItems.length || (r.grantItems = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.grantItems.push(e.int32())
                    } else
                        r.grantItems.push(e.int32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckAppUserAuthorizationType)
                return e;
            var t = new s.HttpRequestBodyCheckAppUserAuthorizationType;
            if (null != e.appId && (t.appId = String(e.appId)),
            null != e.permanentlyToken && (t.permanentlyToken = String(e.permanentlyToken)),
            e.grantItems) {
                if (!Array.isArray(e.grantItems))
                    throw TypeError(".HttpRequestBodyCheckAppUserAuthorizationType.grantItems: array expected");
                t.grantItems = [];
                for (var n = 0; n < e.grantItems.length; ++n)
                    switch (e.grantItems[n]) {
                    default:
                    case "AppGrantAuthorizationTypeUndefined":
                    case 0:
                        t.grantItems[n] = 0;
                        break;
                    case "AppGrantAuthorizationTypeBrownAuth":
                    case 1:
                        t.grantItems[n] = 1;
                        break;
                    case "AppGrantAuthorizationTypeScanQRCode":
                    case 2:
                        t.grantItems[n] = 2;
                        break;
                    case "AppGrantAuthorizationTypeAppAuth":
                    case 3:
                        t.grantItems[n] = 3;
                        break;
                    case "AppGrantAuthorizationTypeGetCompanyInfo":
                    case 4:
                        t.grantItems[n] = 4;
                        break;
                    case "AppGrantAuthorizationTypeShare":
                    case 5:
                        t.grantItems[n] = 5;
                        break;
                    case "AppGrantAuthorizationTypeSendSingleMessageByUser":
                    case 6:
                        t.grantItems[n] = 6;
                        break
                    }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.grantItems = []),
            t.defaults && (n.appId = "",
            n.permanentlyToken = ""),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.permanentlyToken && e.hasOwnProperty("permanentlyToken") && (n.permanentlyToken = e.permanentlyToken),
            e.grantItems && e.grantItems.length) {
                n.grantItems = [];
                for (var r = 0; r < e.grantItems.length; ++r)
                    n.grantItems[r] = t.enums === String ? s.AppGrantAuthorizationType[e.grantItems[r]] : e.grantItems[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckAppUserAuthorizationType = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.check = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.check && e.hasOwnProperty("check") && t.uint32(8).bool(e.check),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckAppUserAuthorizationType;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.check = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCheckAppUserAuthorizationType)
                return e;
            var t = new s.HttpResponseBodyCheckAppUserAuthorizationType;
            return null != e.check && (t.check = Boolean(e.check)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.check = !1),
            null != e.check && e.hasOwnProperty("check") && (n.check = e.check),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyLoginByWeChatCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.code = "",
        e.prototype.appId = "",
        e.prototype.wxAppId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.code && e.hasOwnProperty("code") && t.uint32(10).string(e.code),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(18).string(e.appId),
            null != e.wxAppId && e.hasOwnProperty("wxAppId") && t.uint32(26).string(e.wxAppId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyLoginByWeChatCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.code = e.string();
                    break;
                case 2:
                    r.appId = e.string();
                    break;
                case 3:
                    r.wxAppId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyLoginByWeChatCode)
                return e;
            var t = new s.HttpRequestBodyLoginByWeChatCode;
            return null != e.code && (t.code = String(e.code)),
            null != e.appId && (t.appId = String(e.appId)),
            null != e.wxAppId && (t.wxAppId = String(e.wxAppId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.code = "",
            n.appId = "",
            n.wxAppId = ""),
            null != e.code && e.hasOwnProperty("code") && (n.code = e.code),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.wxAppId && e.hasOwnProperty("wxAppId") && (n.wxAppId = e.wxAppId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyLoginByWeChatCode = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.token = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.token && e.hasOwnProperty("token") && t.uint32(18).string(e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(24).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyLoginByWeChatCode;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.token = e.string();
                    break;
                case 3:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyLoginByWeChatCode)
                return e;
            var t = new s.HttpResponseBodyLoginByWeChatCode;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.token && (t.token = String(e.token)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.userId = 0,
                n.token = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetWeChatJSSign = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.wxAppId = "",
        e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.wxAppId && e.hasOwnProperty("wxAppId") && t.uint32(10).string(e.wxAppId),
            null != e.url && e.hasOwnProperty("url") && t.uint32(18).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetWeChatJSSign;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.wxAppId = e.string();
                    break;
                case 2:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetWeChatJSSign)
                return e;
            var t = new s.HttpRequestBodyGetWeChatJSSign;
            return null != e.wxAppId && (t.wxAppId = String(e.wxAppId)),
            null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.wxAppId = "",
            n.url = ""),
            null != e.wxAppId && e.hasOwnProperty("wxAppId") && (n.wxAppId = e.wxAppId),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetWeChatJSSign = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.signature = "",
        e.prototype.noncestr = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.signature && e.hasOwnProperty("signature") && t.uint32(10).string(e.signature),
            null != e.noncestr && e.hasOwnProperty("noncestr") && t.uint32(18).string(e.noncestr),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(24).uint64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetWeChatJSSign;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.signature = e.string();
                    break;
                case 2:
                    r.noncestr = e.string();
                    break;
                case 3:
                    r.timestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetWeChatJSSign)
                return e;
            var t = new s.HttpResponseBodyGetWeChatJSSign;
            return null != e.signature && (t.signature = String(e.signature)),
            null != e.noncestr && (t.noncestr = String(e.noncestr)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.signature = "",
                n.noncestr = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.signature && e.hasOwnProperty("signature") && (n.signature = e.signature),
            null != e.noncestr && e.hasOwnProperty("noncestr") && (n.noncestr = e.noncestr),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDownloadWeChatVoice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.wxAppId = "",
        e.prototype.mediaId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.wxAppId && e.hasOwnProperty("wxAppId") && t.uint32(10).string(e.wxAppId),
            null != e.mediaId && e.hasOwnProperty("mediaId") && t.uint32(18).string(e.mediaId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDownloadWeChatVoice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.wxAppId = e.string();
                    break;
                case 2:
                    r.mediaId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDownloadWeChatVoice)
                return e;
            var t = new s.HttpRequestBodyDownloadWeChatVoice;
            return null != e.wxAppId && (t.wxAppId = String(e.wxAppId)),
            null != e.mediaId && (t.mediaId = String(e.mediaId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.wxAppId = "",
            n.mediaId = ""),
            null != e.wxAppId && e.hasOwnProperty("wxAppId") && (n.wxAppId = e.wxAppId),
            null != e.mediaId && e.hasOwnProperty("mediaId") && (n.mediaId = e.mediaId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDownloadWeChatVoice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.fileSize = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.fileSize && e.hasOwnProperty("fileSize") && t.uint32(16).uint32(e.fileSize),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDownloadWeChatVoice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.fileSize = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDownloadWeChatVoice)
                return e;
            var t = new s.HttpResponseBodyDownloadWeChatVoice;
            return null != e.url && (t.url = String(e.url)),
            null != e.fileSize && (t.fileSize = e.fileSize >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = "",
            n.fileSize = 0),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.fileSize && e.hasOwnProperty("fileSize") && (n.fileSize = e.fileSize),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySearchConversationMessage = function() {
        function e(e) {
            if (this.bodyTypes = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationType = 0,
        e.prototype.conversationId = 0,
        e.prototype.key = "",
        e.prototype.index = 0,
        e.prototype.count = 0,
        e.prototype.fixUrl = !1,
        e.prototype.bodyTypes = a.emptyArray,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(8).int32(e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            null != e.key && e.hasOwnProperty("key") && t.uint32(26).string(e.key),
            null != e.index && e.hasOwnProperty("index") && t.uint32(32).uint32(e.index),
            null != e.count && e.hasOwnProperty("count") && t.uint32(40).uint32(e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && t.uint32(48).bool(e.fixUrl),
            null != e.bodyTypes && e.bodyTypes.length)
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.uint32(58).string(e.bodyTypes[n]);
            return null != e.userId && e.hasOwnProperty("userId") && t.uint32(64).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySearchConversationMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationType = e.int32();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                case 3:
                    r.key = e.string();
                    break;
                case 4:
                    r.index = e.uint32();
                    break;
                case 5:
                    r.count = e.uint32();
                    break;
                case 6:
                    r.fixUrl = e.bool();
                    break;
                case 7:
                    r.bodyTypes && r.bodyTypes.length || (r.bodyTypes = []),
                    r.bodyTypes.push(e.string());
                    break;
                case 8:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySearchConversationMessage)
                return e;
            var t = new s.HttpRequestBodySearchConversationMessage;
            switch (e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            null != e.key && (t.key = String(e.key)),
            null != e.index && (t.index = e.index >>> 0),
            null != e.count && (t.count = e.count >>> 0),
            null != e.fixUrl && (t.fixUrl = Boolean(e.fixUrl)),
            e.bodyTypes) {
                if (!Array.isArray(e.bodyTypes))
                    throw TypeError(".HttpRequestBodySearchConversationMessage.bodyTypes: array expected");
                t.bodyTypes = [];
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.bodyTypes[n] = String(e.bodyTypes[n])
            }
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.bodyTypes = []),
            t.defaults && (n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.conversationId = 0,
            n.key = "",
            n.index = 0,
            n.count = 0,
            n.fixUrl = !1,
            n.userId = 0),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.key && e.hasOwnProperty("key") && (n.key = e.key),
            null != e.index && e.hasOwnProperty("index") && (n.index = e.index),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && (n.fixUrl = e.fixUrl),
            e.bodyTypes && e.bodyTypes.length) {
                n.bodyTypes = [];
                for (var r = 0; r < e.bodyTypes.length; ++r)
                    n.bodyTypes[r] = e.bodyTypes[r]
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySearchConversationMessage = function() {
        function e(e) {
            if (this.messages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.messages = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.messages && e.messages.length)
                for (var n = 0; n < e.messages.length; ++n)
                    s.CommonMessage.encode(e.messages[n], t.uint32(26).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(32).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySearchConversationMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.messages && r.messages.length || (r.messages = []),
                    r.messages.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                case 4:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySearchConversationMessage)
                return e;
            var t = new s.HttpResponseBodySearchConversationMessage;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.messages) {
                if (!Array.isArray(e.messages))
                    throw TypeError(".HttpResponseBodySearchConversationMessage.messages: array expected");
                t.messages = [];
                for (var n = 0; n < e.messages.length; ++n) {
                    if ("object" !== typeof e.messages[n])
                        throw TypeError(".HttpResponseBodySearchConversationMessage.messages: object expected");
                    t.messages[n] = s.CommonMessage.fromObject(e.messages[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messages = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.hasMore = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.messages && e.messages.length) {
                n.messages = [];
                for (var r = 0; r < e.messages.length; ++r)
                    n.messages[r] = s.CommonMessage.toObject(e.messages[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySearchConversationMessageBySequence = function() {
        function e(e) {
            if (this.bodyTypes = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationType = 0,
        e.prototype.conversationId = 0,
        e.prototype.key = "",
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.prototype.count = 0,
        e.prototype.fixUrl = !1,
        e.prototype.bodyTypes = a.emptyArray,
        e.prototype.senderId = 0,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(8).int32(e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            null != e.key && e.hasOwnProperty("key") && t.uint32(26).string(e.key),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(32).int64(e.sequence),
            null != e.count && e.hasOwnProperty("count") && t.uint32(40).uint32(e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && t.uint32(48).bool(e.fixUrl),
            null != e.bodyTypes && e.bodyTypes.length)
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.uint32(58).string(e.bodyTypes[n]);
            return null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(64).uint32(e.senderId),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(72).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySearchConversationMessageBySequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationType = e.int32();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                case 3:
                    r.key = e.string();
                    break;
                case 4:
                    r.sequence = e.int64();
                    break;
                case 5:
                    r.count = e.uint32();
                    break;
                case 6:
                    r.fixUrl = e.bool();
                    break;
                case 7:
                    r.bodyTypes && r.bodyTypes.length || (r.bodyTypes = []),
                    r.bodyTypes.push(e.string());
                    break;
                case 8:
                    r.senderId = e.uint32();
                    break;
                case 9:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySearchConversationMessageBySequence)
                return e;
            var t = new s.HttpRequestBodySearchConversationMessageBySequence;
            switch (e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            null != e.key && (t.key = String(e.key)),
            null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !1 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber())),
            null != e.count && (t.count = e.count >>> 0),
            null != e.fixUrl && (t.fixUrl = Boolean(e.fixUrl)),
            e.bodyTypes) {
                if (!Array.isArray(e.bodyTypes))
                    throw TypeError(".HttpRequestBodySearchConversationMessageBySequence.bodyTypes: array expected");
                t.bodyTypes = [];
                for (var n = 0; n < e.bodyTypes.length; ++n)
                    t.bodyTypes[n] = String(e.bodyTypes[n])
            }
            return null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.bodyTypes = []),
            t.defaults) {
                if (n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                n.conversationId = 0,
                n.key = "",
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
                n.count = 0,
                n.fixUrl = !1,
                n.senderId = 0,
                n.userId = 0
            }
            if (null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.key && e.hasOwnProperty("key") && (n.key = e.key),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber() : e.sequence),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.fixUrl && e.hasOwnProperty("fixUrl") && (n.fixUrl = e.fixUrl),
            e.bodyTypes && e.bodyTypes.length) {
                n.bodyTypes = [];
                for (var o = 0; o < e.bodyTypes.length; ++o)
                    n.bodyTypes[o] = e.bodyTypes[o]
            }
            return null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySearchConversationMessageBySequence = function() {
        function e(e) {
            if (this.messages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.messages = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.messages && e.messages.length)
                for (var n = 0; n < e.messages.length; ++n)
                    s.CommonMessage.encode(e.messages[n], t.uint32(26).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(32).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySearchConversationMessageBySequence;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.messages && r.messages.length || (r.messages = []),
                    r.messages.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                case 4:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySearchConversationMessageBySequence)
                return e;
            var t = new s.HttpResponseBodySearchConversationMessageBySequence;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.messages) {
                if (!Array.isArray(e.messages))
                    throw TypeError(".HttpResponseBodySearchConversationMessageBySequence.messages: array expected");
                t.messages = [];
                for (var n = 0; n < e.messages.length; ++n) {
                    if ("object" !== typeof e.messages[n])
                        throw TypeError(".HttpResponseBodySearchConversationMessageBySequence.messages: object expected");
                    t.messages[n] = s.CommonMessage.fromObject(e.messages[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messages = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.hasMore = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.messages && e.messages.length) {
                n.messages = [];
                for (var r = 0; r < e.messages.length; ++r)
                    n.messages[r] = s.CommonMessage.toObject(e.messages[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetCommonConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetCommonConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetCommonConfig ? e : new s.HttpRequestBodyGetCommonConfig
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetCommonConfig = function() {
        function e(e) {
            if (this.iceServers = [],
            this.liveCostInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupMemberHistory = 0,
        e.prototype.groupMemberHistoryRowCount = 0,
        e.prototype.watermark = 0,
        e.prototype.remindMessageState = 0,
        e.prototype.companySortByMember = 0,
        e.prototype.validServiceAccoutCount = 0,
        e.prototype.addFriendSupport = 0,
        e.prototype.userAvatarSupport = 0,
        e.prototype.userNameSupport = 0,
        e.prototype.userSexSupport = 0,
        e.prototype.userRegionSupport = 0,
        e.prototype.userSignatureSupport = 0,
        e.prototype.iceServers = a.emptyArray,
        e.prototype.suggestUrl = "",
        e.prototype.complaintUrl = "",
        e.prototype.liveCostInfos = a.emptyArray,
        e.prototype.hbOfficeAppDomain = "",
        e.prototype.groupCallLimit = 0,
        e.prototype.liveSupport = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupMemberHistory && e.hasOwnProperty("groupMemberHistory") && t.uint32(8).int32(e.groupMemberHistory),
            null != e.groupMemberHistoryRowCount && e.hasOwnProperty("groupMemberHistoryRowCount") && t.uint32(16).int32(e.groupMemberHistoryRowCount),
            null != e.watermark && e.hasOwnProperty("watermark") && t.uint32(24).int32(e.watermark),
            null != e.remindMessageState && e.hasOwnProperty("remindMessageState") && t.uint32(32).int32(e.remindMessageState),
            null != e.companySortByMember && e.hasOwnProperty("companySortByMember") && t.uint32(40).int32(e.companySortByMember),
            null != e.validServiceAccoutCount && e.hasOwnProperty("validServiceAccoutCount") && t.uint32(48).int32(e.validServiceAccoutCount),
            null != e.addFriendSupport && e.hasOwnProperty("addFriendSupport") && t.uint32(56).int32(e.addFriendSupport),
            null != e.userAvatarSupport && e.hasOwnProperty("userAvatarSupport") && t.uint32(64).int32(e.userAvatarSupport),
            null != e.userNameSupport && e.hasOwnProperty("userNameSupport") && t.uint32(72).int32(e.userNameSupport),
            null != e.userSexSupport && e.hasOwnProperty("userSexSupport") && t.uint32(80).int32(e.userSexSupport),
            null != e.userRegionSupport && e.hasOwnProperty("userRegionSupport") && t.uint32(88).int32(e.userRegionSupport),
            null != e.userSignatureSupport && e.hasOwnProperty("userSignatureSupport") && t.uint32(96).int32(e.userSignatureSupport),
            null != e.iceServers && e.iceServers.length)
                for (var n = 0; n < e.iceServers.length; ++n)
                    s.CommonWebRTCConfig.encode(e.iceServers[n], t.uint32(106).fork()).ldelim();
            if (null != e.suggestUrl && e.hasOwnProperty("suggestUrl") && t.uint32(114).string(e.suggestUrl),
            null != e.complaintUrl && e.hasOwnProperty("complaintUrl") && t.uint32(122).string(e.complaintUrl),
            null != e.liveCostInfos && e.liveCostInfos.length)
                for (n = 0; n < e.liveCostInfos.length; ++n)
                    s.CommonLiveCostInfo.encode(e.liveCostInfos[n], t.uint32(130).fork()).ldelim();
            return null != e.hbOfficeAppDomain && e.hasOwnProperty("hbOfficeAppDomain") && t.uint32(138).string(e.hbOfficeAppDomain),
            null != e.groupCallLimit && e.hasOwnProperty("groupCallLimit") && t.uint32(144).uint32(e.groupCallLimit),
            null != e.liveSupport && e.hasOwnProperty("liveSupport") && t.uint32(152).uint32(e.liveSupport),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetCommonConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupMemberHistory = e.int32();
                    break;
                case 2:
                    r.groupMemberHistoryRowCount = e.int32();
                    break;
                case 3:
                    r.watermark = e.int32();
                    break;
                case 4:
                    r.remindMessageState = e.int32();
                    break;
                case 5:
                    r.companySortByMember = e.int32();
                    break;
                case 6:
                    r.validServiceAccoutCount = e.int32();
                    break;
                case 7:
                    r.addFriendSupport = e.int32();
                    break;
                case 8:
                    r.userAvatarSupport = e.int32();
                    break;
                case 9:
                    r.userNameSupport = e.int32();
                    break;
                case 10:
                    r.userSexSupport = e.int32();
                    break;
                case 11:
                    r.userRegionSupport = e.int32();
                    break;
                case 12:
                    r.userSignatureSupport = e.int32();
                    break;
                case 13:
                    r.iceServers && r.iceServers.length || (r.iceServers = []),
                    r.iceServers.push(s.CommonWebRTCConfig.decode(e, e.uint32()));
                    break;
                case 14:
                    r.suggestUrl = e.string();
                    break;
                case 15:
                    r.complaintUrl = e.string();
                    break;
                case 16:
                    r.liveCostInfos && r.liveCostInfos.length || (r.liveCostInfos = []),
                    r.liveCostInfos.push(s.CommonLiveCostInfo.decode(e, e.uint32()));
                    break;
                case 17:
                    r.hbOfficeAppDomain = e.string();
                    break;
                case 18:
                    r.groupCallLimit = e.uint32();
                    break;
                case 19:
                    r.liveSupport = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetCommonConfig)
                return e;
            var t = new s.HttpResponseBodyGetCommonConfig;
            if (null != e.groupMemberHistory && (t.groupMemberHistory = 0 | e.groupMemberHistory),
            null != e.groupMemberHistoryRowCount && (t.groupMemberHistoryRowCount = 0 | e.groupMemberHistoryRowCount),
            null != e.watermark && (t.watermark = 0 | e.watermark),
            null != e.remindMessageState && (t.remindMessageState = 0 | e.remindMessageState),
            null != e.companySortByMember && (t.companySortByMember = 0 | e.companySortByMember),
            null != e.validServiceAccoutCount && (t.validServiceAccoutCount = 0 | e.validServiceAccoutCount),
            null != e.addFriendSupport && (t.addFriendSupport = 0 | e.addFriendSupport),
            null != e.userAvatarSupport && (t.userAvatarSupport = 0 | e.userAvatarSupport),
            null != e.userNameSupport && (t.userNameSupport = 0 | e.userNameSupport),
            null != e.userSexSupport && (t.userSexSupport = 0 | e.userSexSupport),
            null != e.userRegionSupport && (t.userRegionSupport = 0 | e.userRegionSupport),
            null != e.userSignatureSupport && (t.userSignatureSupport = 0 | e.userSignatureSupport),
            e.iceServers) {
                if (!Array.isArray(e.iceServers))
                    throw TypeError(".HttpResponseBodyGetCommonConfig.iceServers: array expected");
                t.iceServers = [];
                for (var n = 0; n < e.iceServers.length; ++n) {
                    if ("object" !== typeof e.iceServers[n])
                        throw TypeError(".HttpResponseBodyGetCommonConfig.iceServers: object expected");
                    t.iceServers[n] = s.CommonWebRTCConfig.fromObject(e.iceServers[n])
                }
            }
            if (null != e.suggestUrl && (t.suggestUrl = String(e.suggestUrl)),
            null != e.complaintUrl && (t.complaintUrl = String(e.complaintUrl)),
            e.liveCostInfos) {
                if (!Array.isArray(e.liveCostInfos))
                    throw TypeError(".HttpResponseBodyGetCommonConfig.liveCostInfos: array expected");
                t.liveCostInfos = [];
                for (n = 0; n < e.liveCostInfos.length; ++n) {
                    if ("object" !== typeof e.liveCostInfos[n])
                        throw TypeError(".HttpResponseBodyGetCommonConfig.liveCostInfos: object expected");
                    t.liveCostInfos[n] = s.CommonLiveCostInfo.fromObject(e.liveCostInfos[n])
                }
            }
            return null != e.hbOfficeAppDomain && (t.hbOfficeAppDomain = String(e.hbOfficeAppDomain)),
            null != e.groupCallLimit && (t.groupCallLimit = e.groupCallLimit >>> 0),
            null != e.liveSupport && (t.liveSupport = e.liveSupport >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.iceServers = [],
            n.liveCostInfos = []),
            t.defaults && (n.groupMemberHistory = 0,
            n.groupMemberHistoryRowCount = 0,
            n.watermark = 0,
            n.remindMessageState = 0,
            n.companySortByMember = 0,
            n.validServiceAccoutCount = 0,
            n.addFriendSupport = 0,
            n.userAvatarSupport = 0,
            n.userNameSupport = 0,
            n.userSexSupport = 0,
            n.userRegionSupport = 0,
            n.userSignatureSupport = 0,
            n.suggestUrl = "",
            n.complaintUrl = "",
            n.hbOfficeAppDomain = "",
            n.groupCallLimit = 0,
            n.liveSupport = 0),
            null != e.groupMemberHistory && e.hasOwnProperty("groupMemberHistory") && (n.groupMemberHistory = e.groupMemberHistory),
            null != e.groupMemberHistoryRowCount && e.hasOwnProperty("groupMemberHistoryRowCount") && (n.groupMemberHistoryRowCount = e.groupMemberHistoryRowCount),
            null != e.watermark && e.hasOwnProperty("watermark") && (n.watermark = e.watermark),
            null != e.remindMessageState && e.hasOwnProperty("remindMessageState") && (n.remindMessageState = e.remindMessageState),
            null != e.companySortByMember && e.hasOwnProperty("companySortByMember") && (n.companySortByMember = e.companySortByMember),
            null != e.validServiceAccoutCount && e.hasOwnProperty("validServiceAccoutCount") && (n.validServiceAccoutCount = e.validServiceAccoutCount),
            null != e.addFriendSupport && e.hasOwnProperty("addFriendSupport") && (n.addFriendSupport = e.addFriendSupport),
            null != e.userAvatarSupport && e.hasOwnProperty("userAvatarSupport") && (n.userAvatarSupport = e.userAvatarSupport),
            null != e.userNameSupport && e.hasOwnProperty("userNameSupport") && (n.userNameSupport = e.userNameSupport),
            null != e.userSexSupport && e.hasOwnProperty("userSexSupport") && (n.userSexSupport = e.userSexSupport),
            null != e.userRegionSupport && e.hasOwnProperty("userRegionSupport") && (n.userRegionSupport = e.userRegionSupport),
            null != e.userSignatureSupport && e.hasOwnProperty("userSignatureSupport") && (n.userSignatureSupport = e.userSignatureSupport),
            e.iceServers && e.iceServers.length) {
                n.iceServers = [];
                for (var r = 0; r < e.iceServers.length; ++r)
                    n.iceServers[r] = s.CommonWebRTCConfig.toObject(e.iceServers[r], t)
            }
            if (null != e.suggestUrl && e.hasOwnProperty("suggestUrl") && (n.suggestUrl = e.suggestUrl),
            null != e.complaintUrl && e.hasOwnProperty("complaintUrl") && (n.complaintUrl = e.complaintUrl),
            e.liveCostInfos && e.liveCostInfos.length) {
                n.liveCostInfos = [];
                for (r = 0; r < e.liveCostInfos.length; ++r)
                    n.liveCostInfos[r] = s.CommonLiveCostInfo.toObject(e.liveCostInfos[r], t)
            }
            return null != e.hbOfficeAppDomain && e.hasOwnProperty("hbOfficeAppDomain") && (n.hbOfficeAppDomain = e.hbOfficeAppDomain),
            null != e.groupCallLimit && e.hasOwnProperty("groupCallLimit") && (n.groupCallLimit = e.groupCallLimit),
            null != e.liveSupport && e.hasOwnProperty("liveSupport") && (n.liveSupport = e.liveSupport),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetRemindMessageTemplates = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetRemindMessageTemplates;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetRemindMessageTemplates ? e : new s.HttpRequestBodyGetRemindMessageTemplates
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetRemindMessageTemplates = function() {
        function e(e) {
            if (this.templates = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.templates = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.templates && e.templates.length)
                for (var n = 0; n < e.templates.length; ++n)
                    t.uint32(10).string(e.templates[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetRemindMessageTemplates;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.templates && r.templates.length || (r.templates = []),
                    r.templates.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetRemindMessageTemplates)
                return e;
            var t = new s.HttpResponseBodyGetRemindMessageTemplates;
            if (e.templates) {
                if (!Array.isArray(e.templates))
                    throw TypeError(".HttpResponseBodyGetRemindMessageTemplates.templates: array expected");
                t.templates = [];
                for (var n = 0; n < e.templates.length; ++n)
                    t.templates[n] = String(e.templates[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.templates = []),
            e.templates && e.templates.length) {
                n.templates = [];
                for (var r = 0; r < e.templates.length; ++r)
                    n.templates[r] = e.templates[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFileInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.md5 = "",
        e.prototype.size = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.extensionFileName = "",
        e.prototype.fileType = 0,
        e.prototype.isOriginalImage = !1,
        e.prototype.fileName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(10).string(e.md5),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint64(e.size),
            null != e.extensionFileName && e.hasOwnProperty("extensionFileName") && t.uint32(26).string(e.extensionFileName),
            null != e.fileType && e.hasOwnProperty("fileType") && t.uint32(32).int32(e.fileType),
            null != e.isOriginalImage && e.hasOwnProperty("isOriginalImage") && t.uint32(40).bool(e.isOriginalImage),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(50).string(e.fileName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFileInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.md5 = e.string();
                    break;
                case 2:
                    r.size = e.uint64();
                    break;
                case 3:
                    r.extensionFileName = e.string();
                    break;
                case 4:
                    r.fileType = e.int32();
                    break;
                case 5:
                    r.isOriginalImage = e.bool();
                    break;
                case 6:
                    r.fileName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetFileInfo)
                return e;
            var t = new s.HttpRequestBodyGetFileInfo;
            switch (null != e.md5 && (t.md5 = String(e.md5)),
            null != e.size && (a.Long ? (t.size = a.Long.fromValue(e.size)).unsigned = !0 : "string" === typeof e.size ? t.size = parseInt(e.size, 10) : "number" === typeof e.size ? t.size = e.size : "object" === typeof e.size && (t.size = new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0))),
            null != e.extensionFileName && (t.extensionFileName = String(e.extensionFileName)),
            e.fileType) {
            case "CommonFileTypeUndefined":
            case 0:
                t.fileType = 0;
                break;
            case "CommonFileTypeImage":
            case 1:
                t.fileType = 1;
                break;
            case "CommonFileTypeVoice":
            case 2:
                t.fileType = 2;
                break;
            case "CommonFileTypeFile":
            case 3:
                t.fileType = 3;
                break
            }
            return null != e.isOriginalImage && (t.isOriginalImage = Boolean(e.isOriginalImage)),
            null != e.fileName && (t.fileName = String(e.fileName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.md5 = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.size = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.size = t.longs === String ? "0" : 0;
                n.extensionFileName = "",
                n.fileType = t.enums === String ? "CommonFileTypeUndefined" : 0,
                n.isOriginalImage = !1,
                n.fileName = ""
            }
            return null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.size && e.hasOwnProperty("size") && ("number" === typeof e.size ? n.size = t.longs === String ? String(e.size) : e.size : n.size = t.longs === String ? a.Long.prototype.toString.call(e.size) : t.longs === Number ? new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0) : e.size),
            null != e.extensionFileName && e.hasOwnProperty("extensionFileName") && (n.extensionFileName = e.extensionFileName),
            null != e.fileType && e.hasOwnProperty("fileType") && (n.fileType = t.enums === String ? s.CommonFileType[e.fileType] : e.fileType),
            null != e.isOriginalImage && e.hasOwnProperty("isOriginalImage") && (n.isOriginalImage = e.isOriginalImage),
            null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFileInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = 0,
        e.prototype.uploadedSize = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.size = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.fileUrl = "",
        e.prototype.fileType = 0,
        e.prototype.fileItemData = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).int32(e.status),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && t.uint32(16).uint64(e.uploadedSize),
            null != e.size && e.hasOwnProperty("size") && t.uint32(24).uint64(e.size),
            null != e.fileUrl && e.hasOwnProperty("fileUrl") && t.uint32(34).string(e.fileUrl),
            null != e.fileType && e.hasOwnProperty("fileType") && t.uint32(40).int32(e.fileType),
            null != e.fileItemData && e.hasOwnProperty("fileItemData") && t.uint32(50).bytes(e.fileItemData),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFileInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.int32();
                    break;
                case 2:
                    r.uploadedSize = e.uint64();
                    break;
                case 3:
                    r.size = e.uint64();
                    break;
                case 4:
                    r.fileUrl = e.string();
                    break;
                case 5:
                    r.fileType = e.int32();
                    break;
                case 6:
                    r.fileItemData = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFileInfo)
                return e;
            var t = new s.HttpResponseBodyGetFileInfo;
            switch (e.status) {
            case "CommonFileUploadStatusTypeNotExists":
            case 0:
                t.status = 0;
                break;
            case "CommonFileUploadStatusTypeUploading":
            case 1:
                t.status = 1;
                break;
            case "CommonFileUploadStatusTypeUploadCompletion":
            case 2:
                t.status = 2;
                break;
            case "CommonFileUploadStatusTypeFileBroken":
            case 3:
                t.status = 3;
                break
            }
            switch (null != e.uploadedSize && (a.Long ? (t.uploadedSize = a.Long.fromValue(e.uploadedSize)).unsigned = !0 : "string" === typeof e.uploadedSize ? t.uploadedSize = parseInt(e.uploadedSize, 10) : "number" === typeof e.uploadedSize ? t.uploadedSize = e.uploadedSize : "object" === typeof e.uploadedSize && (t.uploadedSize = new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0))),
            null != e.size && (a.Long ? (t.size = a.Long.fromValue(e.size)).unsigned = !0 : "string" === typeof e.size ? t.size = parseInt(e.size, 10) : "number" === typeof e.size ? t.size = e.size : "object" === typeof e.size && (t.size = new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0))),
            null != e.fileUrl && (t.fileUrl = String(e.fileUrl)),
            e.fileType) {
            case "CommonFileTypeUndefined":
            case 0:
                t.fileType = 0;
                break;
            case "CommonFileTypeImage":
            case 1:
                t.fileType = 1;
                break;
            case "CommonFileTypeVoice":
            case 2:
                t.fileType = 2;
                break;
            case "CommonFileTypeFile":
            case 3:
                t.fileType = 3;
                break
            }
            return null != e.fileItemData && ("string" === typeof e.fileItemData ? a.base64.decode(e.fileItemData, t.fileItemData = a.newBuffer(a.base64.length(e.fileItemData)), 0) : e.fileItemData.length && (t.fileItemData = e.fileItemData)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.status = t.enums === String ? "CommonFileUploadStatusTypeNotExists" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.uploadedSize = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.uploadedSize = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.size = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.size = t.longs === String ? "0" : 0;
                n.fileUrl = "",
                n.fileType = t.enums === String ? "CommonFileTypeUndefined" : 0,
                t.bytes === String ? n.fileItemData = "" : (n.fileItemData = [],
                t.bytes !== Array && (n.fileItemData = a.newBuffer(n.fileItemData)))
            }
            return null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonFileUploadStatusType[e.status] : e.status),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && ("number" === typeof e.uploadedSize ? n.uploadedSize = t.longs === String ? String(e.uploadedSize) : e.uploadedSize : n.uploadedSize = t.longs === String ? a.Long.prototype.toString.call(e.uploadedSize) : t.longs === Number ? new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0) : e.uploadedSize),
            null != e.size && e.hasOwnProperty("size") && ("number" === typeof e.size ? n.size = t.longs === String ? String(e.size) : e.size : n.size = t.longs === String ? a.Long.prototype.toString.call(e.size) : t.longs === Number ? new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0) : e.size),
            null != e.fileUrl && e.hasOwnProperty("fileUrl") && (n.fileUrl = e.fileUrl),
            null != e.fileType && e.hasOwnProperty("fileType") && (n.fileType = t.enums === String ? s.CommonFileType[e.fileType] : e.fileType),
            null != e.fileItemData && e.hasOwnProperty("fileItemData") && (n.fileItemData = t.bytes === String ? a.base64.encode(e.fileItemData, 0, e.fileItemData.length) : t.bytes === Array ? Array.prototype.slice.call(e.fileItemData) : e.fileItemData),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadFileBlock = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.md5 = "",
        e.prototype.size = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.extensionFileName = "",
        e.prototype.uploadOffset = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.data = a.newBuffer([]),
        e.prototype.fileType = 0,
        e.prototype.isOriginalImage = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(10).string(e.md5),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint64(e.size),
            null != e.extensionFileName && e.hasOwnProperty("extensionFileName") && t.uint32(26).string(e.extensionFileName),
            null != e.uploadOffset && e.hasOwnProperty("uploadOffset") && t.uint32(32).uint64(e.uploadOffset),
            null != e.data && e.hasOwnProperty("data") && t.uint32(42).bytes(e.data),
            null != e.fileType && e.hasOwnProperty("fileType") && t.uint32(48).int32(e.fileType),
            null != e.isOriginalImage && e.hasOwnProperty("isOriginalImage") && t.uint32(56).bool(e.isOriginalImage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadFileBlock;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.md5 = e.string();
                    break;
                case 2:
                    r.size = e.uint64();
                    break;
                case 3:
                    r.extensionFileName = e.string();
                    break;
                case 4:
                    r.uploadOffset = e.uint64();
                    break;
                case 5:
                    r.data = e.bytes();
                    break;
                case 6:
                    r.fileType = e.int32();
                    break;
                case 7:
                    r.isOriginalImage = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadFileBlock)
                return e;
            var t = new s.HttpRequestBodyUploadFileBlock;
            switch (null != e.md5 && (t.md5 = String(e.md5)),
            null != e.size && (a.Long ? (t.size = a.Long.fromValue(e.size)).unsigned = !0 : "string" === typeof e.size ? t.size = parseInt(e.size, 10) : "number" === typeof e.size ? t.size = e.size : "object" === typeof e.size && (t.size = new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0))),
            null != e.extensionFileName && (t.extensionFileName = String(e.extensionFileName)),
            null != e.uploadOffset && (a.Long ? (t.uploadOffset = a.Long.fromValue(e.uploadOffset)).unsigned = !0 : "string" === typeof e.uploadOffset ? t.uploadOffset = parseInt(e.uploadOffset, 10) : "number" === typeof e.uploadOffset ? t.uploadOffset = e.uploadOffset : "object" === typeof e.uploadOffset && (t.uploadOffset = new a.LongBits(e.uploadOffset.low >>> 0,e.uploadOffset.high >>> 0).toNumber(!0))),
            null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            e.fileType) {
            case "CommonFileTypeUndefined":
            case 0:
                t.fileType = 0;
                break;
            case "CommonFileTypeImage":
            case 1:
                t.fileType = 1;
                break;
            case "CommonFileTypeVoice":
            case 2:
                t.fileType = 2;
                break;
            case "CommonFileTypeFile":
            case 3:
                t.fileType = 3;
                break
            }
            return null != e.isOriginalImage && (t.isOriginalImage = Boolean(e.isOriginalImage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.md5 = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.size = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.size = t.longs === String ? "0" : 0;
                if (n.extensionFileName = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.uploadOffset = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.uploadOffset = t.longs === String ? "0" : 0;
                t.bytes === String ? n.data = "" : (n.data = [],
                t.bytes !== Array && (n.data = a.newBuffer(n.data))),
                n.fileType = t.enums === String ? "CommonFileTypeUndefined" : 0,
                n.isOriginalImage = !1
            }
            return null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.size && e.hasOwnProperty("size") && ("number" === typeof e.size ? n.size = t.longs === String ? String(e.size) : e.size : n.size = t.longs === String ? a.Long.prototype.toString.call(e.size) : t.longs === Number ? new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0) : e.size),
            null != e.extensionFileName && e.hasOwnProperty("extensionFileName") && (n.extensionFileName = e.extensionFileName),
            null != e.uploadOffset && e.hasOwnProperty("uploadOffset") && ("number" === typeof e.uploadOffset ? n.uploadOffset = t.longs === String ? String(e.uploadOffset) : e.uploadOffset : n.uploadOffset = t.longs === String ? a.Long.prototype.toString.call(e.uploadOffset) : t.longs === Number ? new a.LongBits(e.uploadOffset.low >>> 0,e.uploadOffset.high >>> 0).toNumber(!0) : e.uploadOffset),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            null != e.fileType && e.hasOwnProperty("fileType") && (n.fileType = t.enums === String ? s.CommonFileType[e.fileType] : e.fileType),
            null != e.isOriginalImage && e.hasOwnProperty("isOriginalImage") && (n.isOriginalImage = e.isOriginalImage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadFileBlock = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = 0,
        e.prototype.uploadedSize = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.size = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.fileUrl = "",
        e.prototype.fileType = 0,
        e.prototype.fileItemData = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).int32(e.status),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && t.uint32(16).uint64(e.uploadedSize),
            null != e.size && e.hasOwnProperty("size") && t.uint32(24).uint64(e.size),
            null != e.fileUrl && e.hasOwnProperty("fileUrl") && t.uint32(34).string(e.fileUrl),
            null != e.fileType && e.hasOwnProperty("fileType") && t.uint32(40).int32(e.fileType),
            null != e.fileItemData && e.hasOwnProperty("fileItemData") && t.uint32(50).bytes(e.fileItemData),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadFileBlock;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.int32();
                    break;
                case 2:
                    r.uploadedSize = e.uint64();
                    break;
                case 3:
                    r.size = e.uint64();
                    break;
                case 4:
                    r.fileUrl = e.string();
                    break;
                case 5:
                    r.fileType = e.int32();
                    break;
                case 6:
                    r.fileItemData = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUploadFileBlock)
                return e;
            var t = new s.HttpResponseBodyUploadFileBlock;
            switch (e.status) {
            case "CommonFileUploadStatusTypeNotExists":
            case 0:
                t.status = 0;
                break;
            case "CommonFileUploadStatusTypeUploading":
            case 1:
                t.status = 1;
                break;
            case "CommonFileUploadStatusTypeUploadCompletion":
            case 2:
                t.status = 2;
                break;
            case "CommonFileUploadStatusTypeFileBroken":
            case 3:
                t.status = 3;
                break
            }
            switch (null != e.uploadedSize && (a.Long ? (t.uploadedSize = a.Long.fromValue(e.uploadedSize)).unsigned = !0 : "string" === typeof e.uploadedSize ? t.uploadedSize = parseInt(e.uploadedSize, 10) : "number" === typeof e.uploadedSize ? t.uploadedSize = e.uploadedSize : "object" === typeof e.uploadedSize && (t.uploadedSize = new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0))),
            null != e.size && (a.Long ? (t.size = a.Long.fromValue(e.size)).unsigned = !0 : "string" === typeof e.size ? t.size = parseInt(e.size, 10) : "number" === typeof e.size ? t.size = e.size : "object" === typeof e.size && (t.size = new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0))),
            null != e.fileUrl && (t.fileUrl = String(e.fileUrl)),
            e.fileType) {
            case "CommonFileTypeUndefined":
            case 0:
                t.fileType = 0;
                break;
            case "CommonFileTypeImage":
            case 1:
                t.fileType = 1;
                break;
            case "CommonFileTypeVoice":
            case 2:
                t.fileType = 2;
                break;
            case "CommonFileTypeFile":
            case 3:
                t.fileType = 3;
                break
            }
            return null != e.fileItemData && ("string" === typeof e.fileItemData ? a.base64.decode(e.fileItemData, t.fileItemData = a.newBuffer(a.base64.length(e.fileItemData)), 0) : e.fileItemData.length && (t.fileItemData = e.fileItemData)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.status = t.enums === String ? "CommonFileUploadStatusTypeNotExists" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.uploadedSize = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.uploadedSize = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.size = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.size = t.longs === String ? "0" : 0;
                n.fileUrl = "",
                n.fileType = t.enums === String ? "CommonFileTypeUndefined" : 0,
                t.bytes === String ? n.fileItemData = "" : (n.fileItemData = [],
                t.bytes !== Array && (n.fileItemData = a.newBuffer(n.fileItemData)))
            }
            return null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonFileUploadStatusType[e.status] : e.status),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && ("number" === typeof e.uploadedSize ? n.uploadedSize = t.longs === String ? String(e.uploadedSize) : e.uploadedSize : n.uploadedSize = t.longs === String ? a.Long.prototype.toString.call(e.uploadedSize) : t.longs === Number ? new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0) : e.uploadedSize),
            null != e.size && e.hasOwnProperty("size") && ("number" === typeof e.size ? n.size = t.longs === String ? String(e.size) : e.size : n.size = t.longs === String ? a.Long.prototype.toString.call(e.size) : t.longs === Number ? new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0) : e.size),
            null != e.fileUrl && e.hasOwnProperty("fileUrl") && (n.fileUrl = e.fileUrl),
            null != e.fileType && e.hasOwnProperty("fileType") && (n.fileType = t.enums === String ? s.CommonFileType[e.fileType] : e.fileType),
            null != e.fileItemData && e.hasOwnProperty("fileItemData") && (n.fileItemData = t.bytes === String ? a.base64.encode(e.fileItemData, 0, e.fileItemData.length) : t.bytes === Array ? Array.prototype.slice.call(e.fileItemData) : e.fileItemData),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyShareSystemLocalFileMessage = function() {
        function e(e) {
            if (this.messages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messages = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.messages && e.messages.length)
                for (var n = 0; n < e.messages.length; ++n)
                    s.CommonMessage.encode(e.messages[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyShareSystemLocalFileMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messages && r.messages.length || (r.messages = []),
                    r.messages.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyShareSystemLocalFileMessage)
                return e;
            var t = new s.HttpRequestBodyShareSystemLocalFileMessage;
            if (e.messages) {
                if (!Array.isArray(e.messages))
                    throw TypeError(".HttpRequestBodyShareSystemLocalFileMessage.messages: array expected");
                t.messages = [];
                for (var n = 0; n < e.messages.length; ++n) {
                    if ("object" !== typeof e.messages[n])
                        throw TypeError(".HttpRequestBodyShareSystemLocalFileMessage.messages: object expected");
                    t.messages[n] = s.CommonMessage.fromObject(e.messages[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messages = []),
            e.messages && e.messages.length) {
                n.messages = [];
                for (var r = 0; r < e.messages.length; ++r)
                    n.messages[r] = s.CommonMessage.toObject(e.messages[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyShareSystemLocalFileMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyShareSystemLocalFileMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyShareSystemLocalFileMessage ? e : new s.HttpResponseBodyShareSystemLocalFileMessage
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.message = null,
        e.prototype.replyMessageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(10).fork()).ldelim(),
            null != e.replyMessageId && e.hasOwnProperty("replyMessageId") && t.uint32(18).string(e.replyMessageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 2:
                    r.replyMessageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendMessage)
                return e;
            var t = new s.HttpRequestBodySendMessage;
            if (null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".HttpRequestBodySendMessage.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return null != e.replyMessageId && (t.replyMessageId = String(e.replyMessageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.message = null,
            n.replyMessageId = ""),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            null != e.replyMessageId && e.hasOwnProperty("replyMessageId") && (n.replyMessageId = e.replyMessageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySendMessage ? e : new s.HttpResponseBodySendMessage
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAcceptWebLogin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.qrCode && e.hasOwnProperty("qrCode") && t.uint32(10).string(e.qrCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAcceptWebLogin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.qrCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAcceptWebLogin)
                return e;
            var t = new s.HttpRequestBodyAcceptWebLogin;
            return null != e.qrCode && (t.qrCode = String(e.qrCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.qrCode = ""),
            null != e.qrCode && e.hasOwnProperty("qrCode") && (n.qrCode = e.qrCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAcceptWebLogin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAcceptWebLogin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAcceptWebLogin ? e : new s.HttpResponseBodyAcceptWebLogin
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyWebLogout = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyWebLogout;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyWebLogout ? e : new s.HttpRequestBodyWebLogout
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyWebLogout = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyWebLogout;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyWebLogout ? e : new s.HttpResponseBodyWebLogout
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyAcceptAdminAuth = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.qrCode && e.hasOwnProperty("qrCode") && t.uint32(10).string(e.qrCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyAcceptAdminAuth;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.qrCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyAcceptAdminAuth)
                return e;
            var t = new s.HttpRequestBodyAcceptAdminAuth;
            return null != e.qrCode && (t.qrCode = String(e.qrCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.qrCode = ""),
            null != e.qrCode && e.hasOwnProperty("qrCode") && (n.qrCode = e.qrCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyAcceptAdminAuth = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyAcceptAdminAuth;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyAcceptAdminAuth ? e : new s.HttpResponseBodyAcceptAdminAuth
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetQRCodePath = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrCodeUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.qrCodeUrl && e.hasOwnProperty("qrCodeUrl") && t.uint32(10).string(e.qrCodeUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetQRCodePath;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.qrCodeUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetQRCodePath)
                return e;
            var t = new s.HttpRequestBodyGetQRCodePath;
            return null != e.qrCodeUrl && (t.qrCodeUrl = String(e.qrCodeUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.qrCodeUrl = ""),
            null != e.qrCodeUrl && e.hasOwnProperty("qrCodeUrl") && (n.qrCodeUrl = e.qrCodeUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetQRCodePath = function() {
        function e(e) {
            if (this.params = {},
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrCodePath = "",
        e.prototype.params = a.emptyObject,
        e.prototype.redirectUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.qrCodePath && e.hasOwnProperty("qrCodePath") && t.uint32(10).string(e.qrCodePath),
            null != e.params && e.hasOwnProperty("params"))
                for (var n = Object.keys(e.params), r = 0; r < n.length; ++r)
                    t.uint32(18).fork().uint32(8).int32(n[r]).uint32(18).string(e.params[n[r]]).ldelim();
            return null != e.redirectUrl && e.hasOwnProperty("redirectUrl") && t.uint32(26).string(e.redirectUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n, r = void 0 === t ? e.len : e.pos + t, i = new s.HttpResponseBodyGetQRCodePath;
            while (e.pos < r) {
                var u = e.uint32();
                switch (u >>> 3) {
                case 1:
                    i.qrCodePath = e.string();
                    break;
                case 2:
                    e.skip().pos++,
                    i.params === a.emptyObject && (i.params = {}),
                    n = e.int32(),
                    e.pos++,
                    i.params[n] = e.string();
                    break;
                case 3:
                    i.redirectUrl = e.string();
                    break;
                default:
                    e.skipType(7 & u);
                    break
                }
            }
            return i
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetQRCodePath)
                return e;
            var t = new s.HttpResponseBodyGetQRCodePath;
            if (null != e.qrCodePath && (t.qrCodePath = String(e.qrCodePath)),
            e.params) {
                if ("object" !== typeof e.params)
                    throw TypeError(".HttpResponseBodyGetQRCodePath.params: object expected");
                t.params = {};
                for (var n = Object.keys(e.params), r = 0; r < n.length; ++r)
                    t.params[n[r]] = String(e.params[n[r]])
            }
            return null != e.redirectUrl && (t.redirectUrl = String(e.redirectUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n, r = {};
            if ((t.objects || t.defaults) && (r.params = {}),
            t.defaults && (r.qrCodePath = "",
            r.redirectUrl = ""),
            null != e.qrCodePath && e.hasOwnProperty("qrCodePath") && (r.qrCodePath = e.qrCodePath),
            e.params && (n = Object.keys(e.params)).length) {
                r.params = {};
                for (var o = 0; o < n.length; ++o)
                    r.params[n[o]] = e.params[n[o]]
            }
            return null != e.redirectUrl && e.hasOwnProperty("redirectUrl") && (r.redirectUrl = e.redirectUrl),
            r
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetNRTCToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).int32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetNRTCToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.groupId = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetNRTCToken)
                return e;
            var t = new s.HttpRequestBodyGetNRTCToken;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.groupId && (t.groupId = 0 | e.groupId),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.groupId = 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetNRTCToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.token = "",
        e.prototype.channelName = "",
        e.prototype.appKey = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.token && e.hasOwnProperty("token") && t.uint32(10).string(e.token),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(18).string(e.channelName),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(26).string(e.appKey),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetNRTCToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.token = e.string();
                    break;
                case 2:
                    r.channelName = e.string();
                    break;
                case 3:
                    r.appKey = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetNRTCToken)
                return e;
            var t = new s.HttpResponseBodyGetNRTCToken;
            return null != e.token && (t.token = String(e.token)),
            null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.appKey && (t.appKey = String(e.appKey)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.token = "",
            n.channelName = "",
            n.appKey = ""),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetNRTCUserToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetNRTCUserToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetNRTCUserToken ? e : new s.HttpRequestBodyGetNRTCUserToken
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetNRTCUserToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.token = "",
        e.prototype.appKey = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.token && e.hasOwnProperty("token") && t.uint32(10).string(e.token),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(18).string(e.appKey),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetNRTCUserToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.token = e.string();
                    break;
                case 2:
                    r.appKey = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetNRTCUserToken)
                return e;
            var t = new s.HttpResponseBodyGetNRTCUserToken;
            return null != e.token && (t.token = String(e.token)),
            null != e.appKey && (t.appKey = String(e.appKey)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.token = "",
            n.appKey = ""),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateLiveVideo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateLiveVideo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyCreateLiveVideo ? e : new s.HttpRequestBodyCreateLiveVideo
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateLiveVideo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.pushUrl = "",
        e.prototype.pullUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && t.uint32(10).string(e.pushUrl),
            null != e.pullUrl && e.hasOwnProperty("pullUrl") && t.uint32(18).string(e.pullUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateLiveVideo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.pushUrl = e.string();
                    break;
                case 2:
                    r.pullUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateLiveVideo)
                return e;
            var t = new s.HttpResponseBodyCreateLiveVideo;
            return null != e.pushUrl && (t.pushUrl = String(e.pushUrl)),
            null != e.pullUrl && (t.pullUrl = String(e.pullUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.pushUrl = "",
            n.pullUrl = ""),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && (n.pushUrl = e.pushUrl),
            null != e.pullUrl && e.hasOwnProperty("pullUrl") && (n.pullUrl = e.pullUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateChannel = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.groupId = 0,
        e.prototype.channelType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).int32(e.groupId),
            null != e.channelType && e.hasOwnProperty("channelType") && t.uint32(24).int32(e.channelType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateChannel;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.groupId = e.int32();
                    break;
                case 3:
                    r.channelType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateChannel)
                return e;
            var t = new s.HttpRequestBodyCreateChannel;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.groupId && (t.groupId = 0 | e.groupId),
            e.channelType) {
            case "CommonChannelTypeVideo":
            case 0:
                t.channelType = 0;
                break;
            case "CommonChannelTypeLive":
            case 1:
                t.channelType = 1;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.groupId = 0,
            n.channelType = t.enums === String ? "CommonChannelTypeVideo" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.channelType && e.hasOwnProperty("channelType") && (n.channelType = t.enums === String ? s.CommonChannelType[e.channelType] : e.channelType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateChannel = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.appKey = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(18).string(e.appKey),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateChannel;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.appKey = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateChannel)
                return e;
            var t = new s.HttpResponseBodyCreateChannel;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.appKey && (t.appKey = String(e.appKey)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.appKey = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckCallStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckCallStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckCallStatus)
                return e;
            var t = new s.HttpRequestBodyCheckCallStatus;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckCallStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.valid = !1,
        e.prototype.callType = 0,
        e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.valid && e.hasOwnProperty("valid") && t.uint32(8).bool(e.valid),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(26).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckCallStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.valid = e.bool();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                case 3:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCheckCallStatus)
                return e;
            var t = new s.HttpResponseBodyCheckCallStatus;
            switch (null != e.valid && (t.valid = Boolean(e.valid)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.valid = !1,
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0,
            n.channelName = ""),
            null != e.valid && e.hasOwnProperty("valid") && (n.valid = e.valid),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupCallStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupCallStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupCallStatus)
                return e;
            var t = new s.HttpRequestBodyGetGroupCallStatus;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupCallStatus = function() {
        function e(e) {
            if (this.memberInfoList = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.valid = !1,
        e.prototype.callType = 0,
        e.prototype.channelName = "",
        e.prototype.memberInfoList = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.valid && e.hasOwnProperty("valid") && t.uint32(8).bool(e.valid),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(26).string(e.channelName),
            null != e.memberInfoList && e.memberInfoList.length)
                for (var n = 0; n < e.memberInfoList.length; ++n)
                    s.CommonGroupCallMemberInfo.encode(e.memberInfoList[n], t.uint32(34).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupCallStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.valid = e.bool();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                case 3:
                    r.channelName = e.string();
                    break;
                case 4:
                    r.memberInfoList && r.memberInfoList.length || (r.memberInfoList = []),
                    r.memberInfoList.push(s.CommonGroupCallMemberInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupCallStatus)
                return e;
            var t = new s.HttpResponseBodyGetGroupCallStatus;
            switch (null != e.valid && (t.valid = Boolean(e.valid)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            if (null != e.channelName && (t.channelName = String(e.channelName)),
            e.memberInfoList) {
                if (!Array.isArray(e.memberInfoList))
                    throw TypeError(".HttpResponseBodyGetGroupCallStatus.memberInfoList: array expected");
                t.memberInfoList = [];
                for (var n = 0; n < e.memberInfoList.length; ++n) {
                    if ("object" !== typeof e.memberInfoList[n])
                        throw TypeError(".HttpResponseBodyGetGroupCallStatus.memberInfoList: object expected");
                    t.memberInfoList[n] = s.CommonGroupCallMemberInfo.fromObject(e.memberInfoList[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberInfoList = []),
            t.defaults && (n.valid = !1,
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0,
            n.channelName = ""),
            null != e.valid && e.hasOwnProperty("valid") && (n.valid = e.valid),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            e.memberInfoList && e.memberInfoList.length) {
                n.memberInfoList = [];
                for (var r = 0; r < e.memberInfoList.length; ++r)
                    n.memberInfoList[r] = s.CommonGroupCallMemberInfo.toObject(e.memberInfoList[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendRedpacketFromRouteServer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.senderId = 0,
        e.prototype.receiverId = 0,
        e.prototype.groupId = 0,
        e.prototype.description = "",
        e.prototype.count = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.totalPrice = 0,
        e.prototype.redpacketType = 0,
        e.prototype.notifyMessageData = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(16).int32(e.senderId),
            null != e.receiverId && e.hasOwnProperty("receiverId") && t.uint32(24).int32(e.receiverId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(32).int32(e.groupId),
            null != e.description && e.hasOwnProperty("description") && t.uint32(42).string(e.description),
            null != e.count && e.hasOwnProperty("count") && t.uint32(48).int32(e.count),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(56).uint64(e.timestamp),
            null != e.totalPrice && e.hasOwnProperty("totalPrice") && t.uint32(64).int32(e.totalPrice),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(72).int32(e.redpacketType),
            null != e.notifyMessageData && e.hasOwnProperty("notifyMessageData") && t.uint32(82).string(e.notifyMessageData),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendRedpacketFromRouteServer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.senderId = e.int32();
                    break;
                case 3:
                    r.receiverId = e.int32();
                    break;
                case 4:
                    r.groupId = e.int32();
                    break;
                case 5:
                    r.description = e.string();
                    break;
                case 6:
                    r.count = e.int32();
                    break;
                case 7:
                    r.timestamp = e.uint64();
                    break;
                case 8:
                    r.totalPrice = e.int32();
                    break;
                case 9:
                    r.redpacketType = e.int32();
                    break;
                case 10:
                    r.notifyMessageData = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendRedpacketFromRouteServer)
                return e;
            var t = new s.HttpRequestBodySendRedpacketFromRouteServer;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.senderId && (t.senderId = 0 | e.senderId),
            null != e.receiverId && (t.receiverId = 0 | e.receiverId),
            null != e.groupId && (t.groupId = 0 | e.groupId),
            null != e.description && (t.description = String(e.description)),
            null != e.count && (t.count = 0 | e.count),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.totalPrice && (t.totalPrice = 0 | e.totalPrice),
            null != e.redpacketType && (t.redpacketType = 0 | e.redpacketType),
            null != e.notifyMessageData && (t.notifyMessageData = String(e.notifyMessageData)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.redpacketId = "",
                n.senderId = 0,
                n.receiverId = 0,
                n.groupId = 0,
                n.description = "",
                n.count = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.totalPrice = 0,
                n.redpacketType = 0,
                n.notifyMessageData = ""
            }
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.receiverId && e.hasOwnProperty("receiverId") && (n.receiverId = e.receiverId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.count && e.hasOwnProperty("count") && (n.count = e.count),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.totalPrice && e.hasOwnProperty("totalPrice") && (n.totalPrice = e.totalPrice),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = e.redpacketType),
            null != e.notifyMessageData && e.hasOwnProperty("notifyMessageData") && (n.notifyMessageData = e.notifyMessageData),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendRedpacketFromRouteServer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendRedpacketFromRouteServer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySendRedpacketFromRouteServer ? e : new s.HttpResponseBodySendRedpacketFromRouteServer
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGrabRedpacketFromRouteServer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.receivedUserId = 0,
        e.prototype.receivedPrice = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.notifyMessageData = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.receivedUserId && e.hasOwnProperty("receivedUserId") && t.uint32(16).int32(e.receivedUserId),
            null != e.receivedPrice && e.hasOwnProperty("receivedPrice") && t.uint32(24).int32(e.receivedPrice),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(32).uint64(e.timestamp),
            null != e.notifyMessageData && e.hasOwnProperty("notifyMessageData") && t.uint32(42).string(e.notifyMessageData),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGrabRedpacketFromRouteServer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.receivedUserId = e.int32();
                    break;
                case 3:
                    r.receivedPrice = e.int32();
                    break;
                case 4:
                    r.timestamp = e.uint64();
                    break;
                case 5:
                    r.notifyMessageData = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGrabRedpacketFromRouteServer)
                return e;
            var t = new s.HttpRequestBodyGrabRedpacketFromRouteServer;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.receivedUserId && (t.receivedUserId = 0 | e.receivedUserId),
            null != e.receivedPrice && (t.receivedPrice = 0 | e.receivedPrice),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.notifyMessageData && (t.notifyMessageData = String(e.notifyMessageData)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.redpacketId = "",
                n.receivedUserId = 0,
                n.receivedPrice = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.notifyMessageData = ""
            }
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.receivedUserId && e.hasOwnProperty("receivedUserId") && (n.receivedUserId = e.receivedUserId),
            null != e.receivedPrice && e.hasOwnProperty("receivedPrice") && (n.receivedPrice = e.receivedPrice),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.notifyMessageData && e.hasOwnProperty("notifyMessageData") && (n.notifyMessageData = e.notifyMessageData),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGrabRedpacketFromRouteServer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGrabRedpacketFromRouteServer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyGrabRedpacketFromRouteServer ? e : new s.HttpResponseBodyGrabRedpacketFromRouteServer
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRebackRedpacketFromRouteServer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.rebackAmount = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.notifyMessageData = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.rebackAmount && e.hasOwnProperty("rebackAmount") && t.uint32(16).int32(e.rebackAmount),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(24).uint64(e.timestamp),
            null != e.notifyMessageData && e.hasOwnProperty("notifyMessageData") && t.uint32(34).string(e.notifyMessageData),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRebackRedpacketFromRouteServer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.rebackAmount = e.int32();
                    break;
                case 3:
                    r.timestamp = e.uint64();
                    break;
                case 4:
                    r.notifyMessageData = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRebackRedpacketFromRouteServer)
                return e;
            var t = new s.HttpRequestBodyRebackRedpacketFromRouteServer;
            return null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.rebackAmount && (t.rebackAmount = 0 | e.rebackAmount),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.notifyMessageData && (t.notifyMessageData = String(e.notifyMessageData)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.redpacketId = "",
                n.rebackAmount = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.notifyMessageData = ""
            }
            return null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.rebackAmount && e.hasOwnProperty("rebackAmount") && (n.rebackAmount = e.rebackAmount),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.notifyMessageData && e.hasOwnProperty("notifyMessageData") && (n.notifyMessageData = e.notifyMessageData),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRebackRedpacketFromRouteServer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRebackRedpacketFromRouteServer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyRebackRedpacketFromRouteServer ? e : new s.HttpResponseBodyRebackRedpacketFromRouteServer
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyTranslateTextToVoice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyTranslateTextToVoice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyTranslateTextToVoice)
                return e;
            var t = new s.HttpRequestBodyTranslateTextToVoice;
            return null != e.text && (t.text = String(e.text)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.text = ""),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyTranslateTextToVoice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(18).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyTranslateTextToVoice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 2:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyTranslateTextToVoice)
                return e;
            var t = new s.HttpResponseBodyTranslateTextToVoice;
            return null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = ""),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyTranslateVoiceToText = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.buffer = a.newBuffer([]),
        e.prototype.rate = 0,
        e.prototype.format = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.buffer && e.hasOwnProperty("buffer") && t.uint32(10).bytes(e.buffer),
            null != e.rate && e.hasOwnProperty("rate") && t.uint32(16).uint32(e.rate),
            null != e.format && e.hasOwnProperty("format") && t.uint32(26).string(e.format),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyTranslateVoiceToText;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.buffer = e.bytes();
                    break;
                case 2:
                    r.rate = e.uint32();
                    break;
                case 3:
                    r.format = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyTranslateVoiceToText)
                return e;
            var t = new s.HttpRequestBodyTranslateVoiceToText;
            return null != e.buffer && ("string" === typeof e.buffer ? a.base64.decode(e.buffer, t.buffer = a.newBuffer(a.base64.length(e.buffer)), 0) : e.buffer.length && (t.buffer = e.buffer)),
            null != e.rate && (t.rate = e.rate >>> 0),
            null != e.format && (t.format = String(e.format)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (t.bytes === String ? n.buffer = "" : (n.buffer = [],
            t.bytes !== Array && (n.buffer = a.newBuffer(n.buffer))),
            n.rate = 0,
            n.format = ""),
            null != e.buffer && e.hasOwnProperty("buffer") && (n.buffer = t.bytes === String ? a.base64.encode(e.buffer, 0, e.buffer.length) : t.bytes === Array ? Array.prototype.slice.call(e.buffer) : e.buffer),
            null != e.rate && e.hasOwnProperty("rate") && (n.rate = e.rate),
            null != e.format && e.hasOwnProperty("format") && (n.format = e.format),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyTranslateVoiceToText = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(18).string(e.text),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyTranslateVoiceToText;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 2:
                    r.text = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyTranslateVoiceToText)
                return e;
            var t = new s.HttpResponseBodyTranslateVoiceToText;
            return null != e.text && (t.text = String(e.text)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.text = ""),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetTabInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetTabInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetTabInfo ? e : new s.HttpRequestBodyGetTabInfo
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpAppItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.itemId = 0,
        e.prototype.tabId = 0,
        e.prototype.name = "",
        e.prototype.link = "",
        e.prototype.description = "",
        e.prototype.iconUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.itemId && e.hasOwnProperty("itemId") && t.uint32(8).uint32(e.itemId),
            null != e.tabId && e.hasOwnProperty("tabId") && t.uint32(16).uint32(e.tabId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(26).string(e.name),
            null != e.link && e.hasOwnProperty("link") && t.uint32(34).string(e.link),
            null != e.description && e.hasOwnProperty("description") && t.uint32(42).string(e.description),
            null != e.iconUrl && e.hasOwnProperty("iconUrl") && t.uint32(50).string(e.iconUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpAppItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.itemId = e.uint32();
                    break;
                case 2:
                    r.tabId = e.uint32();
                    break;
                case 3:
                    r.name = e.string();
                    break;
                case 4:
                    r.link = e.string();
                    break;
                case 5:
                    r.description = e.string();
                    break;
                case 6:
                    r.iconUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpAppItem)
                return e;
            var t = new s.HttpAppItem;
            return null != e.itemId && (t.itemId = e.itemId >>> 0),
            null != e.tabId && (t.tabId = e.tabId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.link && (t.link = String(e.link)),
            null != e.description && (t.description = String(e.description)),
            null != e.iconUrl && (t.iconUrl = String(e.iconUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.itemId = 0,
            n.tabId = 0,
            n.name = "",
            n.link = "",
            n.description = "",
            n.iconUrl = ""),
            null != e.itemId && e.hasOwnProperty("itemId") && (n.itemId = e.itemId),
            null != e.tabId && e.hasOwnProperty("tabId") && (n.tabId = e.tabId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.link && e.hasOwnProperty("link") && (n.link = e.link),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.iconUrl && e.hasOwnProperty("iconUrl") && (n.iconUrl = e.iconUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpTabItem = function() {
        function e(e) {
            if (this.appItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.tabId = 0,
        e.prototype.tabType = 0,
        e.prototype.name = "",
        e.prototype.link = "",
        e.prototype.appShowType = 0,
        e.prototype.iconUrl = "",
        e.prototype.appItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.tabId && e.hasOwnProperty("tabId") && t.uint32(8).uint32(e.tabId),
            null != e.tabType && e.hasOwnProperty("tabType") && t.uint32(16).uint32(e.tabType),
            null != e.name && e.hasOwnProperty("name") && t.uint32(26).string(e.name),
            null != e.link && e.hasOwnProperty("link") && t.uint32(34).string(e.link),
            null != e.appShowType && e.hasOwnProperty("appShowType") && t.uint32(40).uint32(e.appShowType),
            null != e.iconUrl && e.hasOwnProperty("iconUrl") && t.uint32(50).string(e.iconUrl),
            null != e.appItems && e.appItems.length)
                for (var n = 0; n < e.appItems.length; ++n)
                    s.HttpAppItem.encode(e.appItems[n], t.uint32(58).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpTabItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.tabId = e.uint32();
                    break;
                case 2:
                    r.tabType = e.uint32();
                    break;
                case 3:
                    r.name = e.string();
                    break;
                case 4:
                    r.link = e.string();
                    break;
                case 5:
                    r.appShowType = e.uint32();
                    break;
                case 6:
                    r.iconUrl = e.string();
                    break;
                case 7:
                    r.appItems && r.appItems.length || (r.appItems = []),
                    r.appItems.push(s.HttpAppItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpTabItem)
                return e;
            var t = new s.HttpTabItem;
            if (null != e.tabId && (t.tabId = e.tabId >>> 0),
            null != e.tabType && (t.tabType = e.tabType >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.link && (t.link = String(e.link)),
            null != e.appShowType && (t.appShowType = e.appShowType >>> 0),
            null != e.iconUrl && (t.iconUrl = String(e.iconUrl)),
            e.appItems) {
                if (!Array.isArray(e.appItems))
                    throw TypeError(".HttpTabItem.appItems: array expected");
                t.appItems = [];
                for (var n = 0; n < e.appItems.length; ++n) {
                    if ("object" !== typeof e.appItems[n])
                        throw TypeError(".HttpTabItem.appItems: object expected");
                    t.appItems[n] = s.HttpAppItem.fromObject(e.appItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.appItems = []),
            t.defaults && (n.tabId = 0,
            n.tabType = 0,
            n.name = "",
            n.link = "",
            n.appShowType = 0,
            n.iconUrl = ""),
            null != e.tabId && e.hasOwnProperty("tabId") && (n.tabId = e.tabId),
            null != e.tabType && e.hasOwnProperty("tabType") && (n.tabType = e.tabType),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.link && e.hasOwnProperty("link") && (n.link = e.link),
            null != e.appShowType && e.hasOwnProperty("appShowType") && (n.appShowType = e.appShowType),
            null != e.iconUrl && e.hasOwnProperty("iconUrl") && (n.iconUrl = e.iconUrl),
            e.appItems && e.appItems.length) {
                n.appItems = [];
                for (var r = 0; r < e.appItems.length; ++r)
                    n.appItems[r] = s.HttpAppItem.toObject(e.appItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetTabInfo = function() {
        function e(e) {
            if (this.tabItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = 0,
        e.prototype.tabItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint32(e.version),
            null != e.tabItems && e.tabItems.length)
                for (var n = 0; n < e.tabItems.length; ++n)
                    s.HttpTabItem.encode(e.tabItems[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetTabInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint32();
                    break;
                case 2:
                    r.tabItems && r.tabItems.length || (r.tabItems = []),
                    r.tabItems.push(s.HttpTabItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetTabInfo)
                return e;
            var t = new s.HttpResponseBodyGetTabInfo;
            if (null != e.version && (t.version = e.version >>> 0),
            e.tabItems) {
                if (!Array.isArray(e.tabItems))
                    throw TypeError(".HttpResponseBodyGetTabInfo.tabItems: array expected");
                t.tabItems = [];
                for (var n = 0; n < e.tabItems.length; ++n) {
                    if ("object" !== typeof e.tabItems[n])
                        throw TypeError(".HttpResponseBodyGetTabInfo.tabItems: object expected");
                    t.tabItems[n] = s.HttpTabItem.fromObject(e.tabItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.tabItems = []),
            t.defaults && (n.version = 0),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            e.tabItems && e.tabItems.length) {
                n.tabItems = [];
                for (var r = 0; r < e.tabItems.length; ++r)
                    n.tabItems[r] = s.HttpTabItem.toObject(e.tabItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUrlContentExtract = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUrlContentExtract;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetUrlContentExtract)
                return e;
            var t = new s.HttpRequestBodyGetUrlContentExtract;
            return null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = ""),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUrlContentExtract = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.content = "",
        e.prototype.imageUrl = "",
        e.prototype.imageIcon = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.content && e.hasOwnProperty("content") && t.uint32(18).string(e.content),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && t.uint32(26).string(e.imageUrl),
            null != e.imageIcon && e.hasOwnProperty("imageIcon") && t.uint32(34).string(e.imageIcon),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUrlContentExtract;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.content = e.string();
                    break;
                case 3:
                    r.imageUrl = e.string();
                    break;
                case 4:
                    r.imageIcon = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUrlContentExtract)
                return e;
            var t = new s.HttpResponseBodyGetUrlContentExtract;
            return null != e.title && (t.title = String(e.title)),
            null != e.content && (t.content = String(e.content)),
            null != e.imageUrl && (t.imageUrl = String(e.imageUrl)),
            null != e.imageIcon && (t.imageIcon = String(e.imageIcon)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.title = "",
            n.content = "",
            n.imageUrl = "",
            n.imageIcon = ""),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && (n.imageUrl = e.imageUrl),
            null != e.imageIcon && e.hasOwnProperty("imageIcon") && (n.imageIcon = e.imageIcon),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpListenLocationConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.configId = 0,
        e.prototype.range = 0,
        e.prototype.coordinate = null,
        e.prototype.type = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.configId && e.hasOwnProperty("configId") && t.uint32(8).uint32(e.configId),
            null != e.range && e.hasOwnProperty("range") && t.uint32(16).uint32(e.range),
            null != e.coordinate && e.hasOwnProperty("coordinate") && s.CommonListenCoordinate.encode(e.coordinate, t.uint32(26).fork()).ldelim(),
            null != e.type && e.hasOwnProperty("type") && t.uint32(32).int32(e.type),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpListenLocationConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.configId = e.uint32();
                    break;
                case 2:
                    r.range = e.uint32();
                    break;
                case 3:
                    r.coordinate = s.CommonListenCoordinate.decode(e, e.uint32());
                    break;
                case 4:
                    r.type = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpListenLocationConfig)
                return e;
            var t = new s.HttpListenLocationConfig;
            if (null != e.configId && (t.configId = e.configId >>> 0),
            null != e.range && (t.range = e.range >>> 0),
            null != e.coordinate) {
                if ("object" !== typeof e.coordinate)
                    throw TypeError(".HttpListenLocationConfig.coordinate: object expected");
                t.coordinate = s.CommonListenCoordinate.fromObject(e.coordinate)
            }
            switch (e.type) {
            case "CommonListenTypeUndefined":
            case 0:
                t.type = 0;
                break;
            case "CommonListenTypeIn":
            case 1:
                t.type = 1;
                break;
            case "CommonListenTypeOut":
            case 2:
                t.type = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.configId = 0,
            n.range = 0,
            n.coordinate = null,
            n.type = t.enums === String ? "CommonListenTypeUndefined" : 0),
            null != e.configId && e.hasOwnProperty("configId") && (n.configId = e.configId),
            null != e.range && e.hasOwnProperty("range") && (n.range = e.range),
            null != e.coordinate && e.hasOwnProperty("coordinate") && (n.coordinate = s.CommonListenCoordinate.toObject(e.coordinate, t)),
            null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? s.CommonListenType[e.type] : e.type),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpListenWifiConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.configId = 0,
        e.prototype.name = "",
        e.prototype.address = "",
        e.prototype.wifiType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.configId && e.hasOwnProperty("configId") && t.uint32(8).uint32(e.configId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.address && e.hasOwnProperty("address") && t.uint32(26).string(e.address),
            null != e.wifiType && e.hasOwnProperty("wifiType") && t.uint32(32).int32(e.wifiType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpListenWifiConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.configId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.address = e.string();
                    break;
                case 4:
                    r.wifiType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpListenWifiConfig)
                return e;
            var t = new s.HttpListenWifiConfig;
            switch (null != e.configId && (t.configId = e.configId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.address && (t.address = String(e.address)),
            e.wifiType) {
            case "CommonListenWIFITypeUndefined":
            case 0:
                t.wifiType = 0;
                break;
            case "CommonListenWIFITypeConnect":
            case 1:
                t.wifiType = 1;
                break;
            case "CommonListenWIFITypeDisconnect":
            case 2:
                t.wifiType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.configId = 0,
            n.name = "",
            n.address = "",
            n.wifiType = t.enums === String ? "CommonListenWIFITypeUndefined" : 0),
            null != e.configId && e.hasOwnProperty("configId") && (n.configId = e.configId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.address && e.hasOwnProperty("address") && (n.address = e.address),
            null != e.wifiType && e.hasOwnProperty("wifiType") && (n.wifiType = t.enums === String ? s.CommonListenWIFIType[e.wifiType] : e.wifiType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetListenConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetListenConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetListenConfig ? e : new s.HttpRequestBodyGetListenConfig
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetListenConfig = function() {
        function e(e) {
            if (this.wifi = [],
            this.location = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.wifi = a.emptyArray,
        e.prototype.location = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.wifi && e.wifi.length)
                for (var n = 0; n < e.wifi.length; ++n)
                    s.HttpListenWifiConfig.encode(e.wifi[n], t.uint32(10).fork()).ldelim();
            if (null != e.location && e.location.length)
                for (n = 0; n < e.location.length; ++n)
                    s.HttpListenLocationConfig.encode(e.location[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetListenConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.wifi && r.wifi.length || (r.wifi = []),
                    r.wifi.push(s.HttpListenWifiConfig.decode(e, e.uint32()));
                    break;
                case 2:
                    r.location && r.location.length || (r.location = []),
                    r.location.push(s.HttpListenLocationConfig.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetListenConfig)
                return e;
            var t = new s.HttpResponseBodyGetListenConfig;
            if (e.wifi) {
                if (!Array.isArray(e.wifi))
                    throw TypeError(".HttpResponseBodyGetListenConfig.wifi: array expected");
                t.wifi = [];
                for (var n = 0; n < e.wifi.length; ++n) {
                    if ("object" !== typeof e.wifi[n])
                        throw TypeError(".HttpResponseBodyGetListenConfig.wifi: object expected");
                    t.wifi[n] = s.HttpListenWifiConfig.fromObject(e.wifi[n])
                }
            }
            if (e.location) {
                if (!Array.isArray(e.location))
                    throw TypeError(".HttpResponseBodyGetListenConfig.location: array expected");
                t.location = [];
                for (n = 0; n < e.location.length; ++n) {
                    if ("object" !== typeof e.location[n])
                        throw TypeError(".HttpResponseBodyGetListenConfig.location: object expected");
                    t.location[n] = s.HttpListenLocationConfig.fromObject(e.location[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.wifi = [],
            n.location = []),
            e.wifi && e.wifi.length) {
                n.wifi = [];
                for (var r = 0; r < e.wifi.length; ++r)
                    n.wifi[r] = s.HttpListenWifiConfig.toObject(e.wifi[r], t)
            }
            if (e.location && e.location.length) {
                n.location = [];
                for (r = 0; r < e.location.length; ++r)
                    n.location[r] = s.HttpListenLocationConfig.toObject(e.location[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyTriggerListen = function() {
        function e(e) {
            if (this.configIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.configIds = a.emptyArray,
        e.prototype.name = "",
        e.prototype.address = "",
        e.prototype.coordinate = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.configIds && e.configIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.configIds.length; ++n)
                    t.uint32(e.configIds[n]);
                t.ldelim()
            }
            return null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.address && e.hasOwnProperty("address") && t.uint32(26).string(e.address),
            null != e.coordinate && e.hasOwnProperty("coordinate") && s.CommonListenCoordinate.encode(e.coordinate, t.uint32(34).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyTriggerListen;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.configIds && r.configIds.length || (r.configIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.configIds.push(e.uint32())
                    } else
                        r.configIds.push(e.uint32());
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.address = e.string();
                    break;
                case 4:
                    r.coordinate = s.CommonListenCoordinate.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyTriggerListen)
                return e;
            var t = new s.HttpRequestBodyTriggerListen;
            if (e.configIds) {
                if (!Array.isArray(e.configIds))
                    throw TypeError(".HttpRequestBodyTriggerListen.configIds: array expected");
                t.configIds = [];
                for (var n = 0; n < e.configIds.length; ++n)
                    t.configIds[n] = e.configIds[n] >>> 0
            }
            if (null != e.name && (t.name = String(e.name)),
            null != e.address && (t.address = String(e.address)),
            null != e.coordinate) {
                if ("object" !== typeof e.coordinate)
                    throw TypeError(".HttpRequestBodyTriggerListen.coordinate: object expected");
                t.coordinate = s.CommonListenCoordinate.fromObject(e.coordinate)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.configIds = []),
            t.defaults && (n.name = "",
            n.address = "",
            n.coordinate = null),
            e.configIds && e.configIds.length) {
                n.configIds = [];
                for (var r = 0; r < e.configIds.length; ++r)
                    n.configIds[r] = e.configIds[r]
            }
            return null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.address && e.hasOwnProperty("address") && (n.address = e.address),
            null != e.coordinate && e.hasOwnProperty("coordinate") && (n.coordinate = s.CommonListenCoordinate.toObject(e.coordinate, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyTriggerListen = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyTriggerListen;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyTriggerListen ? e : new s.HttpResponseBodyTriggerListen
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetHbOfficeAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetHbOfficeAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetHbOfficeAccount ? e : new s.HttpRequestBodyGetHbOfficeAccount
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestResponseGetHbOfficeAccount = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.name = "",
        e.prototype.email = "",
        e.prototype.phoneNumber = "",
        e.prototype.avatar = "",
        e.prototype.hbOfficeUserId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.name && e.hasOwnProperty("name") && t.uint32(10).string(e.name),
            null != e.email && e.hasOwnProperty("email") && t.uint32(18).string(e.email),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && t.uint32(26).string(e.phoneNumber),
            null != e.avatar && e.hasOwnProperty("avatar") && t.uint32(34).string(e.avatar),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && t.uint32(40).uint32(e.hbOfficeUserId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestResponseGetHbOfficeAccount;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.name = e.string();
                    break;
                case 2:
                    r.email = e.string();
                    break;
                case 3:
                    r.phoneNumber = e.string();
                    break;
                case 4:
                    r.avatar = e.string();
                    break;
                case 5:
                    r.hbOfficeUserId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestResponseGetHbOfficeAccount)
                return e;
            var t = new s.HttpRequestResponseGetHbOfficeAccount;
            return null != e.name && (t.name = String(e.name)),
            null != e.email && (t.email = String(e.email)),
            null != e.phoneNumber && (t.phoneNumber = String(e.phoneNumber)),
            null != e.avatar && (t.avatar = String(e.avatar)),
            null != e.hbOfficeUserId && (t.hbOfficeUserId = e.hbOfficeUserId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.name = "",
            n.email = "",
            n.phoneNumber = "",
            n.avatar = "",
            n.hbOfficeUserId = 0),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.email && e.hasOwnProperty("email") && (n.email = e.email),
            null != e.phoneNumber && e.hasOwnProperty("phoneNumber") && (n.phoneNumber = e.phoneNumber),
            null != e.avatar && e.hasOwnProperty("avatar") && (n.avatar = e.avatar),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && (n.hbOfficeUserId = e.hbOfficeUserId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetTaskCreatedSync = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.createdSync = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.createdSync && e.hasOwnProperty("createdSync") && t.uint32(24).bool(e.createdSync),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetTaskCreatedSync;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.createdSync = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetTaskCreatedSync)
                return e;
            var t = new s.HttpRequestBodySetTaskCreatedSync;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.createdSync && (t.createdSync = Boolean(e.createdSync)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.createdSync = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.createdSync && e.hasOwnProperty("createdSync") && (n.createdSync = e.createdSync),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetTaskCreatedSync = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetTaskCreatedSync;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetTaskCreatedSync ? e : new s.HttpResponseBodySetTaskCreatedSync
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetTaskFinishSync = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.finishSync = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.finishSync && e.hasOwnProperty("finishSync") && t.uint32(24).bool(e.finishSync),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetTaskFinishSync;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.finishSync = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetTaskFinishSync)
                return e;
            var t = new s.HttpRequestBodySetTaskFinishSync;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.finishSync && (t.finishSync = Boolean(e.finishSync)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.finishSync = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.finishSync && e.hasOwnProperty("finishSync") && (n.finishSync = e.finishSync),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetTaskFinishSync = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetTaskFinishSync;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetTaskFinishSync ? e : new s.HttpResponseBodySetTaskFinishSync
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetTaskSetting = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetTaskSetting;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetTaskSetting)
                return e;
            var t = new s.HttpRequestBodyGetTaskSetting;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetTaskSetting = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.createdSync = !1,
        e.prototype.finishSync = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.createdSync && e.hasOwnProperty("createdSync") && t.uint32(8).bool(e.createdSync),
            null != e.finishSync && e.hasOwnProperty("finishSync") && t.uint32(16).bool(e.finishSync),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetTaskSetting;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.createdSync = e.bool();
                    break;
                case 2:
                    r.finishSync = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetTaskSetting)
                return e;
            var t = new s.HttpResponseBodyGetTaskSetting;
            return null != e.createdSync && (t.createdSync = Boolean(e.createdSync)),
            null != e.finishSync && (t.finishSync = Boolean(e.finishSync)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.createdSync = !1,
            n.finishSync = !1),
            null != e.createdSync && e.hasOwnProperty("createdSync") && (n.createdSync = e.createdSync),
            null != e.finishSync && e.hasOwnProperty("finishSync") && (n.finishSync = e.finishSync),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateTask = function() {
        function e(e) {
            if (this.receiverMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.content = "",
        e.prototype.receiverMemberIds = a.emptyArray,
        e.prototype.preSortIndex = 0,
        e.prototype.taskType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.content && e.hasOwnProperty("content") && t.uint32(26).string(e.content),
            null != e.receiverMemberIds && e.receiverMemberIds.length)
                for (var n = 0; n < e.receiverMemberIds.length; ++n)
                    s.CommonAtUserInfo.encode(e.receiverMemberIds[n], t.uint32(34).fork()).ldelim();
            return null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && t.uint32(40).uint32(e.preSortIndex),
            null != e.taskType && e.hasOwnProperty("taskType") && t.uint32(48).int32(e.taskType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.content = e.string();
                    break;
                case 4:
                    r.receiverMemberIds && r.receiverMemberIds.length || (r.receiverMemberIds = []),
                    r.receiverMemberIds.push(s.CommonAtUserInfo.decode(e, e.uint32()));
                    break;
                case 5:
                    r.preSortIndex = e.uint32();
                    break;
                case 6:
                    r.taskType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateTask)
                return e;
            var t = new s.HttpRequestBodyCreateTask;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.content && (t.content = String(e.content)),
            e.receiverMemberIds) {
                if (!Array.isArray(e.receiverMemberIds))
                    throw TypeError(".HttpRequestBodyCreateTask.receiverMemberIds: array expected");
                t.receiverMemberIds = [];
                for (var n = 0; n < e.receiverMemberIds.length; ++n) {
                    if ("object" !== typeof e.receiverMemberIds[n])
                        throw TypeError(".HttpRequestBodyCreateTask.receiverMemberIds: object expected");
                    t.receiverMemberIds[n] = s.CommonAtUserInfo.fromObject(e.receiverMemberIds[n])
                }
            }
            switch (null != e.preSortIndex && (t.preSortIndex = e.preSortIndex >>> 0),
            e.taskType) {
            case "CommonTaskTypeNone":
            case 0:
                t.taskType = 0;
                break;
            case "CommonTaskTypeTask":
            case 1:
                t.taskType = 1;
                break;
            case "CommonTaskTypeGroup":
            case 2:
                t.taskType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.receiverMemberIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.content = "",
            n.preSortIndex = 0,
            n.taskType = t.enums === String ? "CommonTaskTypeNone" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            e.receiverMemberIds && e.receiverMemberIds.length) {
                n.receiverMemberIds = [];
                for (var r = 0; r < e.receiverMemberIds.length; ++r)
                    n.receiverMemberIds[r] = s.CommonAtUserInfo.toObject(e.receiverMemberIds[r], t)
            }
            return null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && (n.preSortIndex = e.preSortIndex),
            null != e.taskType && e.hasOwnProperty("taskType") && (n.taskType = t.enums === String ? s.CommonTaskType[e.taskType] : e.taskType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateTask = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskInfo = null,
        e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.taskInfo && e.hasOwnProperty("taskInfo") && s.HttpTaskInfo.encode(e.taskInfo, t.uint32(10).fork()).ldelim(),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(16).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(24).int32(e.actionType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskInfo = s.HttpTaskInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.taskConversationVersion = e.uint32();
                    break;
                case 3:
                    r.actionType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateTask)
                return e;
            var t = new s.HttpResponseBodyCreateTask;
            if (null != e.taskInfo) {
                if ("object" !== typeof e.taskInfo)
                    throw TypeError(".HttpResponseBodyCreateTask.taskInfo: object expected");
                t.taskInfo = s.HttpTaskInfo.fromObject(e.taskInfo)
            }
            switch (null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.taskInfo = null,
            n.taskConversationVersion = 0,
            n.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0),
            null != e.taskInfo && e.hasOwnProperty("taskInfo") && (n.taskInfo = s.HttpTaskInfo.toObject(e.taskInfo, t)),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchCreateTask = function() {
        function e(e) {
            if (this.receiverMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.content = "",
        e.prototype.receiverMemberIds = a.emptyArray,
        e.prototype.preSortIndex = 0,
        e.prototype.taskType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.content && e.hasOwnProperty("content") && t.uint32(26).string(e.content),
            null != e.receiverMemberIds && e.receiverMemberIds.length)
                for (var n = 0; n < e.receiverMemberIds.length; ++n)
                    s.CommonAtUserInfo.encode(e.receiverMemberIds[n], t.uint32(34).fork()).ldelim();
            return null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && t.uint32(40).uint32(e.preSortIndex),
            null != e.taskType && e.hasOwnProperty("taskType") && t.uint32(48).int32(e.taskType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchCreateTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.content = e.string();
                    break;
                case 4:
                    r.receiverMemberIds && r.receiverMemberIds.length || (r.receiverMemberIds = []),
                    r.receiverMemberIds.push(s.CommonAtUserInfo.decode(e, e.uint32()));
                    break;
                case 5:
                    r.preSortIndex = e.uint32();
                    break;
                case 6:
                    r.taskType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchCreateTask)
                return e;
            var t = new s.HttpRequestBodyBatchCreateTask;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.content && (t.content = String(e.content)),
            e.receiverMemberIds) {
                if (!Array.isArray(e.receiverMemberIds))
                    throw TypeError(".HttpRequestBodyBatchCreateTask.receiverMemberIds: array expected");
                t.receiverMemberIds = [];
                for (var n = 0; n < e.receiverMemberIds.length; ++n) {
                    if ("object" !== typeof e.receiverMemberIds[n])
                        throw TypeError(".HttpRequestBodyBatchCreateTask.receiverMemberIds: object expected");
                    t.receiverMemberIds[n] = s.CommonAtUserInfo.fromObject(e.receiverMemberIds[n])
                }
            }
            switch (null != e.preSortIndex && (t.preSortIndex = e.preSortIndex >>> 0),
            e.taskType) {
            case "CommonTaskTypeNone":
            case 0:
                t.taskType = 0;
                break;
            case "CommonTaskTypeTask":
            case 1:
                t.taskType = 1;
                break;
            case "CommonTaskTypeGroup":
            case 2:
                t.taskType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.receiverMemberIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.content = "",
            n.preSortIndex = 0,
            n.taskType = t.enums === String ? "CommonTaskTypeNone" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            e.receiverMemberIds && e.receiverMemberIds.length) {
                n.receiverMemberIds = [];
                for (var r = 0; r < e.receiverMemberIds.length; ++r)
                    n.receiverMemberIds[r] = s.CommonAtUserInfo.toObject(e.receiverMemberIds[r], t)
            }
            return null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && (n.preSortIndex = e.preSortIndex),
            null != e.taskType && e.hasOwnProperty("taskType") && (n.taskType = t.enums === String ? s.CommonTaskType[e.taskType] : e.taskType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchCreateTask = function() {
        function e(e) {
            if (this.taskInfo = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskInfo = a.emptyArray,
        e.prototype.taskConversationVersion = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskInfo && e.taskInfo.length)
                for (var n = 0; n < e.taskInfo.length; ++n)
                    s.HttpTaskInfo.encode(e.taskInfo[n], t.uint32(10).fork()).ldelim();
            return null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(16).uint32(e.taskConversationVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchCreateTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskInfo && r.taskInfo.length || (r.taskInfo = []),
                    r.taskInfo.push(s.HttpTaskInfo.decode(e, e.uint32()));
                    break;
                case 2:
                    r.taskConversationVersion = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchCreateTask)
                return e;
            var t = new s.HttpResponseBodyBatchCreateTask;
            if (e.taskInfo) {
                if (!Array.isArray(e.taskInfo))
                    throw TypeError(".HttpResponseBodyBatchCreateTask.taskInfo: array expected");
                t.taskInfo = [];
                for (var n = 0; n < e.taskInfo.length; ++n) {
                    if ("object" !== typeof e.taskInfo[n])
                        throw TypeError(".HttpResponseBodyBatchCreateTask.taskInfo: object expected");
                    t.taskInfo[n] = s.HttpTaskInfo.fromObject(e.taskInfo[n])
                }
            }
            return null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.taskInfo = []),
            t.defaults && (n.taskConversationVersion = 0),
            e.taskInfo && e.taskInfo.length) {
                n.taskInfo = [];
                for (var r = 0; r < e.taskInfo.length; ++r)
                    n.taskInfo[r] = s.HttpTaskInfo.toObject(e.taskInfo[r], t)
            }
            return null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateTask = function() {
        function e(e) {
            if (this.receiverMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskId = 0,
        e.prototype.content = "",
        e.prototype.receiverMemberIds = a.emptyArray,
        e.prototype.version = 0,
        e.prototype.lockToken = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(24).uint32(e.taskId),
            null != e.content && e.hasOwnProperty("content") && t.uint32(34).string(e.content),
            null != e.receiverMemberIds && e.receiverMemberIds.length)
                for (var n = 0; n < e.receiverMemberIds.length; ++n)
                    s.CommonAtUserInfo.encode(e.receiverMemberIds[n], t.uint32(42).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(48).uint32(e.version),
            null != e.lockToken && e.hasOwnProperty("lockToken") && t.uint32(56).uint32(e.lockToken),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.taskId = e.uint32();
                    break;
                case 4:
                    r.content = e.string();
                    break;
                case 5:
                    r.receiverMemberIds && r.receiverMemberIds.length || (r.receiverMemberIds = []),
                    r.receiverMemberIds.push(s.CommonAtUserInfo.decode(e, e.uint32()));
                    break;
                case 6:
                    r.version = e.uint32();
                    break;
                case 7:
                    r.lockToken = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateTask)
                return e;
            var t = new s.HttpRequestBodyUpdateTask;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.content && (t.content = String(e.content)),
            e.receiverMemberIds) {
                if (!Array.isArray(e.receiverMemberIds))
                    throw TypeError(".HttpRequestBodyUpdateTask.receiverMemberIds: array expected");
                t.receiverMemberIds = [];
                for (var n = 0; n < e.receiverMemberIds.length; ++n) {
                    if ("object" !== typeof e.receiverMemberIds[n])
                        throw TypeError(".HttpRequestBodyUpdateTask.receiverMemberIds: object expected");
                    t.receiverMemberIds[n] = s.CommonAtUserInfo.fromObject(e.receiverMemberIds[n])
                }
            }
            return null != e.version && (t.version = e.version >>> 0),
            null != e.lockToken && (t.lockToken = e.lockToken >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.receiverMemberIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.taskId = 0,
            n.content = "",
            n.version = 0,
            n.lockToken = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            e.receiverMemberIds && e.receiverMemberIds.length) {
                n.receiverMemberIds = [];
                for (var r = 0; r < e.receiverMemberIds.length; ++r)
                    n.receiverMemberIds[r] = s.CommonAtUserInfo.toObject(e.receiverMemberIds[r], t)
            }
            return null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.lockToken && e.hasOwnProperty("lockToken") && (n.lockToken = e.lockToken),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateTask = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskInfo = null,
        e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.taskInfo && e.hasOwnProperty("taskInfo") && s.HttpTaskInfo.encode(e.taskInfo, t.uint32(10).fork()).ldelim(),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(16).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(24).int32(e.actionType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskInfo = s.HttpTaskInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.taskConversationVersion = e.uint32();
                    break;
                case 3:
                    r.actionType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUpdateTask)
                return e;
            var t = new s.HttpResponseBodyUpdateTask;
            if (null != e.taskInfo) {
                if ("object" !== typeof e.taskInfo)
                    throw TypeError(".HttpResponseBodyUpdateTask.taskInfo: object expected");
                t.taskInfo = s.HttpTaskInfo.fromObject(e.taskInfo)
            }
            switch (null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.taskInfo = null,
            n.taskConversationVersion = 0,
            n.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0),
            null != e.taskInfo && e.hasOwnProperty("taskInfo") && (n.taskInfo = s.HttpTaskInfo.toObject(e.taskInfo, t)),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFinishTasks = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.onlyMyTask = !1,
        e.prototype.taskId = 0,
        e.prototype.limit = 0,
        e.prototype.directionType = 0,
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.onlyMyTask && e.hasOwnProperty("onlyMyTask") && t.uint32(24).bool(e.onlyMyTask),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(32).uint32(e.taskId),
            null != e.limit && e.hasOwnProperty("limit") && t.uint32(40).uint32(e.limit),
            null != e.directionType && e.hasOwnProperty("directionType") && t.uint32(48).int32(e.directionType),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(56).uint64(e.timestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFinishTasks;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.onlyMyTask = e.bool();
                    break;
                case 4:
                    r.taskId = e.uint32();
                    break;
                case 5:
                    r.limit = e.uint32();
                    break;
                case 6:
                    r.directionType = e.int32();
                    break;
                case 7:
                    r.timestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetFinishTasks)
                return e;
            var t = new s.HttpRequestBodyGetFinishTasks;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            switch (null != e.onlyMyTask && (t.onlyMyTask = Boolean(e.onlyMyTask)),
            null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.limit && (t.limit = e.limit >>> 0),
            e.directionType) {
            case "CommonDirectionTypeNone":
            case 0:
                t.directionType = 0;
                break;
            case "CommonDirectionTypeUp":
            case 1:
                t.directionType = 1;
                break;
            case "CommonDirectionTypeDown":
            case 2:
                t.directionType = 2;
                break
            }
            return null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                n.onlyMyTask = !1,
                n.taskId = 0,
                n.limit = 0,
                n.directionType = t.enums === String ? "CommonDirectionTypeNone" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.onlyMyTask && e.hasOwnProperty("onlyMyTask") && (n.onlyMyTask = e.onlyMyTask),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.limit && e.hasOwnProperty("limit") && (n.limit = e.limit),
            null != e.directionType && e.hasOwnProperty("directionType") && (n.directionType = t.enums === String ? s.CommonDirectionType[e.directionType] : e.directionType),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFinishTasks = function() {
        function e(e) {
            if (this.taskItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskItems = a.emptyArray,
        e.prototype.hasMore = !1,
        e.prototype.directionType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskItems && e.taskItems.length)
                for (var n = 0; n < e.taskItems.length; ++n)
                    s.HttpTaskInfo.encode(e.taskItems[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            null != e.directionType && e.hasOwnProperty("directionType") && t.uint32(24).int32(e.directionType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFinishTasks;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskItems && r.taskItems.length || (r.taskItems = []),
                    r.taskItems.push(s.HttpTaskInfo.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                case 3:
                    r.directionType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFinishTasks)
                return e;
            var t = new s.HttpResponseBodyGetFinishTasks;
            if (e.taskItems) {
                if (!Array.isArray(e.taskItems))
                    throw TypeError(".HttpResponseBodyGetFinishTasks.taskItems: array expected");
                t.taskItems = [];
                for (var n = 0; n < e.taskItems.length; ++n) {
                    if ("object" !== typeof e.taskItems[n])
                        throw TypeError(".HttpResponseBodyGetFinishTasks.taskItems: object expected");
                    t.taskItems[n] = s.HttpTaskInfo.fromObject(e.taskItems[n])
                }
            }
            switch (null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            e.directionType) {
            case "CommonDirectionTypeNone":
            case 0:
                t.directionType = 0;
                break;
            case "CommonDirectionTypeUp":
            case 1:
                t.directionType = 1;
                break;
            case "CommonDirectionTypeDown":
            case 2:
                t.directionType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.taskItems = []),
            t.defaults && (n.hasMore = !1,
            n.directionType = t.enums === String ? "CommonDirectionTypeNone" : 0),
            e.taskItems && e.taskItems.length) {
                n.taskItems = [];
                for (var r = 0; r < e.taskItems.length; ++r)
                    n.taskItems[r] = s.HttpTaskInfo.toObject(e.taskItems[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            null != e.directionType && e.hasOwnProperty("directionType") && (n.directionType = t.enums === String ? s.CommonDirectionType[e.directionType] : e.directionType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetUnFinishTasks = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.onlyMyTask = !1,
        e.prototype.taskConversationVersion = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.onlyMyTask && e.hasOwnProperty("onlyMyTask") && t.uint32(24).bool(e.onlyMyTask),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(32).uint32(e.taskConversationVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetUnFinishTasks;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.onlyMyTask = e.bool();
                    break;
                case 4:
                    r.taskConversationVersion = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetUnFinishTasks)
                return e;
            var t = new s.HttpRequestBodyGetUnFinishTasks;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.onlyMyTask && (t.onlyMyTask = Boolean(e.onlyMyTask)),
            null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.onlyMyTask = !1,
            n.taskConversationVersion = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.onlyMyTask && e.hasOwnProperty("onlyMyTask") && (n.onlyMyTask = e.onlyMyTask),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetUnFinishTasks = function() {
        function e(e) {
            if (this.taskItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskItems = a.emptyArray,
        e.prototype.taskConversationVersion = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskItems && e.taskItems.length)
                for (var n = 0; n < e.taskItems.length; ++n)
                    s.HttpTaskInfo.encode(e.taskItems[n], t.uint32(10).fork()).ldelim();
            return null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(16).uint32(e.taskConversationVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetUnFinishTasks;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskItems && r.taskItems.length || (r.taskItems = []),
                    r.taskItems.push(s.HttpTaskInfo.decode(e, e.uint32()));
                    break;
                case 2:
                    r.taskConversationVersion = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetUnFinishTasks)
                return e;
            var t = new s.HttpResponseBodyGetUnFinishTasks;
            if (e.taskItems) {
                if (!Array.isArray(e.taskItems))
                    throw TypeError(".HttpResponseBodyGetUnFinishTasks.taskItems: array expected");
                t.taskItems = [];
                for (var n = 0; n < e.taskItems.length; ++n) {
                    if ("object" !== typeof e.taskItems[n])
                        throw TypeError(".HttpResponseBodyGetUnFinishTasks.taskItems: object expected");
                    t.taskItems[n] = s.HttpTaskInfo.fromObject(e.taskItems[n])
                }
            }
            return null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.taskItems = []),
            t.defaults && (n.taskConversationVersion = 0),
            e.taskItems && e.taskItems.length) {
                n.taskItems = [];
                for (var r = 0; r < e.taskItems.length; ++r)
                    n.taskItems[r] = s.HttpTaskInfo.toObject(e.taskItems[r], t)
            }
            return null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteTask = function() {
        function e(e) {
            if (this.taskIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskIds = a.emptyArray,
        e.prototype.isFinish = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskIds && e.taskIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.taskIds.length; ++n)
                    t.uint32(e.taskIds[n]);
                t.ldelim()
            }
            return null != e.isFinish && e.hasOwnProperty("isFinish") && t.uint32(32).bool(e.isFinish),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    if (r.taskIds && r.taskIds.length || (r.taskIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.taskIds.push(e.uint32())
                    } else
                        r.taskIds.push(e.uint32());
                    break;
                case 4:
                    r.isFinish = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteTask)
                return e;
            var t = new s.HttpRequestBodyDeleteTask;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.taskIds) {
                if (!Array.isArray(e.taskIds))
                    throw TypeError(".HttpRequestBodyDeleteTask.taskIds: array expected");
                t.taskIds = [];
                for (var n = 0; n < e.taskIds.length; ++n)
                    t.taskIds[n] = e.taskIds[n] >>> 0
            }
            return null != e.isFinish && (t.isFinish = Boolean(e.isFinish)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.taskIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.isFinish = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.taskIds && e.taskIds.length) {
                n.taskIds = [];
                for (var r = 0; r < e.taskIds.length; ++r)
                    n.taskIds[r] = e.taskIds[r]
            }
            return null != e.isFinish && e.hasOwnProperty("isFinish") && (n.isFinish = e.isFinish),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteTask = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(8).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(16).int32(e.actionType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskConversationVersion = e.uint32();
                    break;
                case 2:
                    r.actionType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDeleteTask)
                return e;
            var t = new s.HttpResponseBodyDeleteTask;
            switch (null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.taskConversationVersion = 0,
            n.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyConvertTask = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskId = 0,
        e.prototype.version = 0,
        e.prototype.taskType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(24).uint32(e.taskId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(32).uint32(e.version),
            null != e.taskType && e.hasOwnProperty("taskType") && t.uint32(40).int32(e.taskType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyConvertTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.taskId = e.uint32();
                    break;
                case 4:
                    r.version = e.uint32();
                    break;
                case 5:
                    r.taskType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyConvertTask)
                return e;
            var t = new s.HttpRequestBodyConvertTask;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            switch (null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            e.taskType) {
            case "CommonTaskTypeNone":
            case 0:
                t.taskType = 0;
                break;
            case "CommonTaskTypeTask":
            case 1:
                t.taskType = 1;
                break;
            case "CommonTaskTypeGroup":
            case 2:
                t.taskType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.taskId = 0,
            n.version = 0,
            n.taskType = t.enums === String ? "CommonTaskTypeNone" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.taskType && e.hasOwnProperty("taskType") && (n.taskType = t.enums === String ? s.CommonTaskType[e.taskType] : e.taskType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyConvertTask = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskId = 0,
        e.prototype.version = 0,
        e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(8).uint32(e.taskId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(24).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(32).int32(e.actionType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyConvertTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                case 3:
                    r.taskConversationVersion = e.uint32();
                    break;
                case 4:
                    r.actionType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyConvertTask)
                return e;
            var t = new s.HttpResponseBodyConvertTask;
            switch (null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.taskId = 0,
            n.version = 0,
            n.taskConversationVersion = 0,
            n.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateTaskState = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskId = 0,
        e.prototype.version = 0,
        e.prototype.isFinish = !1,
        e.prototype.preSortIndex = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(24).uint32(e.taskId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(32).uint32(e.version),
            null != e.isFinish && e.hasOwnProperty("isFinish") && t.uint32(40).bool(e.isFinish),
            null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && t.uint32(48).uint32(e.preSortIndex),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateTaskState;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.taskId = e.uint32();
                    break;
                case 4:
                    r.version = e.uint32();
                    break;
                case 5:
                    r.isFinish = e.bool();
                    break;
                case 6:
                    r.preSortIndex = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateTaskState)
                return e;
            var t = new s.HttpRequestBodyUpdateTaskState;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            null != e.isFinish && (t.isFinish = Boolean(e.isFinish)),
            null != e.preSortIndex && (t.preSortIndex = e.preSortIndex >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.taskId = 0,
            n.version = 0,
            n.isFinish = !1,
            n.preSortIndex = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.isFinish && e.hasOwnProperty("isFinish") && (n.isFinish = e.isFinish),
            null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && (n.preSortIndex = e.preSortIndex),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateTaskState = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskId = 0,
        e.prototype.version = 0,
        e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.prototype.sortIndex = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(8).uint32(e.taskId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(24).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(32).int32(e.actionType),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && t.uint32(40).uint32(e.sortIndex),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateTaskState;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                case 3:
                    r.taskConversationVersion = e.uint32();
                    break;
                case 4:
                    r.actionType = e.int32();
                    break;
                case 5:
                    r.sortIndex = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUpdateTaskState)
                return e;
            var t = new s.HttpResponseBodyUpdateTaskState;
            switch (null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            return null != e.sortIndex && (t.sortIndex = e.sortIndex >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.taskId = 0,
            n.version = 0,
            n.taskConversationVersion = 0,
            n.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0,
            n.sortIndex = 0),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && (n.sortIndex = e.sortIndex),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyMoveTask = function() {
        function e(e) {
            if (this.taskIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskIds = a.emptyArray,
        e.prototype.preSortIndex = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskIds && e.taskIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.taskIds.length; ++n)
                    t.uint32(e.taskIds[n]);
                t.ldelim()
            }
            return null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && t.uint32(32).uint32(e.preSortIndex),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyMoveTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    if (r.taskIds && r.taskIds.length || (r.taskIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.taskIds.push(e.uint32())
                    } else
                        r.taskIds.push(e.uint32());
                    break;
                case 4:
                    r.preSortIndex = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyMoveTask)
                return e;
            var t = new s.HttpRequestBodyMoveTask;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.taskIds) {
                if (!Array.isArray(e.taskIds))
                    throw TypeError(".HttpRequestBodyMoveTask.taskIds: array expected");
                t.taskIds = [];
                for (var n = 0; n < e.taskIds.length; ++n)
                    t.taskIds[n] = e.taskIds[n] >>> 0
            }
            return null != e.preSortIndex && (t.preSortIndex = e.preSortIndex >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.taskIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.preSortIndex = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.taskIds && e.taskIds.length) {
                n.taskIds = [];
                for (var r = 0; r < e.taskIds.length; ++r)
                    n.taskIds[r] = e.taskIds[r]
            }
            return null != e.preSortIndex && e.hasOwnProperty("preSortIndex") && (n.preSortIndex = e.preSortIndex),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyMoveTask = function() {
        function e(e) {
            if (this.taskSortIndexMap = {},
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.prototype.taskSortIndexMap = a.emptyObject,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(8).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(16).int32(e.actionType),
            null != e.taskSortIndexMap && e.hasOwnProperty("taskSortIndexMap"))
                for (var n = Object.keys(e.taskSortIndexMap), r = 0; r < n.length; ++r)
                    t.uint32(26).fork().uint32(8).uint32(n[r]).uint32(16).uint32(e.taskSortIndexMap[n[r]]).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n, r = void 0 === t ? e.len : e.pos + t, i = new s.HttpResponseBodyMoveTask;
            while (e.pos < r) {
                var u = e.uint32();
                switch (u >>> 3) {
                case 1:
                    i.taskConversationVersion = e.uint32();
                    break;
                case 2:
                    i.actionType = e.int32();
                    break;
                case 3:
                    e.skip().pos++,
                    i.taskSortIndexMap === a.emptyObject && (i.taskSortIndexMap = {}),
                    n = e.uint32(),
                    e.pos++,
                    i.taskSortIndexMap[n] = e.uint32();
                    break;
                default:
                    e.skipType(7 & u);
                    break
                }
            }
            return i
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyMoveTask)
                return e;
            var t = new s.HttpResponseBodyMoveTask;
            switch (null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            if (e.taskSortIndexMap) {
                if ("object" !== typeof e.taskSortIndexMap)
                    throw TypeError(".HttpResponseBodyMoveTask.taskSortIndexMap: object expected");
                t.taskSortIndexMap = {};
                for (var n = Object.keys(e.taskSortIndexMap), r = 0; r < n.length; ++r)
                    t.taskSortIndexMap[n[r]] = e.taskSortIndexMap[n[r]] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n, r = {};
            if ((t.objects || t.defaults) && (r.taskSortIndexMap = {}),
            t.defaults && (r.taskConversationVersion = 0,
            r.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0),
            null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (r.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (r.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            e.taskSortIndexMap && (n = Object.keys(e.taskSortIndexMap)).length) {
                r.taskSortIndexMap = {};
                for (var o = 0; o < n.length; ++o)
                    r.taskSortIndexMap[n[o]] = e.taskSortIndexMap[n[o]]
            }
            return r
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetTaskConversationList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetTaskConversationList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpRequestBodyGetTaskConversationList ? e : new s.HttpRequestBodyGetTaskConversationList
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetTaskConversationList = function() {
        function e(e) {
            if (this.conversationItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationItems && e.conversationItems.length)
                for (var n = 0; n < e.conversationItems.length; ++n)
                    s.HttpTaskConversation.encode(e.conversationItems[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetTaskConversationList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationItems && r.conversationItems.length || (r.conversationItems = []),
                    r.conversationItems.push(s.HttpTaskConversation.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetTaskConversationList)
                return e;
            var t = new s.HttpResponseBodyGetTaskConversationList;
            if (e.conversationItems) {
                if (!Array.isArray(e.conversationItems))
                    throw TypeError(".HttpResponseBodyGetTaskConversationList.conversationItems: array expected");
                t.conversationItems = [];
                for (var n = 0; n < e.conversationItems.length; ++n) {
                    if ("object" !== typeof e.conversationItems[n])
                        throw TypeError(".HttpResponseBodyGetTaskConversationList.conversationItems: object expected");
                    t.conversationItems[n] = s.HttpTaskConversation.fromObject(e.conversationItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.conversationItems = []),
            e.conversationItems && e.conversationItems.length) {
                n.conversationItems = [];
                for (var r = 0; r < e.conversationItems.length; ++r)
                    n.conversationItems[r] = s.HttpTaskConversation.toObject(e.conversationItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetTaskConversationGroupList = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetTaskConversationGroupList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetTaskConversationGroupList)
                return e;
            var t = new s.HttpRequestBodyGetTaskConversationGroupList;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetTaskConversationGroupList = function() {
        function e(e) {
            if (this.groupItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupItems && e.groupItems.length)
                for (var n = 0; n < e.groupItems.length; ++n)
                    s.HttpTaskInfo.encode(e.groupItems[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetTaskConversationGroupList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupItems && r.groupItems.length || (r.groupItems = []),
                    r.groupItems.push(s.HttpTaskInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetTaskConversationGroupList)
                return e;
            var t = new s.HttpResponseBodyGetTaskConversationGroupList;
            if (e.groupItems) {
                if (!Array.isArray(e.groupItems))
                    throw TypeError(".HttpResponseBodyGetTaskConversationGroupList.groupItems: array expected");
                t.groupItems = [];
                for (var n = 0; n < e.groupItems.length; ++n) {
                    if ("object" !== typeof e.groupItems[n])
                        throw TypeError(".HttpResponseBodyGetTaskConversationGroupList.groupItems: object expected");
                    t.groupItems[n] = s.HttpTaskInfo.fromObject(e.groupItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupItems = []),
            e.groupItems && e.groupItems.length) {
                n.groupItems = [];
                for (var r = 0; r < e.groupItems.length; ++r)
                    n.groupItems[r] = s.HttpTaskInfo.toObject(e.groupItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetTaskLockBegin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskId = 0,
        e.prototype.lockToken = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(24).uint32(e.taskId),
            null != e.lockToken && e.hasOwnProperty("lockToken") && t.uint32(32).uint32(e.lockToken),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetTaskLockBegin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.taskId = e.uint32();
                    break;
                case 4:
                    r.lockToken = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetTaskLockBegin)
                return e;
            var t = new s.HttpRequestBodySetTaskLockBegin;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.lockToken && (t.lockToken = e.lockToken >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.taskId = 0,
            n.lockToken = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.lockToken && e.hasOwnProperty("lockToken") && (n.lockToken = e.lockToken),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetTaskLockBegin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.lockToken = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.lockToken && e.hasOwnProperty("lockToken") && t.uint32(8).uint32(e.lockToken),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetTaskLockBegin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.lockToken = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodySetTaskLockBegin)
                return e;
            var t = new s.HttpResponseBodySetTaskLockBegin;
            return null != e.lockToken && (t.lockToken = e.lockToken >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.lockToken = 0),
            null != e.lockToken && e.hasOwnProperty("lockToken") && (n.lockToken = e.lockToken),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetTaskLockEnd = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskId = 0,
        e.prototype.lockToken = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(24).uint32(e.taskId),
            null != e.lockToken && e.hasOwnProperty("lockToken") && t.uint32(32).uint32(e.lockToken),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetTaskLockEnd;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.taskId = e.uint32();
                    break;
                case 4:
                    r.lockToken = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetTaskLockEnd)
                return e;
            var t = new s.HttpRequestBodySetTaskLockEnd;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.lockToken && (t.lockToken = e.lockToken >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.taskId = 0,
            n.lockToken = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.lockToken && e.hasOwnProperty("lockToken") && (n.lockToken = e.lockToken),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetTaskLockEnd = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetTaskLockEnd;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetTaskLockEnd ? e : new s.HttpResponseBodySetTaskLockEnd
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySendTaskToConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.taskId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(24).uint32(e.taskId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySendTaskToConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.taskId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySendTaskToConversation)
                return e;
            var t = new s.HttpRequestBodySendTaskToConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.taskId && (t.taskId = e.taskId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.taskId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySendTaskToConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySendTaskToConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySendTaskToConversation ? e : new s.HttpResponseBodySendTaskToConversation
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetTaskConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetTaskConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetTaskConversation)
                return e;
            var t = new s.HttpRequestBodyGetTaskConversation;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetTaskConversation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskConversation = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.taskConversation && e.hasOwnProperty("taskConversation") && s.HttpTaskConversation.encode(e.taskConversation, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetTaskConversation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskConversation = s.HttpTaskConversation.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetTaskConversation)
                return e;
            var t = new s.HttpResponseBodyGetTaskConversation;
            if (null != e.taskConversation) {
                if ("object" !== typeof e.taskConversation)
                    throw TypeError(".HttpResponseBodyGetTaskConversation.taskConversation: object expected");
                t.taskConversation = s.HttpTaskConversation.fromObject(e.taskConversation)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.taskConversation = null),
            null != e.taskConversation && e.hasOwnProperty("taskConversation") && (n.taskConversation = s.HttpTaskConversation.toObject(e.taskConversation, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetP2pFileMessageStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.messageId = "",
        e.prototype.status = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(26).string(e.messageId),
            null != e.status && e.hasOwnProperty("status") && t.uint32(32).int32(e.status),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetP2pFileMessageStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.messageId = e.string();
                    break;
                case 4:
                    r.status = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetP2pFileMessageStatus)
                return e;
            var t = new s.HttpRequestBodySetP2pFileMessageStatus;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            switch (null != e.messageId && (t.messageId = String(e.messageId)),
            e.status) {
            case "CommonP2pFileStatusNone":
            case 0:
                t.status = 0;
                break;
            case "CommonP2pFileStatusWaiting":
            case 1:
                t.status = 1;
                break;
            case "CommonP2pFileStatusReject":
            case 2:
                t.status = 2;
                break;
            case "CommonP2pFileStatusCancel":
            case 3:
                t.status = 3;
                break;
            case "CommonP2pFileStatusAccept":
            case 4:
                t.status = 4;
                break;
            case "CommonP2pFileStatusSuccess":
            case 5:
                t.status = 5;
                break;
            case "CommonP2pFileStatusPause":
            case 6:
                t.status = 6;
                break;
            case "CommonP2pFileStatusFailure":
            case 7:
                t.status = 7;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.messageId = "",
            n.status = t.enums === String ? "CommonP2pFileStatusNone" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonP2pFileStatus[e.status] : e.status),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetP2pFileMessageStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetP2pFileMessageStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetP2pFileMessageStatus ? e : new s.HttpResponseBodySetP2pFileMessageStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateForm = function() {
        function e(e) {
            if (this.columnItems = [],
            this.groupInfos = [],
            this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.title = "",
        e.prototype.description = "",
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxCount = 0,
        e.prototype.columnItems = a.emptyArray,
        e.prototype.sortRule = 0,
        e.prototype.sortColumn = 0,
        e.prototype.groupRule = 0,
        e.prototype.groupColumn = 0,
        e.prototype.groupInfos = a.emptyArray,
        e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.description && e.hasOwnProperty("description") && t.uint32(26).string(e.description),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(32).uint64(e.endTimestamp),
            null != e.maxCount && e.hasOwnProperty("maxCount") && t.uint32(40).uint32(e.maxCount),
            null != e.columnItems && e.columnItems.length)
                for (var n = 0; n < e.columnItems.length; ++n)
                    s.CommonFormColumnItem.encode(e.columnItems[n], t.uint32(50).fork()).ldelim();
            if (null != e.sortRule && e.hasOwnProperty("sortRule") && t.uint32(56).int32(e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && t.uint32(64).uint32(e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && t.uint32(72).int32(e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && t.uint32(80).uint32(e.groupColumn),
            null != e.groupInfos && e.groupInfos.length)
                for (n = 0; n < e.groupInfos.length; ++n)
                    s.CommonFormGroupInfo.encode(e.groupInfos[n], t.uint32(90).fork()).ldelim();
            if (null != e.items && e.items.length)
                for (n = 0; n < e.items.length; ++n)
                    s.HttpFormColumnValueItem.encode(e.items[n], t.uint32(98).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.description = e.string();
                    break;
                case 4:
                    r.endTimestamp = e.uint64();
                    break;
                case 5:
                    r.maxCount = e.uint32();
                    break;
                case 6:
                    r.columnItems && r.columnItems.length || (r.columnItems = []),
                    r.columnItems.push(s.CommonFormColumnItem.decode(e, e.uint32()));
                    break;
                case 7:
                    r.sortRule = e.int32();
                    break;
                case 8:
                    r.sortColumn = e.uint32();
                    break;
                case 9:
                    r.groupRule = e.int32();
                    break;
                case 10:
                    r.groupColumn = e.uint32();
                    break;
                case 11:
                    r.groupInfos && r.groupInfos.length || (r.groupInfos = []),
                    r.groupInfos.push(s.CommonFormGroupInfo.decode(e, e.uint32()));
                    break;
                case 12:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpFormColumnValueItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateForm)
                return e;
            var t = new s.HttpRequestBodyCreateForm;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.title && (t.title = String(e.title)),
            null != e.description && (t.description = String(e.description)),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.maxCount && (t.maxCount = e.maxCount >>> 0),
            e.columnItems) {
                if (!Array.isArray(e.columnItems))
                    throw TypeError(".HttpRequestBodyCreateForm.columnItems: array expected");
                t.columnItems = [];
                for (var n = 0; n < e.columnItems.length; ++n) {
                    if ("object" !== typeof e.columnItems[n])
                        throw TypeError(".HttpRequestBodyCreateForm.columnItems: object expected");
                    t.columnItems[n] = s.CommonFormColumnItem.fromObject(e.columnItems[n])
                }
            }
            switch (e.sortRule) {
            case "CommonFormSortRuleNone":
            case 0:
                t.sortRule = 0;
                break;
            case "CommonFormSortRuleManual":
            case 1:
                t.sortRule = 1;
                break;
            case "CommonFormSortRuleASC":
            case 2:
                t.sortRule = 2;
                break;
            case "CommonFormSortRuleDESC":
            case 3:
                t.sortRule = 3;
                break;
            case "CommonFormSortRuleCreateTimestampASC":
            case 4:
                t.sortRule = 4;
                break;
            case "CommonFormSortRuleCreateTimestampDESC":
            case 5:
                t.sortRule = 5;
                break;
            case "CommonFormSortRuleUpdateTimestampASC":
            case 6:
                t.sortRule = 6;
                break;
            case "CommonFormSortRuleUpdateTimestampDESC":
            case 7:
                t.sortRule = 7;
                break;
            case "CommonFormSortRuleOption":
            case 8:
                t.sortRule = 8;
                break
            }
            switch (null != e.sortColumn && (t.sortColumn = e.sortColumn >>> 0),
            e.groupRule) {
            case "CommonFormGroupRuleNone":
            case 0:
                t.groupRule = 0;
                break;
            case "CommonFormGroupRuleManual":
            case 1:
                t.groupRule = 1;
                break;
            case "CommonFormGroupRuleInitial":
            case 2:
                t.groupRule = 2;
                break;
            case "CommonFormGroupRuleSameValue":
            case 3:
                t.groupRule = 3;
                break;
            case "CommonFormGroupRuleOption":
            case 4:
                t.groupRule = 4;
                break
            }
            if (null != e.groupColumn && (t.groupColumn = e.groupColumn >>> 0),
            e.groupInfos) {
                if (!Array.isArray(e.groupInfos))
                    throw TypeError(".HttpRequestBodyCreateForm.groupInfos: array expected");
                t.groupInfos = [];
                for (n = 0; n < e.groupInfos.length; ++n) {
                    if ("object" !== typeof e.groupInfos[n])
                        throw TypeError(".HttpRequestBodyCreateForm.groupInfos: object expected");
                    t.groupInfos[n] = s.CommonFormGroupInfo.fromObject(e.groupInfos[n])
                }
            }
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpRequestBodyCreateForm.items: array expected");
                t.items = [];
                for (n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpRequestBodyCreateForm.items: object expected");
                    t.items[n] = s.HttpFormColumnValueItem.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnItems = [],
            n.groupInfos = [],
            n.items = []),
            t.defaults) {
                if (n.groupId = 0,
                n.title = "",
                n.description = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.maxCount = 0,
                n.sortRule = t.enums === String ? "CommonFormSortRuleNone" : 0,
                n.sortColumn = 0,
                n.groupRule = t.enums === String ? "CommonFormGroupRuleNone" : 0,
                n.groupColumn = 0
            }
            if (null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.maxCount && e.hasOwnProperty("maxCount") && (n.maxCount = e.maxCount),
            e.columnItems && e.columnItems.length) {
                n.columnItems = [];
                for (var o = 0; o < e.columnItems.length; ++o)
                    n.columnItems[o] = s.CommonFormColumnItem.toObject(e.columnItems[o], t)
            }
            if (null != e.sortRule && e.hasOwnProperty("sortRule") && (n.sortRule = t.enums === String ? s.CommonFormSortRule[e.sortRule] : e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && (n.sortColumn = e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && (n.groupRule = t.enums === String ? s.CommonFormGroupRule[e.groupRule] : e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && (n.groupColumn = e.groupColumn),
            e.groupInfos && e.groupInfos.length) {
                n.groupInfos = [];
                for (o = 0; o < e.groupInfos.length; ++o)
                    n.groupInfos[o] = s.CommonFormGroupInfo.toObject(e.groupInfos[o], t)
            }
            if (e.items && e.items.length) {
                n.items = [];
                for (o = 0; o < e.items.length; ++o)
                    n.items[o] = s.HttpFormColumnValueItem.toObject(e.items[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateForm)
                return e;
            var t = new s.HttpResponseBodyCreateForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateForm = function() {
        function e(e) {
            if (this.columnItems = [],
            this.groupInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.title = "",
        e.prototype.description = "",
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxCount = 0,
        e.prototype.columnItems = a.emptyArray,
        e.prototype.sortRule = 0,
        e.prototype.sortColumn = 0,
        e.prototype.groupRule = 0,
        e.prototype.groupColumn = 0,
        e.prototype.groupInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(26).string(e.title),
            null != e.description && e.hasOwnProperty("description") && t.uint32(34).string(e.description),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(40).uint64(e.endTimestamp),
            null != e.maxCount && e.hasOwnProperty("maxCount") && t.uint32(48).uint32(e.maxCount),
            null != e.columnItems && e.columnItems.length)
                for (var n = 0; n < e.columnItems.length; ++n)
                    s.CommonFormColumnItem.encode(e.columnItems[n], t.uint32(58).fork()).ldelim();
            if (null != e.sortRule && e.hasOwnProperty("sortRule") && t.uint32(64).int32(e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && t.uint32(72).uint32(e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && t.uint32(80).int32(e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && t.uint32(88).uint32(e.groupColumn),
            null != e.groupInfos && e.groupInfos.length)
                for (n = 0; n < e.groupInfos.length; ++n)
                    s.CommonFormGroupInfo.encode(e.groupInfos[n], t.uint32(98).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.title = e.string();
                    break;
                case 4:
                    r.description = e.string();
                    break;
                case 5:
                    r.endTimestamp = e.uint64();
                    break;
                case 6:
                    r.maxCount = e.uint32();
                    break;
                case 7:
                    r.columnItems && r.columnItems.length || (r.columnItems = []),
                    r.columnItems.push(s.CommonFormColumnItem.decode(e, e.uint32()));
                    break;
                case 8:
                    r.sortRule = e.int32();
                    break;
                case 9:
                    r.sortColumn = e.uint32();
                    break;
                case 10:
                    r.groupRule = e.int32();
                    break;
                case 11:
                    r.groupColumn = e.uint32();
                    break;
                case 12:
                    r.groupInfos && r.groupInfos.length || (r.groupInfos = []),
                    r.groupInfos.push(s.CommonFormGroupInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateForm)
                return e;
            var t = new s.HttpRequestBodyUpdateForm;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.title && (t.title = String(e.title)),
            null != e.description && (t.description = String(e.description)),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.maxCount && (t.maxCount = e.maxCount >>> 0),
            e.columnItems) {
                if (!Array.isArray(e.columnItems))
                    throw TypeError(".HttpRequestBodyUpdateForm.columnItems: array expected");
                t.columnItems = [];
                for (var n = 0; n < e.columnItems.length; ++n) {
                    if ("object" !== typeof e.columnItems[n])
                        throw TypeError(".HttpRequestBodyUpdateForm.columnItems: object expected");
                    t.columnItems[n] = s.CommonFormColumnItem.fromObject(e.columnItems[n])
                }
            }
            switch (e.sortRule) {
            case "CommonFormSortRuleNone":
            case 0:
                t.sortRule = 0;
                break;
            case "CommonFormSortRuleManual":
            case 1:
                t.sortRule = 1;
                break;
            case "CommonFormSortRuleASC":
            case 2:
                t.sortRule = 2;
                break;
            case "CommonFormSortRuleDESC":
            case 3:
                t.sortRule = 3;
                break;
            case "CommonFormSortRuleCreateTimestampASC":
            case 4:
                t.sortRule = 4;
                break;
            case "CommonFormSortRuleCreateTimestampDESC":
            case 5:
                t.sortRule = 5;
                break;
            case "CommonFormSortRuleUpdateTimestampASC":
            case 6:
                t.sortRule = 6;
                break;
            case "CommonFormSortRuleUpdateTimestampDESC":
            case 7:
                t.sortRule = 7;
                break;
            case "CommonFormSortRuleOption":
            case 8:
                t.sortRule = 8;
                break
            }
            switch (null != e.sortColumn && (t.sortColumn = e.sortColumn >>> 0),
            e.groupRule) {
            case "CommonFormGroupRuleNone":
            case 0:
                t.groupRule = 0;
                break;
            case "CommonFormGroupRuleManual":
            case 1:
                t.groupRule = 1;
                break;
            case "CommonFormGroupRuleInitial":
            case 2:
                t.groupRule = 2;
                break;
            case "CommonFormGroupRuleSameValue":
            case 3:
                t.groupRule = 3;
                break;
            case "CommonFormGroupRuleOption":
            case 4:
                t.groupRule = 4;
                break
            }
            if (null != e.groupColumn && (t.groupColumn = e.groupColumn >>> 0),
            e.groupInfos) {
                if (!Array.isArray(e.groupInfos))
                    throw TypeError(".HttpRequestBodyUpdateForm.groupInfos: array expected");
                t.groupInfos = [];
                for (n = 0; n < e.groupInfos.length; ++n) {
                    if ("object" !== typeof e.groupInfos[n])
                        throw TypeError(".HttpRequestBodyUpdateForm.groupInfos: object expected");
                    t.groupInfos[n] = s.CommonFormGroupInfo.fromObject(e.groupInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnItems = [],
            n.groupInfos = []),
            t.defaults) {
                if (n.formId = 0,
                n.groupId = 0,
                n.title = "",
                n.description = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.maxCount = 0,
                n.sortRule = t.enums === String ? "CommonFormSortRuleNone" : 0,
                n.sortColumn = 0,
                n.groupRule = t.enums === String ? "CommonFormGroupRuleNone" : 0,
                n.groupColumn = 0
            }
            if (null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.maxCount && e.hasOwnProperty("maxCount") && (n.maxCount = e.maxCount),
            e.columnItems && e.columnItems.length) {
                n.columnItems = [];
                for (var o = 0; o < e.columnItems.length; ++o)
                    n.columnItems[o] = s.CommonFormColumnItem.toObject(e.columnItems[o], t)
            }
            if (null != e.sortRule && e.hasOwnProperty("sortRule") && (n.sortRule = t.enums === String ? s.CommonFormSortRule[e.sortRule] : e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && (n.sortColumn = e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && (n.groupRule = t.enums === String ? s.CommonFormGroupRule[e.groupRule] : e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && (n.groupColumn = e.groupColumn),
            e.groupInfos && e.groupInfos.length) {
                n.groupInfos = [];
                for (o = 0; o < e.groupInfos.length; ++o)
                    n.groupInfos[o] = s.CommonFormGroupInfo.toObject(e.groupInfos[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUpdateForm)
                return e;
            var t = new s.HttpResponseBodyUpdateForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteForm)
                return e;
            var t = new s.HttpRequestBodyDeleteForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.groupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDeleteForm)
                return e;
            var t = new s.HttpResponseBodyDeleteForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetForm)
                return e;
            var t = new s.HttpRequestBodyGetForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.groupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetForm = function() {
        function e(e) {
            if (this.columnItems = [],
            this.groupInfos = [],
            this.dataInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.title = "",
        e.prototype.description = "",
        e.prototype.senderId = 0,
        e.prototype.senderName = "",
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.finish = !1,
        e.prototype.maxCount = 0,
        e.prototype.remainderCount = 0,
        e.prototype.sortRule = 0,
        e.prototype.sortColumn = 0,
        e.prototype.groupRule = 0,
        e.prototype.groupColumn = 0,
        e.prototype.version = 0,
        e.prototype.columnItems = a.emptyArray,
        e.prototype.groupInfos = a.emptyArray,
        e.prototype.dataInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.description && e.hasOwnProperty("description") && t.uint32(26).string(e.description),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(32).uint32(e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(42).string(e.senderName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(48).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(56).uint64(e.endTimestamp),
            null != e.finish && e.hasOwnProperty("finish") && t.uint32(64).bool(e.finish),
            null != e.maxCount && e.hasOwnProperty("maxCount") && t.uint32(72).uint32(e.maxCount),
            null != e.remainderCount && e.hasOwnProperty("remainderCount") && t.uint32(80).uint32(e.remainderCount),
            null != e.sortRule && e.hasOwnProperty("sortRule") && t.uint32(88).int32(e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && t.uint32(96).uint32(e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && t.uint32(104).int32(e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && t.uint32(112).uint32(e.groupColumn),
            null != e.version && e.hasOwnProperty("version") && t.uint32(120).uint32(e.version),
            null != e.columnItems && e.columnItems.length)
                for (var n = 0; n < e.columnItems.length; ++n)
                    s.CommonFormColumnItem.encode(e.columnItems[n], t.uint32(130).fork()).ldelim();
            if (null != e.groupInfos && e.groupInfos.length)
                for (n = 0; n < e.groupInfos.length; ++n)
                    s.CommonFormGroupInfo.encode(e.groupInfos[n], t.uint32(138).fork()).ldelim();
            if (null != e.dataInfos && e.dataInfos.length)
                for (n = 0; n < e.dataInfos.length; ++n)
                    s.CommonFormDataInfo.encode(e.dataInfos[n], t.uint32(146).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.description = e.string();
                    break;
                case 4:
                    r.senderId = e.uint32();
                    break;
                case 5:
                    r.senderName = e.string();
                    break;
                case 6:
                    r.startTimestamp = e.uint64();
                    break;
                case 7:
                    r.endTimestamp = e.uint64();
                    break;
                case 8:
                    r.finish = e.bool();
                    break;
                case 9:
                    r.maxCount = e.uint32();
                    break;
                case 10:
                    r.remainderCount = e.uint32();
                    break;
                case 11:
                    r.sortRule = e.int32();
                    break;
                case 12:
                    r.sortColumn = e.uint32();
                    break;
                case 13:
                    r.groupRule = e.int32();
                    break;
                case 14:
                    r.groupColumn = e.uint32();
                    break;
                case 15:
                    r.version = e.uint32();
                    break;
                case 16:
                    r.columnItems && r.columnItems.length || (r.columnItems = []),
                    r.columnItems.push(s.CommonFormColumnItem.decode(e, e.uint32()));
                    break;
                case 17:
                    r.groupInfos && r.groupInfos.length || (r.groupInfos = []),
                    r.groupInfos.push(s.CommonFormGroupInfo.decode(e, e.uint32()));
                    break;
                case 18:
                    r.dataInfos && r.dataInfos.length || (r.dataInfos = []),
                    r.dataInfos.push(s.CommonFormDataInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetForm)
                return e;
            var t = new s.HttpResponseBodyGetForm;
            switch (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.title && (t.title = String(e.title)),
            null != e.description && (t.description = String(e.description)),
            null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.finish && (t.finish = Boolean(e.finish)),
            null != e.maxCount && (t.maxCount = e.maxCount >>> 0),
            null != e.remainderCount && (t.remainderCount = e.remainderCount >>> 0),
            e.sortRule) {
            case "CommonFormSortRuleNone":
            case 0:
                t.sortRule = 0;
                break;
            case "CommonFormSortRuleManual":
            case 1:
                t.sortRule = 1;
                break;
            case "CommonFormSortRuleASC":
            case 2:
                t.sortRule = 2;
                break;
            case "CommonFormSortRuleDESC":
            case 3:
                t.sortRule = 3;
                break;
            case "CommonFormSortRuleCreateTimestampASC":
            case 4:
                t.sortRule = 4;
                break;
            case "CommonFormSortRuleCreateTimestampDESC":
            case 5:
                t.sortRule = 5;
                break;
            case "CommonFormSortRuleUpdateTimestampASC":
            case 6:
                t.sortRule = 6;
                break;
            case "CommonFormSortRuleUpdateTimestampDESC":
            case 7:
                t.sortRule = 7;
                break;
            case "CommonFormSortRuleOption":
            case 8:
                t.sortRule = 8;
                break
            }
            switch (null != e.sortColumn && (t.sortColumn = e.sortColumn >>> 0),
            e.groupRule) {
            case "CommonFormGroupRuleNone":
            case 0:
                t.groupRule = 0;
                break;
            case "CommonFormGroupRuleManual":
            case 1:
                t.groupRule = 1;
                break;
            case "CommonFormGroupRuleInitial":
            case 2:
                t.groupRule = 2;
                break;
            case "CommonFormGroupRuleSameValue":
            case 3:
                t.groupRule = 3;
                break;
            case "CommonFormGroupRuleOption":
            case 4:
                t.groupRule = 4;
                break
            }
            if (null != e.groupColumn && (t.groupColumn = e.groupColumn >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            e.columnItems) {
                if (!Array.isArray(e.columnItems))
                    throw TypeError(".HttpResponseBodyGetForm.columnItems: array expected");
                t.columnItems = [];
                for (var n = 0; n < e.columnItems.length; ++n) {
                    if ("object" !== typeof e.columnItems[n])
                        throw TypeError(".HttpResponseBodyGetForm.columnItems: object expected");
                    t.columnItems[n] = s.CommonFormColumnItem.fromObject(e.columnItems[n])
                }
            }
            if (e.groupInfos) {
                if (!Array.isArray(e.groupInfos))
                    throw TypeError(".HttpResponseBodyGetForm.groupInfos: array expected");
                t.groupInfos = [];
                for (n = 0; n < e.groupInfos.length; ++n) {
                    if ("object" !== typeof e.groupInfos[n])
                        throw TypeError(".HttpResponseBodyGetForm.groupInfos: object expected");
                    t.groupInfos[n] = s.CommonFormGroupInfo.fromObject(e.groupInfos[n])
                }
            }
            if (e.dataInfos) {
                if (!Array.isArray(e.dataInfos))
                    throw TypeError(".HttpResponseBodyGetForm.dataInfos: array expected");
                t.dataInfos = [];
                for (n = 0; n < e.dataInfos.length; ++n) {
                    if ("object" !== typeof e.dataInfos[n])
                        throw TypeError(".HttpResponseBodyGetForm.dataInfos: object expected");
                    t.dataInfos[n] = s.CommonFormDataInfo.fromObject(e.dataInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnItems = [],
            n.groupInfos = [],
            n.dataInfos = []),
            t.defaults) {
                if (n.formId = 0,
                n.title = "",
                n.description = "",
                n.senderId = 0,
                n.senderName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.finish = !1,
                n.maxCount = 0,
                n.remainderCount = 0,
                n.sortRule = t.enums === String ? "CommonFormSortRuleNone" : 0,
                n.sortColumn = 0,
                n.groupRule = t.enums === String ? "CommonFormGroupRuleNone" : 0,
                n.groupColumn = 0,
                n.version = 0
            }
            if (null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.finish && e.hasOwnProperty("finish") && (n.finish = e.finish),
            null != e.maxCount && e.hasOwnProperty("maxCount") && (n.maxCount = e.maxCount),
            null != e.remainderCount && e.hasOwnProperty("remainderCount") && (n.remainderCount = e.remainderCount),
            null != e.sortRule && e.hasOwnProperty("sortRule") && (n.sortRule = t.enums === String ? s.CommonFormSortRule[e.sortRule] : e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && (n.sortColumn = e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && (n.groupRule = t.enums === String ? s.CommonFormGroupRule[e.groupRule] : e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && (n.groupColumn = e.groupColumn),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            e.columnItems && e.columnItems.length) {
                n.columnItems = [];
                for (var o = 0; o < e.columnItems.length; ++o)
                    n.columnItems[o] = s.CommonFormColumnItem.toObject(e.columnItems[o], t)
            }
            if (e.groupInfos && e.groupInfos.length) {
                n.groupInfos = [];
                for (o = 0; o < e.groupInfos.length; ++o)
                    n.groupInfos[o] = s.CommonFormGroupInfo.toObject(e.groupInfos[o], t)
            }
            if (e.dataInfos && e.dataInfos.length) {
                n.dataInfos = [];
                for (o = 0; o < e.dataInfos.length; ++o)
                    n.dataInfos[o] = s.CommonFormDataInfo.toObject(e.dataInfos[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyResendForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyResendForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyResendForm)
                return e;
            var t = new s.HttpRequestBodyResendForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.groupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyResendForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyResendForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyResendForm ? e : new s.HttpResponseBodyResendForm
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyFinishForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyFinishForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyFinishForm)
                return e;
            var t = new s.HttpRequestBodyFinishForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.groupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyFinishForm = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyFinishForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyFinishForm)
                return e;
            var t = new s.HttpResponseBodyFinishForm;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateFormGroupAndSort = function() {
        function e(e) {
            if (this.groupInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.title = "",
        e.prototype.description = "",
        e.prototype.sortRule = 0,
        e.prototype.sortColumn = 0,
        e.prototype.groupRule = 0,
        e.prototype.groupColumn = 0,
        e.prototype.groupInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(26).string(e.title),
            null != e.description && e.hasOwnProperty("description") && t.uint32(34).string(e.description),
            null != e.sortRule && e.hasOwnProperty("sortRule") && t.uint32(40).int32(e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && t.uint32(48).uint32(e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && t.uint32(56).int32(e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && t.uint32(64).uint32(e.groupColumn),
            null != e.groupInfos && e.groupInfos.length)
                for (var n = 0; n < e.groupInfos.length; ++n)
                    s.CommonFormGroupInfo.encode(e.groupInfos[n], t.uint32(74).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateFormGroupAndSort;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.title = e.string();
                    break;
                case 4:
                    r.description = e.string();
                    break;
                case 5:
                    r.sortRule = e.int32();
                    break;
                case 6:
                    r.sortColumn = e.uint32();
                    break;
                case 7:
                    r.groupRule = e.int32();
                    break;
                case 8:
                    r.groupColumn = e.uint32();
                    break;
                case 9:
                    r.groupInfos && r.groupInfos.length || (r.groupInfos = []),
                    r.groupInfos.push(s.CommonFormGroupInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateFormGroupAndSort)
                return e;
            var t = new s.HttpRequestBodyUpdateFormGroupAndSort;
            switch (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.title && (t.title = String(e.title)),
            null != e.description && (t.description = String(e.description)),
            e.sortRule) {
            case "CommonFormSortRuleNone":
            case 0:
                t.sortRule = 0;
                break;
            case "CommonFormSortRuleManual":
            case 1:
                t.sortRule = 1;
                break;
            case "CommonFormSortRuleASC":
            case 2:
                t.sortRule = 2;
                break;
            case "CommonFormSortRuleDESC":
            case 3:
                t.sortRule = 3;
                break;
            case "CommonFormSortRuleCreateTimestampASC":
            case 4:
                t.sortRule = 4;
                break;
            case "CommonFormSortRuleCreateTimestampDESC":
            case 5:
                t.sortRule = 5;
                break;
            case "CommonFormSortRuleUpdateTimestampASC":
            case 6:
                t.sortRule = 6;
                break;
            case "CommonFormSortRuleUpdateTimestampDESC":
            case 7:
                t.sortRule = 7;
                break;
            case "CommonFormSortRuleOption":
            case 8:
                t.sortRule = 8;
                break
            }
            switch (null != e.sortColumn && (t.sortColumn = e.sortColumn >>> 0),
            e.groupRule) {
            case "CommonFormGroupRuleNone":
            case 0:
                t.groupRule = 0;
                break;
            case "CommonFormGroupRuleManual":
            case 1:
                t.groupRule = 1;
                break;
            case "CommonFormGroupRuleInitial":
            case 2:
                t.groupRule = 2;
                break;
            case "CommonFormGroupRuleSameValue":
            case 3:
                t.groupRule = 3;
                break;
            case "CommonFormGroupRuleOption":
            case 4:
                t.groupRule = 4;
                break
            }
            if (null != e.groupColumn && (t.groupColumn = e.groupColumn >>> 0),
            e.groupInfos) {
                if (!Array.isArray(e.groupInfos))
                    throw TypeError(".HttpRequestBodyUpdateFormGroupAndSort.groupInfos: array expected");
                t.groupInfos = [];
                for (var n = 0; n < e.groupInfos.length; ++n) {
                    if ("object" !== typeof e.groupInfos[n])
                        throw TypeError(".HttpRequestBodyUpdateFormGroupAndSort.groupInfos: object expected");
                    t.groupInfos[n] = s.CommonFormGroupInfo.fromObject(e.groupInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupInfos = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0,
            n.title = "",
            n.description = "",
            n.sortRule = t.enums === String ? "CommonFormSortRuleNone" : 0,
            n.sortColumn = 0,
            n.groupRule = t.enums === String ? "CommonFormGroupRuleNone" : 0,
            n.groupColumn = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.sortRule && e.hasOwnProperty("sortRule") && (n.sortRule = t.enums === String ? s.CommonFormSortRule[e.sortRule] : e.sortRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && (n.sortColumn = e.sortColumn),
            null != e.groupRule && e.hasOwnProperty("groupRule") && (n.groupRule = t.enums === String ? s.CommonFormGroupRule[e.groupRule] : e.groupRule),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && (n.groupColumn = e.groupColumn),
            e.groupInfos && e.groupInfos.length) {
                n.groupInfos = [];
                for (var r = 0; r < e.groupInfos.length; ++r)
                    n.groupInfos[r] = s.CommonFormGroupInfo.toObject(e.groupInfos[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateFormGroupAndSort = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateFormGroupAndSort;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUpdateFormGroupAndSort)
                return e;
            var t = new s.HttpResponseBodyUpdateFormGroupAndSort;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateFormData = function() {
        function e(e) {
            if (this.columnValues = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.formGroupId = 0,
        e.prototype.columnValues = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(24).uint32(e.formGroupId),
            null != e.columnValues && e.columnValues.length)
                for (var n = 0; n < e.columnValues.length; ++n)
                    s.CommonFormColumnValue.encode(e.columnValues[n], t.uint32(34).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.formGroupId = e.uint32();
                    break;
                case 4:
                    r.columnValues && r.columnValues.length || (r.columnValues = []),
                    r.columnValues.push(s.CommonFormColumnValue.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateFormData)
                return e;
            var t = new s.HttpRequestBodyCreateFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            e.columnValues) {
                if (!Array.isArray(e.columnValues))
                    throw TypeError(".HttpRequestBodyCreateFormData.columnValues: array expected");
                t.columnValues = [];
                for (var n = 0; n < e.columnValues.length; ++n) {
                    if ("object" !== typeof e.columnValues[n])
                        throw TypeError(".HttpRequestBodyCreateFormData.columnValues: object expected");
                    t.columnValues[n] = s.CommonFormColumnValue.fromObject(e.columnValues[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnValues = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0,
            n.formGroupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            e.columnValues && e.columnValues.length) {
                n.columnValues = [];
                for (var r = 0; r < e.columnValues.length; ++r)
                    n.columnValues[r] = s.CommonFormColumnValue.toObject(e.columnValues[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateFormData = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.prototype.dataId = 0,
        e.prototype.sortIndex = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.dataId && e.hasOwnProperty("dataId") && t.uint32(24).uint32(e.dataId),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && t.uint32(32).uint32(e.sortIndex),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                case 3:
                    r.dataId = e.uint32();
                    break;
                case 4:
                    r.sortIndex = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateFormData)
                return e;
            var t = new s.HttpResponseBodyCreateFormData;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            null != e.dataId && (t.dataId = e.dataId >>> 0),
            null != e.sortIndex && (t.sortIndex = e.sortIndex >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0,
            n.dataId = 0,
            n.sortIndex = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.dataId && e.hasOwnProperty("dataId") && (n.dataId = e.dataId),
            null != e.sortIndex && e.hasOwnProperty("sortIndex") && (n.sortIndex = e.sortIndex),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchCreateFormData = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.formGroupId = 0,
        e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(24).uint32(e.formGroupId),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpFormColumnValueItem.encode(e.items[n], t.uint32(34).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchCreateFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.formGroupId = e.uint32();
                    break;
                case 4:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpFormColumnValueItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchCreateFormData)
                return e;
            var t = new s.HttpRequestBodyBatchCreateFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpRequestBodyBatchCreateFormData.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpRequestBodyBatchCreateFormData.items: object expected");
                    t.items[n] = s.HttpFormColumnValueItem.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0,
            n.formGroupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpFormColumnValueItem.toObject(e.items[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchCreateFormData = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchCreateFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchCreateFormData)
                return e;
            var t = new s.HttpResponseBodyBatchCreateFormData;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateFormData = function() {
        function e(e) {
            if (this.columnValues = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.dataId = 0,
        e.prototype.formGroupId = 0,
        e.prototype.columnValues = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.dataId && e.hasOwnProperty("dataId") && t.uint32(24).uint32(e.dataId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(32).uint32(e.formGroupId),
            null != e.columnValues && e.columnValues.length)
                for (var n = 0; n < e.columnValues.length; ++n)
                    s.CommonFormColumnValue.encode(e.columnValues[n], t.uint32(42).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.dataId = e.uint32();
                    break;
                case 4:
                    r.formGroupId = e.uint32();
                    break;
                case 5:
                    r.columnValues && r.columnValues.length || (r.columnValues = []),
                    r.columnValues.push(s.CommonFormColumnValue.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateFormData)
                return e;
            var t = new s.HttpRequestBodyUpdateFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.dataId && (t.dataId = e.dataId >>> 0),
            null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            e.columnValues) {
                if (!Array.isArray(e.columnValues))
                    throw TypeError(".HttpRequestBodyUpdateFormData.columnValues: array expected");
                t.columnValues = [];
                for (var n = 0; n < e.columnValues.length; ++n) {
                    if ("object" !== typeof e.columnValues[n])
                        throw TypeError(".HttpRequestBodyUpdateFormData.columnValues: object expected");
                    t.columnValues[n] = s.CommonFormColumnValue.fromObject(e.columnValues[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnValues = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0,
            n.dataId = 0,
            n.formGroupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.dataId && e.hasOwnProperty("dataId") && (n.dataId = e.dataId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            e.columnValues && e.columnValues.length) {
                n.columnValues = [];
                for (var r = 0; r < e.columnValues.length; ++r)
                    n.columnValues[r] = s.CommonFormColumnValue.toObject(e.columnValues[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateFormData = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.prototype.dataId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.dataId && e.hasOwnProperty("dataId") && t.uint32(24).uint32(e.dataId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                case 3:
                    r.dataId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUpdateFormData)
                return e;
            var t = new s.HttpResponseBodyUpdateFormData;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            null != e.dataId && (t.dataId = e.dataId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0,
            n.dataId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.dataId && e.hasOwnProperty("dataId") && (n.dataId = e.dataId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteFormData = function() {
        function e(e) {
            if (this.dataIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.dataIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.dataIds && e.dataIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.uint32(e.dataIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    if (r.dataIds && r.dataIds.length || (r.dataIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.dataIds.push(e.uint32())
                    } else
                        r.dataIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteFormData)
                return e;
            var t = new s.HttpRequestBodyDeleteFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.dataIds) {
                if (!Array.isArray(e.dataIds))
                    throw TypeError(".HttpRequestBodyDeleteFormData.dataIds: array expected");
                t.dataIds = [];
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.dataIds[n] = e.dataIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.dataIds = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.dataIds && e.dataIds.length) {
                n.dataIds = [];
                for (var r = 0; r < e.dataIds.length; ++r)
                    n.dataIds[r] = e.dataIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteFormData = function() {
        function e(e) {
            if (this.dataIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.prototype.dataIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.dataIds && e.dataIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.uint32(e.dataIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                case 3:
                    if (r.dataIds && r.dataIds.length || (r.dataIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.dataIds.push(e.uint32())
                    } else
                        r.dataIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDeleteFormData)
                return e;
            var t = new s.HttpResponseBodyDeleteFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            e.dataIds) {
                if (!Array.isArray(e.dataIds))
                    throw TypeError(".HttpResponseBodyDeleteFormData.dataIds: array expected");
                t.dataIds = [];
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.dataIds[n] = e.dataIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.dataIds = []),
            t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            e.dataIds && e.dataIds.length) {
                n.dataIds = [];
                for (var r = 0; r < e.dataIds.length; ++r)
                    n.dataIds[r] = e.dataIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyMoveFormData = function() {
        function e(e) {
            if (this.dataIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.formGroupId = 0,
        e.prototype.dataIds = a.emptyArray,
        e.prototype.nextSortIndex = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(24).uint32(e.formGroupId),
            null != e.dataIds && e.dataIds.length) {
                t.uint32(34).fork();
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.uint32(e.dataIds[n]);
                t.ldelim()
            }
            return null != e.nextSortIndex && e.hasOwnProperty("nextSortIndex") && t.uint32(40).uint32(e.nextSortIndex),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyMoveFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.formGroupId = e.uint32();
                    break;
                case 4:
                    if (r.dataIds && r.dataIds.length || (r.dataIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.dataIds.push(e.uint32())
                    } else
                        r.dataIds.push(e.uint32());
                    break;
                case 5:
                    r.nextSortIndex = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyMoveFormData)
                return e;
            var t = new s.HttpRequestBodyMoveFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            e.dataIds) {
                if (!Array.isArray(e.dataIds))
                    throw TypeError(".HttpRequestBodyMoveFormData.dataIds: array expected");
                t.dataIds = [];
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.dataIds[n] = e.dataIds[n] >>> 0
            }
            return null != e.nextSortIndex && (t.nextSortIndex = e.nextSortIndex >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.dataIds = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0,
            n.formGroupId = 0,
            n.nextSortIndex = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            e.dataIds && e.dataIds.length) {
                n.dataIds = [];
                for (var r = 0; r < e.dataIds.length; ++r)
                    n.dataIds[r] = e.dataIds[r]
            }
            return null != e.nextSortIndex && e.hasOwnProperty("nextSortIndex") && (n.nextSortIndex = e.nextSortIndex),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyMoveFormData = function() {
        function e(e) {
            if (this.formDataMap = {},
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.prototype.formDataMap = a.emptyObject,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.formDataMap && e.hasOwnProperty("formDataMap"))
                for (var n = Object.keys(e.formDataMap), r = 0; r < n.length; ++r)
                    t.uint32(26).fork().uint32(8).uint32(n[r]).uint32(16).uint32(e.formDataMap[n[r]]).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n, r = void 0 === t ? e.len : e.pos + t, i = new s.HttpResponseBodyMoveFormData;
            while (e.pos < r) {
                var u = e.uint32();
                switch (u >>> 3) {
                case 1:
                    i.formId = e.uint32();
                    break;
                case 2:
                    i.version = e.uint32();
                    break;
                case 3:
                    e.skip().pos++,
                    i.formDataMap === a.emptyObject && (i.formDataMap = {}),
                    n = e.uint32(),
                    e.pos++,
                    i.formDataMap[n] = e.uint32();
                    break;
                default:
                    e.skipType(7 & u);
                    break
                }
            }
            return i
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyMoveFormData)
                return e;
            var t = new s.HttpResponseBodyMoveFormData;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            e.formDataMap) {
                if ("object" !== typeof e.formDataMap)
                    throw TypeError(".HttpResponseBodyMoveFormData.formDataMap: object expected");
                t.formDataMap = {};
                for (var n = Object.keys(e.formDataMap), r = 0; r < n.length; ++r)
                    t.formDataMap[n[r]] = e.formDataMap[n[r]] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n, r = {};
            if ((t.objects || t.defaults) && (r.formDataMap = {}),
            t.defaults && (r.formId = 0,
            r.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (r.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (r.version = e.version),
            e.formDataMap && (n = Object.keys(e.formDataMap)).length) {
                r.formDataMap = {};
                for (var o = 0; o < n.length; ++o)
                    r.formDataMap[n[o]] = e.formDataMap[n[o]]
            }
            return r
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateFormDataGroup = function() {
        function e(e) {
            if (this.dataIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.prototype.formGroupId = 0,
        e.prototype.dataIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(24).uint32(e.formGroupId),
            null != e.dataIds && e.dataIds.length) {
                t.uint32(34).fork();
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.uint32(e.dataIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateFormDataGroup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.formGroupId = e.uint32();
                    break;
                case 4:
                    if (r.dataIds && r.dataIds.length || (r.dataIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.dataIds.push(e.uint32())
                    } else
                        r.dataIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateFormDataGroup)
                return e;
            var t = new s.HttpRequestBodyUpdateFormDataGroup;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            e.dataIds) {
                if (!Array.isArray(e.dataIds))
                    throw TypeError(".HttpRequestBodyUpdateFormDataGroup.dataIds: array expected");
                t.dataIds = [];
                for (var n = 0; n < e.dataIds.length; ++n)
                    t.dataIds[n] = e.dataIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.dataIds = []),
            t.defaults && (n.formId = 0,
            n.groupId = 0,
            n.formGroupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            e.dataIds && e.dataIds.length) {
                n.dataIds = [];
                for (var r = 0; r < e.dataIds.length; ++r)
                    n.dataIds[r] = e.dataIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateFormDataGroup = function() {
        function e(e) {
            if (this.formDataMap = {},
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.prototype.formDataMap = a.emptyObject,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            null != e.formDataMap && e.hasOwnProperty("formDataMap"))
                for (var n = Object.keys(e.formDataMap), r = 0; r < n.length; ++r)
                    t.uint32(26).fork().uint32(8).uint32(n[r]).uint32(16).uint32(e.formDataMap[n[r]]).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n, r = void 0 === t ? e.len : e.pos + t, i = new s.HttpResponseBodyUpdateFormDataGroup;
            while (e.pos < r) {
                var u = e.uint32();
                switch (u >>> 3) {
                case 1:
                    i.formId = e.uint32();
                    break;
                case 2:
                    i.version = e.uint32();
                    break;
                case 3:
                    e.skip().pos++,
                    i.formDataMap === a.emptyObject && (i.formDataMap = {}),
                    n = e.uint32(),
                    e.pos++,
                    i.formDataMap[n] = e.uint32();
                    break;
                default:
                    e.skipType(7 & u);
                    break
                }
            }
            return i
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUpdateFormDataGroup)
                return e;
            var t = new s.HttpResponseBodyUpdateFormDataGroup;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            e.formDataMap) {
                if ("object" !== typeof e.formDataMap)
                    throw TypeError(".HttpResponseBodyUpdateFormDataGroup.formDataMap: object expected");
                t.formDataMap = {};
                for (var n = Object.keys(e.formDataMap), r = 0; r < n.length; ++r)
                    t.formDataMap[n[r]] = e.formDataMap[n[r]] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n, r = {};
            if ((t.objects || t.defaults) && (r.formDataMap = {}),
            t.defaults && (r.formId = 0,
            r.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (r.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (r.version = e.version),
            e.formDataMap && (n = Object.keys(e.formDataMap)).length) {
                r.formDataMap = {};
                for (var o = 0; o < n.length; ++o)
                    r.formDataMap[n[o]] = e.formDataMap[n[o]]
            }
            return r
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetFormState = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetFormState;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetFormState)
                return e;
            var t = new s.HttpRequestBodyGetFormState;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.groupId = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetFormState = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype["delete"] = !1,
        e.prototype.finish = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e["delete"] && e.hasOwnProperty("delete") && t.uint32(8).bool(e["delete"]),
            null != e.finish && e.hasOwnProperty("finish") && t.uint32(16).bool(e.finish),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetFormState;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r["delete"] = e.bool();
                    break;
                case 2:
                    r.finish = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetFormState)
                return e;
            var t = new s.HttpResponseBodyGetFormState;
            return null != e["delete"] && (t["delete"] = Boolean(e["delete"])),
            null != e.finish && (t.finish = Boolean(e.finish)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n["delete"] = !1,
            n.finish = !1),
            null != e["delete"] && e.hasOwnProperty("delete") && (n["delete"] = e["delete"]),
            null != e.finish && e.hasOwnProperty("finish") && (n.finish = e.finish),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpFormColumnValueItem = function() {
        function e(e) {
            if (this.columnValues = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.columnValues = a.emptyArray,
        e.prototype.formGroupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.columnValues && e.columnValues.length)
                for (var n = 0; n < e.columnValues.length; ++n)
                    s.CommonFormColumnValue.encode(e.columnValues[n], t.uint32(10).fork()).ldelim();
            return null != e.formGroupId && e.hasOwnProperty("formGroupId") && t.uint32(16).uint32(e.formGroupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpFormColumnValueItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.columnValues && r.columnValues.length || (r.columnValues = []),
                    r.columnValues.push(s.CommonFormColumnValue.decode(e, e.uint32()));
                    break;
                case 2:
                    r.formGroupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpFormColumnValueItem)
                return e;
            var t = new s.HttpFormColumnValueItem;
            if (e.columnValues) {
                if (!Array.isArray(e.columnValues))
                    throw TypeError(".HttpFormColumnValueItem.columnValues: array expected");
                t.columnValues = [];
                for (var n = 0; n < e.columnValues.length; ++n) {
                    if ("object" !== typeof e.columnValues[n])
                        throw TypeError(".HttpFormColumnValueItem.columnValues: object expected");
                    t.columnValues[n] = s.CommonFormColumnValue.fromObject(e.columnValues[n])
                }
            }
            return null != e.formGroupId && (t.formGroupId = e.formGroupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnValues = []),
            t.defaults && (n.formGroupId = 0),
            e.columnValues && e.columnValues.length) {
                n.columnValues = [];
                for (var r = 0; r < e.columnValues.length; ++r)
                    n.columnValues[r] = s.CommonFormColumnValue.toObject(e.columnValues[r], t)
            }
            return null != e.formGroupId && e.hasOwnProperty("formGroupId") && (n.formGroupId = e.formGroupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyFormatFormData = function() {
        function e(e) {
            if (this.columnItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.columnItems = a.emptyArray,
        e.prototype.content = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.columnItems && e.columnItems.length)
                for (var n = 0; n < e.columnItems.length; ++n)
                    s.CommonFormColumnItem.encode(e.columnItems[n], t.uint32(10).fork()).ldelim();
            return null != e.content && e.hasOwnProperty("content") && t.uint32(18).string(e.content),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyFormatFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.columnItems && r.columnItems.length || (r.columnItems = []),
                    r.columnItems.push(s.CommonFormColumnItem.decode(e, e.uint32()));
                    break;
                case 2:
                    r.content = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyFormatFormData)
                return e;
            var t = new s.HttpRequestBodyFormatFormData;
            if (e.columnItems) {
                if (!Array.isArray(e.columnItems))
                    throw TypeError(".HttpRequestBodyFormatFormData.columnItems: array expected");
                t.columnItems = [];
                for (var n = 0; n < e.columnItems.length; ++n) {
                    if ("object" !== typeof e.columnItems[n])
                        throw TypeError(".HttpRequestBodyFormatFormData.columnItems: object expected");
                    t.columnItems[n] = s.CommonFormColumnItem.fromObject(e.columnItems[n])
                }
            }
            return null != e.content && (t.content = String(e.content)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnItems = []),
            t.defaults && (n.content = ""),
            e.columnItems && e.columnItems.length) {
                n.columnItems = [];
                for (var r = 0; r < e.columnItems.length; ++r)
                    n.columnItems[r] = s.CommonFormColumnItem.toObject(e.columnItems[r], t)
            }
            return null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyFormatFormData = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.items = a.emptyArray,
        e.prototype.existErrorData = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.HttpFormColumnValueItem.encode(e.items[n], t.uint32(10).fork()).ldelim();
            return null != e.existErrorData && e.hasOwnProperty("existErrorData") && t.uint32(16).bool(e.existErrorData),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyFormatFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.HttpFormColumnValueItem.decode(e, e.uint32()));
                    break;
                case 2:
                    r.existErrorData = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyFormatFormData)
                return e;
            var t = new s.HttpResponseBodyFormatFormData;
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".HttpResponseBodyFormatFormData.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".HttpResponseBodyFormatFormData.items: object expected");
                    t.items[n] = s.HttpFormColumnValueItem.fromObject(e.items[n])
                }
            }
            return null != e.existErrorData && (t.existErrorData = Boolean(e.existErrorData)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.existErrorData = !1),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.HttpFormColumnValueItem.toObject(e.items[r], t)
            }
            return null != e.existErrorData && e.hasOwnProperty("existErrorData") && (n.existErrorData = e.existErrorData),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckTicketToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.ticket = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.ticket && e.hasOwnProperty("ticket") && t.uint32(10).string(e.ticket),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckTicketToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.ticket = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckTicketToken)
                return e;
            var t = new s.HttpRequestBodyCheckTicketToken;
            return null != e.ticket && (t.ticket = String(e.ticket)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.ticket = ""),
            null != e.ticket && e.hasOwnProperty("ticket") && (n.ticket = e.ticket),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckTicketToken = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.type = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.type && e.hasOwnProperty("type") && t.uint32(24).uint32(e.type),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckTicketToken;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.type = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCheckTicketToken)
                return e;
            var t = new s.HttpResponseBodyCheckTicketToken;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.type && (t.type = e.type >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.type = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.type && e.hasOwnProperty("type") && (n.type = e.type),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCreateLiveCourse = function() {
        function e(e) {
            if (this.assistantIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.coverUrl = "",
        e.prototype.thumbCoverUrl = "",
        e.prototype.courseType = 0,
        e.prototype.introduction = "",
        e.prototype.preStartTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.duration = 0,
        e.prototype.maxMemberCount = 0,
        e.prototype.playbackSupport = !1,
        e.prototype.lecturerId = 0,
        e.prototype.assistantIds = a.emptyArray,
        e.prototype.couponCode = "",
        e.prototype.payType = 0,
        e.prototype.useDefaultCover = !1,
        e.prototype.itemId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && t.uint32(18).string(e.coverUrl),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && t.uint32(26).string(e.thumbCoverUrl),
            null != e.courseType && e.hasOwnProperty("courseType") && t.uint32(32).int32(e.courseType),
            null != e.introduction && e.hasOwnProperty("introduction") && t.uint32(42).string(e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && t.uint32(48).uint64(e.preStartTimestamp),
            null != e.duration && e.hasOwnProperty("duration") && t.uint32(56).uint32(e.duration),
            null != e.maxMemberCount && e.hasOwnProperty("maxMemberCount") && t.uint32(64).uint32(e.maxMemberCount),
            null != e.playbackSupport && e.hasOwnProperty("playbackSupport") && t.uint32(72).bool(e.playbackSupport),
            null != e.lecturerId && e.hasOwnProperty("lecturerId") && t.uint32(80).uint32(e.lecturerId),
            null != e.assistantIds && e.assistantIds.length) {
                t.uint32(90).fork();
                for (var n = 0; n < e.assistantIds.length; ++n)
                    t.uint32(e.assistantIds[n]);
                t.ldelim()
            }
            return null != e.couponCode && e.hasOwnProperty("couponCode") && t.uint32(98).string(e.couponCode),
            null != e.payType && e.hasOwnProperty("payType") && t.uint32(104).int32(e.payType),
            null != e.useDefaultCover && e.hasOwnProperty("useDefaultCover") && t.uint32(112).bool(e.useDefaultCover),
            null != e.itemId && e.hasOwnProperty("itemId") && t.uint32(122).string(e.itemId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCreateLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.coverUrl = e.string();
                    break;
                case 3:
                    r.thumbCoverUrl = e.string();
                    break;
                case 4:
                    r.courseType = e.int32();
                    break;
                case 5:
                    r.introduction = e.string();
                    break;
                case 6:
                    r.preStartTimestamp = e.uint64();
                    break;
                case 7:
                    r.duration = e.uint32();
                    break;
                case 8:
                    r.maxMemberCount = e.uint32();
                    break;
                case 9:
                    r.playbackSupport = e.bool();
                    break;
                case 10:
                    r.lecturerId = e.uint32();
                    break;
                case 11:
                    if (r.assistantIds && r.assistantIds.length || (r.assistantIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.assistantIds.push(e.uint32())
                    } else
                        r.assistantIds.push(e.uint32());
                    break;
                case 12:
                    r.couponCode = e.string();
                    break;
                case 13:
                    r.payType = e.int32();
                    break;
                case 14:
                    r.useDefaultCover = e.bool();
                    break;
                case 15:
                    r.itemId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCreateLiveCourse)
                return e;
            var t = new s.HttpRequestBodyCreateLiveCourse;
            switch (null != e.title && (t.title = String(e.title)),
            null != e.coverUrl && (t.coverUrl = String(e.coverUrl)),
            null != e.thumbCoverUrl && (t.thumbCoverUrl = String(e.thumbCoverUrl)),
            e.courseType) {
            case "CommonLiveTypeUndefined":
            case 0:
                t.courseType = 0;
                break;
            case "CommonLiveTypeVoiceAndText":
            case 1:
                t.courseType = 1;
                break;
            case "CommonLiveTypePPT":
            case 2:
                t.courseType = 2;
                break;
            case "CommonLiveTypeVideo":
            case 3:
                t.courseType = 3;
                break;
            case "CommonLiveTypeDesktopShare":
            case 4:
                t.courseType = 4;
                break
            }
            if (null != e.introduction && (t.introduction = String(e.introduction)),
            null != e.preStartTimestamp && (a.Long ? (t.preStartTimestamp = a.Long.fromValue(e.preStartTimestamp)).unsigned = !0 : "string" === typeof e.preStartTimestamp ? t.preStartTimestamp = parseInt(e.preStartTimestamp, 10) : "number" === typeof e.preStartTimestamp ? t.preStartTimestamp = e.preStartTimestamp : "object" === typeof e.preStartTimestamp && (t.preStartTimestamp = new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0))),
            null != e.duration && (t.duration = e.duration >>> 0),
            null != e.maxMemberCount && (t.maxMemberCount = e.maxMemberCount >>> 0),
            null != e.playbackSupport && (t.playbackSupport = Boolean(e.playbackSupport)),
            null != e.lecturerId && (t.lecturerId = e.lecturerId >>> 0),
            e.assistantIds) {
                if (!Array.isArray(e.assistantIds))
                    throw TypeError(".HttpRequestBodyCreateLiveCourse.assistantIds: array expected");
                t.assistantIds = [];
                for (var n = 0; n < e.assistantIds.length; ++n)
                    t.assistantIds[n] = e.assistantIds[n] >>> 0
            }
            switch (null != e.couponCode && (t.couponCode = String(e.couponCode)),
            e.payType) {
            case "CommonPayTypeUndefined":
            case 0:
                t.payType = 0;
                break;
            case "CommonPayTypeWeChat":
            case 1:
                t.payType = 1;
                break;
            case "CommonPayTypeAli":
            case 2:
                t.payType = 2;
                break;
            case "CommonPayTypeCoupon":
            case 3:
                t.payType = 3;
                break
            }
            return null != e.useDefaultCover && (t.useDefaultCover = Boolean(e.useDefaultCover)),
            null != e.itemId && (t.itemId = String(e.itemId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.assistantIds = []),
            t.defaults) {
                if (n.title = "",
                n.coverUrl = "",
                n.thumbCoverUrl = "",
                n.courseType = t.enums === String ? "CommonLiveTypeUndefined" : 0,
                n.introduction = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.preStartTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.preStartTimestamp = t.longs === String ? "0" : 0;
                n.duration = 0,
                n.maxMemberCount = 0,
                n.playbackSupport = !1,
                n.lecturerId = 0,
                n.couponCode = "",
                n.payType = t.enums === String ? "CommonPayTypeUndefined" : 0,
                n.useDefaultCover = !1,
                n.itemId = ""
            }
            if (null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && (n.coverUrl = e.coverUrl),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && (n.thumbCoverUrl = e.thumbCoverUrl),
            null != e.courseType && e.hasOwnProperty("courseType") && (n.courseType = t.enums === String ? s.CommonLiveType[e.courseType] : e.courseType),
            null != e.introduction && e.hasOwnProperty("introduction") && (n.introduction = e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && ("number" === typeof e.preStartTimestamp ? n.preStartTimestamp = t.longs === String ? String(e.preStartTimestamp) : e.preStartTimestamp : n.preStartTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.preStartTimestamp) : t.longs === Number ? new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0) : e.preStartTimestamp),
            null != e.duration && e.hasOwnProperty("duration") && (n.duration = e.duration),
            null != e.maxMemberCount && e.hasOwnProperty("maxMemberCount") && (n.maxMemberCount = e.maxMemberCount),
            null != e.playbackSupport && e.hasOwnProperty("playbackSupport") && (n.playbackSupport = e.playbackSupport),
            null != e.lecturerId && e.hasOwnProperty("lecturerId") && (n.lecturerId = e.lecturerId),
            e.assistantIds && e.assistantIds.length) {
                n.assistantIds = [];
                for (var o = 0; o < e.assistantIds.length; ++o)
                    n.assistantIds[o] = e.assistantIds[o]
            }
            return null != e.couponCode && e.hasOwnProperty("couponCode") && (n.couponCode = e.couponCode),
            null != e.payType && e.hasOwnProperty("payType") && (n.payType = t.enums === String ? s.CommonPayType[e.payType] : e.payType),
            null != e.useDefaultCover && e.hasOwnProperty("useDefaultCover") && (n.useDefaultCover = e.useDefaultCover),
            null != e.itemId && e.hasOwnProperty("itemId") && (n.itemId = e.itemId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCreateLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.groupId = 0,
        e.prototype.orderId = "",
        e.prototype.qrUrl = "",
        e.prototype.payUrl = "",
        e.prototype.orderStr = "",
        e.prototype.iFrameQrUrl = "",
        e.prototype.isPay = !1,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.amount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(26).string(e.orderId),
            null != e.qrUrl && e.hasOwnProperty("qrUrl") && t.uint32(34).string(e.qrUrl),
            null != e.payUrl && e.hasOwnProperty("payUrl") && t.uint32(42).string(e.payUrl),
            null != e.orderStr && e.hasOwnProperty("orderStr") && t.uint32(50).string(e.orderStr),
            null != e.iFrameQrUrl && e.hasOwnProperty("iFrameQrUrl") && t.uint32(58).string(e.iFrameQrUrl),
            null != e.isPay && e.hasOwnProperty("isPay") && t.uint32(64).bool(e.isPay),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(72).uint64(e.expiredTimestamp),
            null != e.amount && e.hasOwnProperty("amount") && t.uint32(80).uint32(e.amount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCreateLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.orderId = e.string();
                    break;
                case 4:
                    r.qrUrl = e.string();
                    break;
                case 5:
                    r.payUrl = e.string();
                    break;
                case 6:
                    r.orderStr = e.string();
                    break;
                case 7:
                    r.iFrameQrUrl = e.string();
                    break;
                case 8:
                    r.isPay = e.bool();
                    break;
                case 9:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 10:
                    r.amount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCreateLiveCourse)
                return e;
            var t = new s.HttpResponseBodyCreateLiveCourse;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.orderId && (t.orderId = String(e.orderId)),
            null != e.qrUrl && (t.qrUrl = String(e.qrUrl)),
            null != e.payUrl && (t.payUrl = String(e.payUrl)),
            null != e.orderStr && (t.orderStr = String(e.orderStr)),
            null != e.iFrameQrUrl && (t.iFrameQrUrl = String(e.iFrameQrUrl)),
            null != e.isPay && (t.isPay = Boolean(e.isPay)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.amount && (t.amount = e.amount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.courseId = "",
                n.groupId = 0,
                n.orderId = "",
                n.qrUrl = "",
                n.payUrl = "",
                n.orderStr = "",
                n.iFrameQrUrl = "",
                n.isPay = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                n.amount = 0
            }
            return null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            null != e.qrUrl && e.hasOwnProperty("qrUrl") && (n.qrUrl = e.qrUrl),
            null != e.payUrl && e.hasOwnProperty("payUrl") && (n.payUrl = e.payUrl),
            null != e.orderStr && e.hasOwnProperty("orderStr") && (n.orderStr = e.orderStr),
            null != e.iFrameQrUrl && e.hasOwnProperty("iFrameQrUrl") && (n.iFrameQrUrl = e.iFrameQrUrl),
            null != e.isPay && e.hasOwnProperty("isPay") && (n.isPay = e.isPay),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.amount && e.hasOwnProperty("amount") && (n.amount = e.amount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUpdateLiveCourse = function() {
        function e(e) {
            if (this.assistantIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.title = "",
        e.prototype.coverUrl = "",
        e.prototype.thumbCoverUrl = "",
        e.prototype.introduction = "",
        e.prototype.preStartTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.lecturerId = 0,
        e.prototype.assistantIds = a.emptyArray,
        e.prototype.useDefaultCover = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && t.uint32(26).string(e.coverUrl),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && t.uint32(34).string(e.thumbCoverUrl),
            null != e.introduction && e.hasOwnProperty("introduction") && t.uint32(42).string(e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && t.uint32(48).uint64(e.preStartTimestamp),
            null != e.lecturerId && e.hasOwnProperty("lecturerId") && t.uint32(56).uint32(e.lecturerId),
            null != e.assistantIds && e.assistantIds.length) {
                t.uint32(66).fork();
                for (var n = 0; n < e.assistantIds.length; ++n)
                    t.uint32(e.assistantIds[n]);
                t.ldelim()
            }
            return null != e.useDefaultCover && e.hasOwnProperty("useDefaultCover") && t.uint32(72).bool(e.useDefaultCover),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUpdateLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.coverUrl = e.string();
                    break;
                case 4:
                    r.thumbCoverUrl = e.string();
                    break;
                case 5:
                    r.introduction = e.string();
                    break;
                case 6:
                    r.preStartTimestamp = e.uint64();
                    break;
                case 7:
                    r.lecturerId = e.uint32();
                    break;
                case 8:
                    if (r.assistantIds && r.assistantIds.length || (r.assistantIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.assistantIds.push(e.uint32())
                    } else
                        r.assistantIds.push(e.uint32());
                    break;
                case 9:
                    r.useDefaultCover = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUpdateLiveCourse)
                return e;
            var t = new s.HttpRequestBodyUpdateLiveCourse;
            if (null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.title && (t.title = String(e.title)),
            null != e.coverUrl && (t.coverUrl = String(e.coverUrl)),
            null != e.thumbCoverUrl && (t.thumbCoverUrl = String(e.thumbCoverUrl)),
            null != e.introduction && (t.introduction = String(e.introduction)),
            null != e.preStartTimestamp && (a.Long ? (t.preStartTimestamp = a.Long.fromValue(e.preStartTimestamp)).unsigned = !0 : "string" === typeof e.preStartTimestamp ? t.preStartTimestamp = parseInt(e.preStartTimestamp, 10) : "number" === typeof e.preStartTimestamp ? t.preStartTimestamp = e.preStartTimestamp : "object" === typeof e.preStartTimestamp && (t.preStartTimestamp = new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0))),
            null != e.lecturerId && (t.lecturerId = e.lecturerId >>> 0),
            e.assistantIds) {
                if (!Array.isArray(e.assistantIds))
                    throw TypeError(".HttpRequestBodyUpdateLiveCourse.assistantIds: array expected");
                t.assistantIds = [];
                for (var n = 0; n < e.assistantIds.length; ++n)
                    t.assistantIds[n] = e.assistantIds[n] >>> 0
            }
            return null != e.useDefaultCover && (t.useDefaultCover = Boolean(e.useDefaultCover)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.assistantIds = []),
            t.defaults) {
                if (n.courseId = "",
                n.title = "",
                n.coverUrl = "",
                n.thumbCoverUrl = "",
                n.introduction = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.preStartTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.preStartTimestamp = t.longs === String ? "0" : 0;
                n.lecturerId = 0,
                n.useDefaultCover = !1
            }
            if (null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && (n.coverUrl = e.coverUrl),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && (n.thumbCoverUrl = e.thumbCoverUrl),
            null != e.introduction && e.hasOwnProperty("introduction") && (n.introduction = e.introduction),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && ("number" === typeof e.preStartTimestamp ? n.preStartTimestamp = t.longs === String ? String(e.preStartTimestamp) : e.preStartTimestamp : n.preStartTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.preStartTimestamp) : t.longs === Number ? new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0) : e.preStartTimestamp),
            null != e.lecturerId && e.hasOwnProperty("lecturerId") && (n.lecturerId = e.lecturerId),
            e.assistantIds && e.assistantIds.length) {
                n.assistantIds = [];
                for (var o = 0; o < e.assistantIds.length; ++o)
                    n.assistantIds[o] = e.assistantIds[o]
            }
            return null != e.useDefaultCover && e.hasOwnProperty("useDefaultCover") && (n.useDefaultCover = e.useDefaultCover),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUpdateLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUpdateLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUpdateLiveCourse ? e : new s.HttpResponseBodyUpdateLiveCourse
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupLiveInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupLiveInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupLiveInfo)
                return e;
            var t = new s.HttpRequestBodyGetGroupLiveInfo;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupLiveInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveAllInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.liveAllInfo && e.hasOwnProperty("liveAllInfo") && s.HttpLiveAllInfo.encode(e.liveAllInfo, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupLiveInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveAllInfo = s.HttpLiveAllInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupLiveInfo)
                return e;
            var t = new s.HttpResponseBodyGetGroupLiveInfo;
            if (null != e.liveAllInfo) {
                if ("object" !== typeof e.liveAllInfo)
                    throw TypeError(".HttpResponseBodyGetGroupLiveInfo.liveAllInfo: object expected");
                t.liveAllInfo = s.HttpLiveAllInfo.fromObject(e.liveAllInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.liveAllInfo = null),
            null != e.liveAllInfo && e.hasOwnProperty("liveAllInfo") && (n.liveAllInfo = s.HttpLiveAllInfo.toObject(e.liveAllInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyBatchGetGroupLiveInfo = function() {
        function e(e) {
            if (this.groupIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupIds && e.groupIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.groupIds.length; ++n)
                    t.uint32(e.groupIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyBatchGetGroupLiveInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.groupIds && r.groupIds.length || (r.groupIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.groupIds.push(e.uint32())
                    } else
                        r.groupIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyBatchGetGroupLiveInfo)
                return e;
            var t = new s.HttpRequestBodyBatchGetGroupLiveInfo;
            if (e.groupIds) {
                if (!Array.isArray(e.groupIds))
                    throw TypeError(".HttpRequestBodyBatchGetGroupLiveInfo.groupIds: array expected");
                t.groupIds = [];
                for (var n = 0; n < e.groupIds.length; ++n)
                    t.groupIds[n] = e.groupIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupIds = []),
            e.groupIds && e.groupIds.length) {
                n.groupIds = [];
                for (var r = 0; r < e.groupIds.length; ++r)
                    n.groupIds[r] = e.groupIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyBatchGetGroupLiveInfo = function() {
        function e(e) {
            if (this.liveAllInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveAllInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.liveAllInfos && e.liveAllInfos.length)
                for (var n = 0; n < e.liveAllInfos.length; ++n)
                    s.HttpLiveAllInfo.encode(e.liveAllInfos[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyBatchGetGroupLiveInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveAllInfos && r.liveAllInfos.length || (r.liveAllInfos = []),
                    r.liveAllInfos.push(s.HttpLiveAllInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyBatchGetGroupLiveInfo)
                return e;
            var t = new s.HttpResponseBodyBatchGetGroupLiveInfo;
            if (e.liveAllInfos) {
                if (!Array.isArray(e.liveAllInfos))
                    throw TypeError(".HttpResponseBodyBatchGetGroupLiveInfo.liveAllInfos: array expected");
                t.liveAllInfos = [];
                for (var n = 0; n < e.liveAllInfos.length; ++n) {
                    if ("object" !== typeof e.liveAllInfos[n])
                        throw TypeError(".HttpResponseBodyBatchGetGroupLiveInfo.liveAllInfos: object expected");
                    t.liveAllInfos[n] = s.HttpLiveAllInfo.fromObject(e.liveAllInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.liveAllInfos = []),
            e.liveAllInfos && e.liveAllInfos.length) {
                n.liveAllInfos = [];
                for (var r = 0; r < e.liveAllInfos.length; ++r)
                    n.liveAllInfos[r] = s.HttpLiveAllInfo.toObject(e.liveAllInfos[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetLiveCourseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetLiveCourseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetLiveCourseInfo)
                return e;
            var t = new s.HttpRequestBodyGetLiveCourseInfo;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseId = ""),
            null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetLiveCourseInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveCourse = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.liveCourse && e.hasOwnProperty("liveCourse") && s.HttpLiveCourse.encode(e.liveCourse, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetLiveCourseInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveCourse = s.HttpLiveCourse.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetLiveCourseInfo)
                return e;
            var t = new s.HttpResponseBodyGetLiveCourseInfo;
            if (null != e.liveCourse) {
                if ("object" !== typeof e.liveCourse)
                    throw TypeError(".HttpResponseBodyGetLiveCourseInfo.liveCourse: object expected");
                t.liveCourse = s.HttpLiveCourse.fromObject(e.liveCourse)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.liveCourse = null),
            null != e.liveCourse && e.hasOwnProperty("liveCourse") && (n.liveCourse = s.HttpLiveCourse.toObject(e.liveCourse, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetLiveCourseAndOrderInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetLiveCourseAndOrderInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetLiveCourseAndOrderInfo)
                return e;
            var t = new s.HttpRequestBodyGetLiveCourseAndOrderInfo;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseId = ""),
            null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetLiveCourseAndOrderInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveAllInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.liveAllInfo && e.hasOwnProperty("liveAllInfo") && s.HttpLiveAllInfo.encode(e.liveAllInfo, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetLiveCourseAndOrderInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveAllInfo = s.HttpLiveAllInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetLiveCourseAndOrderInfo)
                return e;
            var t = new s.HttpResponseBodyGetLiveCourseAndOrderInfo;
            if (null != e.liveAllInfo) {
                if ("object" !== typeof e.liveAllInfo)
                    throw TypeError(".HttpResponseBodyGetLiveCourseAndOrderInfo.liveAllInfo: object expected");
                t.liveAllInfo = s.HttpLiveAllInfo.fromObject(e.liveAllInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.liveAllInfo = null),
            null != e.liveAllInfo && e.hasOwnProperty("liveAllInfo") && (n.liveAllInfo = s.HttpLiveAllInfo.toObject(e.liveAllInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyLiveCourses = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseStatus = 0,
        e.prototype.offset = 0,
        e.prototype.limit = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseStatus && e.hasOwnProperty("courseStatus") && t.uint32(8).int32(e.courseStatus),
            null != e.offset && e.hasOwnProperty("offset") && t.uint32(16).uint32(e.offset),
            null != e.limit && e.hasOwnProperty("limit") && t.uint32(24).uint32(e.limit),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyLiveCourses;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseStatus = e.int32();
                    break;
                case 2:
                    r.offset = e.uint32();
                    break;
                case 3:
                    r.limit = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetMyLiveCourses)
                return e;
            var t = new s.HttpRequestBodyGetMyLiveCourses;
            switch (e.courseStatus) {
            case "CommonLiveStatusNotStarted":
            case 0:
                t.courseStatus = 0;
                break;
            case "CommonLiveStatusLive":
            case 1:
                t.courseStatus = 1;
                break;
            case "CommonLiveStatusEnd":
            case 2:
                t.courseStatus = 2;
                break
            }
            return null != e.offset && (t.offset = e.offset >>> 0),
            null != e.limit && (t.limit = e.limit >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseStatus = t.enums === String ? "CommonLiveStatusNotStarted" : 0,
            n.offset = 0,
            n.limit = 0),
            null != e.courseStatus && e.hasOwnProperty("courseStatus") && (n.courseStatus = t.enums === String ? s.CommonLiveStatus[e.courseStatus] : e.courseStatus),
            null != e.offset && e.hasOwnProperty("offset") && (n.offset = e.offset),
            null != e.limit && e.hasOwnProperty("limit") && (n.limit = e.limit),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyLiveCourses = function() {
        function e(e) {
            if (this.liveCourses = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveCourses = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.liveCourses && e.liveCourses.length)
                for (var n = 0; n < e.liveCourses.length; ++n)
                    s.HttpLiveCourse.encode(e.liveCourses[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyLiveCourses;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveCourses && r.liveCourses.length || (r.liveCourses = []),
                    r.liveCourses.push(s.HttpLiveCourse.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyLiveCourses)
                return e;
            var t = new s.HttpResponseBodyGetMyLiveCourses;
            if (e.liveCourses) {
                if (!Array.isArray(e.liveCourses))
                    throw TypeError(".HttpResponseBodyGetMyLiveCourses.liveCourses: array expected");
                t.liveCourses = [];
                for (var n = 0; n < e.liveCourses.length; ++n) {
                    if ("object" !== typeof e.liveCourses[n])
                        throw TypeError(".HttpResponseBodyGetMyLiveCourses.liveCourses: object expected");
                    t.liveCourses[n] = s.HttpLiveCourse.fromObject(e.liveCourses[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.liveCourses = []),
            t.defaults && (n.hasMore = !1),
            e.liveCourses && e.liveCourses.length) {
                n.liveCourses = [];
                for (var r = 0; r < e.liveCourses.length; ++r)
                    n.liveCourses[r] = s.HttpLiveCourse.toObject(e.liveCourses[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetMyLiveOrders = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.offset = 0,
        e.prototype.limit = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.offset && e.hasOwnProperty("offset") && t.uint32(8).uint32(e.offset),
            null != e.limit && e.hasOwnProperty("limit") && t.uint32(16).uint32(e.limit),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetMyLiveOrders;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.offset = e.uint32();
                    break;
                case 2:
                    r.limit = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetMyLiveOrders)
                return e;
            var t = new s.HttpRequestBodyGetMyLiveOrders;
            return null != e.offset && (t.offset = e.offset >>> 0),
            null != e.limit && (t.limit = e.limit >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.offset = 0,
            n.limit = 0),
            null != e.offset && e.hasOwnProperty("offset") && (n.offset = e.offset),
            null != e.limit && e.hasOwnProperty("limit") && (n.limit = e.limit),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetMyLiveOrders = function() {
        function e(e) {
            if (this.liveAllInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveAllInfos = a.emptyArray,
        e.prototype.hasMore = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.liveAllInfos && e.liveAllInfos.length)
                for (var n = 0; n < e.liveAllInfos.length; ++n)
                    s.HttpLiveAllInfo.encode(e.liveAllInfos[n], t.uint32(10).fork()).ldelim();
            return null != e.hasMore && e.hasOwnProperty("hasMore") && t.uint32(16).bool(e.hasMore),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetMyLiveOrders;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveAllInfos && r.liveAllInfos.length || (r.liveAllInfos = []),
                    r.liveAllInfos.push(s.HttpLiveAllInfo.decode(e, e.uint32()));
                    break;
                case 2:
                    r.hasMore = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetMyLiveOrders)
                return e;
            var t = new s.HttpResponseBodyGetMyLiveOrders;
            if (e.liveAllInfos) {
                if (!Array.isArray(e.liveAllInfos))
                    throw TypeError(".HttpResponseBodyGetMyLiveOrders.liveAllInfos: array expected");
                t.liveAllInfos = [];
                for (var n = 0; n < e.liveAllInfos.length; ++n) {
                    if ("object" !== typeof e.liveAllInfos[n])
                        throw TypeError(".HttpResponseBodyGetMyLiveOrders.liveAllInfos: object expected");
                    t.liveAllInfos[n] = s.HttpLiveAllInfo.fromObject(e.liveAllInfos[n])
                }
            }
            return null != e.hasMore && (t.hasMore = Boolean(e.hasMore)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.liveAllInfos = []),
            t.defaults && (n.hasMore = !1),
            e.liveAllInfos && e.liveAllInfos.length) {
                n.liveAllInfos = [];
                for (var r = 0; r < e.liveAllInfos.length; ++r)
                    n.liveAllInfos[r] = s.HttpLiveAllInfo.toObject(e.liveAllInfos[r], t)
            }
            return null != e.hasMore && e.hasOwnProperty("hasMore") && (n.hasMore = e.hasMore),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyJoinLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.couponCode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.couponCode && e.hasOwnProperty("couponCode") && t.uint32(18).string(e.couponCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyJoinLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.couponCode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyJoinLiveCourse)
                return e;
            var t = new s.HttpRequestBodyJoinLiveCourse;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.couponCode && (t.couponCode = String(e.couponCode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseId = "",
            n.couponCode = ""),
            null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.couponCode && e.hasOwnProperty("couponCode") && (n.couponCode = e.couponCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyJoinLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyJoinLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyJoinLiveCourse)
                return e;
            var t = new s.HttpResponseBodyJoinLiveCourse;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyStartLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyStartLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyStartLiveCourse)
                return e;
            var t = new s.HttpRequestBodyStartLiveCourse;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyStartLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelId = "",
        e.prototype.channelName = "",
        e.prototype.pushUrl = "",
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.courseType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelId && e.hasOwnProperty("channelId") && t.uint32(10).string(e.channelId),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(18).string(e.channelName),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && t.uint32(26).string(e.pushUrl),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(32).uint64(e.liveVersion),
            null != e.courseType && e.hasOwnProperty("courseType") && t.uint32(40).int32(e.courseType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyStartLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelId = e.string();
                    break;
                case 2:
                    r.channelName = e.string();
                    break;
                case 3:
                    r.pushUrl = e.string();
                    break;
                case 4:
                    r.liveVersion = e.uint64();
                    break;
                case 5:
                    r.courseType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyStartLiveCourse)
                return e;
            var t = new s.HttpResponseBodyStartLiveCourse;
            switch (null != e.channelId && (t.channelId = String(e.channelId)),
            null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.pushUrl && (t.pushUrl = String(e.pushUrl)),
            null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            e.courseType) {
            case "CommonLiveTypeUndefined":
            case 0:
                t.courseType = 0;
                break;
            case "CommonLiveTypeVoiceAndText":
            case 1:
                t.courseType = 1;
                break;
            case "CommonLiveTypePPT":
            case 2:
                t.courseType = 2;
                break;
            case "CommonLiveTypeVideo":
            case 3:
                t.courseType = 3;
                break;
            case "CommonLiveTypeDesktopShare":
            case 4:
                t.courseType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.channelId = "",
                n.channelName = "",
                n.pushUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0;
                n.courseType = t.enums === String ? "CommonLiveTypeUndefined" : 0
            }
            return null != e.channelId && e.hasOwnProperty("channelId") && (n.channelId = e.channelId),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && (n.pushUrl = e.pushUrl),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            null != e.courseType && e.hasOwnProperty("courseType") && (n.courseType = t.enums === String ? s.CommonLiveType[e.courseType] : e.courseType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyRestartLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyRestartLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyRestartLiveCourse)
                return e;
            var t = new s.HttpRequestBodyRestartLiveCourse;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyRestartLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelId = "",
        e.prototype.channelName = "",
        e.prototype.pushUrl = "",
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.courseType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelId && e.hasOwnProperty("channelId") && t.uint32(10).string(e.channelId),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(18).string(e.channelName),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && t.uint32(26).string(e.pushUrl),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(32).uint64(e.liveVersion),
            null != e.courseType && e.hasOwnProperty("courseType") && t.uint32(40).int32(e.courseType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyRestartLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelId = e.string();
                    break;
                case 2:
                    r.channelName = e.string();
                    break;
                case 3:
                    r.pushUrl = e.string();
                    break;
                case 4:
                    r.liveVersion = e.uint64();
                    break;
                case 5:
                    r.courseType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyRestartLiveCourse)
                return e;
            var t = new s.HttpResponseBodyRestartLiveCourse;
            switch (null != e.channelId && (t.channelId = String(e.channelId)),
            null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.pushUrl && (t.pushUrl = String(e.pushUrl)),
            null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            e.courseType) {
            case "CommonLiveTypeUndefined":
            case 0:
                t.courseType = 0;
                break;
            case "CommonLiveTypeVoiceAndText":
            case 1:
                t.courseType = 1;
                break;
            case "CommonLiveTypePPT":
            case 2:
                t.courseType = 2;
                break;
            case "CommonLiveTypeVideo":
            case 3:
                t.courseType = 3;
                break;
            case "CommonLiveTypeDesktopShare":
            case 4:
                t.courseType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.channelId = "",
                n.channelName = "",
                n.pushUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0;
                n.courseType = t.enums === String ? "CommonLiveTypeUndefined" : 0
            }
            return null != e.channelId && e.hasOwnProperty("channelId") && (n.channelId = e.channelId),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.pushUrl && e.hasOwnProperty("pushUrl") && (n.pushUrl = e.pushUrl),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            null != e.courseType && e.hasOwnProperty("courseType") && (n.courseType = t.enums === String ? s.CommonLiveType[e.courseType] : e.courseType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyEndLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyEndLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyEndLiveCourse)
                return e;
            var t = new s.HttpRequestBodyEndLiveCourse;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyEndLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyEndLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyEndLiveCourse ? e : new s.HttpResponseBodyEndLiveCourse
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMemberSendVoiceSupport = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberSendVoiceSupport = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberSendVoiceSupport && e.hasOwnProperty("memberSendVoiceSupport") && t.uint32(16).bool(e.memberSendVoiceSupport),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMemberSendVoiceSupport;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.memberSendVoiceSupport = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMemberSendVoiceSupport)
                return e;
            var t = new s.HttpRequestBodySetMemberSendVoiceSupport;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.memberSendVoiceSupport && (t.memberSendVoiceSupport = Boolean(e.memberSendVoiceSupport)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.memberSendVoiceSupport = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.memberSendVoiceSupport && e.hasOwnProperty("memberSendVoiceSupport") && (n.memberSendVoiceSupport = e.memberSendVoiceSupport),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMemberSendVoiceSupport = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMemberSendVoiceSupport;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetMemberSendVoiceSupport ? e : new s.HttpResponseBodySetMemberSendVoiceSupport
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySetMemberMessageUpperLectureAreaSupport = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.memberMessageUpperLectureAreaSupport = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.memberMessageUpperLectureAreaSupport && e.hasOwnProperty("memberMessageUpperLectureAreaSupport") && t.uint32(16).bool(e.memberMessageUpperLectureAreaSupport),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySetMemberMessageUpperLectureAreaSupport;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.memberMessageUpperLectureAreaSupport = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySetMemberMessageUpperLectureAreaSupport)
                return e;
            var t = new s.HttpRequestBodySetMemberMessageUpperLectureAreaSupport;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.memberMessageUpperLectureAreaSupport && (t.memberMessageUpperLectureAreaSupport = Boolean(e.memberMessageUpperLectureAreaSupport)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.memberMessageUpperLectureAreaSupport = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.memberMessageUpperLectureAreaSupport && e.hasOwnProperty("memberMessageUpperLectureAreaSupport") && (n.memberMessageUpperLectureAreaSupport = e.memberMessageUpperLectureAreaSupport),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySetMemberMessageUpperLectureAreaSupport = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySetMemberMessageUpperLectureAreaSupport;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySetMemberMessageUpperLectureAreaSupport ? e : new s.HttpResponseBodySetMemberMessageUpperLectureAreaSupport
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadCover = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.data = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.data && e.hasOwnProperty("data") && t.uint32(10).bytes(e.data),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadCover;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.data = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadCover)
                return e;
            var t = new s.HttpRequestBodyUploadCover;
            return null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (t.bytes === String ? n.data = "" : (n.data = [],
            t.bytes !== Array && (n.data = a.newBuffer(n.data)))),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadCover = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.coverUrl = "",
        e.prototype.thumbCoverUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && t.uint32(10).string(e.coverUrl),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && t.uint32(18).string(e.thumbCoverUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadCover;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.coverUrl = e.string();
                    break;
                case 2:
                    r.thumbCoverUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUploadCover)
                return e;
            var t = new s.HttpResponseBodyUploadCover;
            return null != e.coverUrl && (t.coverUrl = String(e.coverUrl)),
            null != e.thumbCoverUrl && (t.thumbCoverUrl = String(e.thumbCoverUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.coverUrl = "",
            n.thumbCoverUrl = ""),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && (n.coverUrl = e.coverUrl),
            null != e.thumbCoverUrl && e.hasOwnProperty("thumbCoverUrl") && (n.thumbCoverUrl = e.thumbCoverUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUseCoupon = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.couponCode = "",
        e.prototype.courseType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.couponCode && e.hasOwnProperty("couponCode") && t.uint32(10).string(e.couponCode),
            null != e.courseType && e.hasOwnProperty("courseType") && t.uint32(16).int32(e.courseType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUseCoupon;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.couponCode = e.string();
                    break;
                case 2:
                    r.courseType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUseCoupon)
                return e;
            var t = new s.HttpRequestBodyUseCoupon;
            switch (null != e.couponCode && (t.couponCode = String(e.couponCode)),
            e.courseType) {
            case "CommonLiveTypeUndefined":
            case 0:
                t.courseType = 0;
                break;
            case "CommonLiveTypeVoiceAndText":
            case 1:
                t.courseType = 1;
                break;
            case "CommonLiveTypePPT":
            case 2:
                t.courseType = 2;
                break;
            case "CommonLiveTypeVideo":
            case 3:
                t.courseType = 3;
                break;
            case "CommonLiveTypeDesktopShare":
            case 4:
                t.courseType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.couponCode = "",
            n.courseType = t.enums === String ? "CommonLiveTypeUndefined" : 0),
            null != e.couponCode && e.hasOwnProperty("couponCode") && (n.couponCode = e.couponCode),
            null != e.courseType && e.hasOwnProperty("courseType") && (n.courseType = t.enums === String ? s.CommonLiveType[e.courseType] : e.courseType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUseCoupon = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.couponInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.couponInfo && e.hasOwnProperty("couponInfo") && s.HttpCoupon.encode(e.couponInfo, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUseCoupon;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.couponInfo = s.HttpCoupon.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyUseCoupon)
                return e;
            var t = new s.HttpResponseBodyUseCoupon;
            if (null != e.couponInfo) {
                if ("object" !== typeof e.couponInfo)
                    throw TypeError(".HttpResponseBodyUseCoupon.couponInfo: object expected");
                t.couponInfo = s.HttpCoupon.fromObject(e.couponInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.couponInfo = null),
            null != e.couponInfo && e.hasOwnProperty("couponInfo") && (n.couponInfo = s.HttpCoupon.toObject(e.couponInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetGroupInfoByOrderId = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.orderId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(10).string(e.orderId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetGroupInfoByOrderId;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.orderId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetGroupInfoByOrderId)
                return e;
            var t = new s.HttpRequestBodyGetGroupInfoByOrderId;
            return null != e.orderId && (t.orderId = String(e.orderId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.orderId = ""),
            null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetGroupInfoByOrderId = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetGroupInfoByOrderId;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetGroupInfoByOrderId)
                return e;
            var t = new s.HttpResponseBodyGetGroupInfoByOrderId;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetLiveCourseBasicInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetLiveCourseBasicInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetLiveCourseBasicInfo)
                return e;
            var t = new s.HttpRequestBodyGetLiveCourseBasicInfo;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseId = ""),
            null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetLiveCourseBasicInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveCourse = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.liveCourse && e.hasOwnProperty("liveCourse") && s.HttpLiveCourseBasicInfo.encode(e.liveCourse, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetLiveCourseBasicInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveCourse = s.HttpLiveCourseBasicInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetLiveCourseBasicInfo)
                return e;
            var t = new s.HttpResponseBodyGetLiveCourseBasicInfo;
            if (null != e.liveCourse) {
                if ("object" !== typeof e.liveCourse)
                    throw TypeError(".HttpResponseBodyGetLiveCourseBasicInfo.liveCourse: object expected");
                t.liveCourse = s.HttpLiveCourseBasicInfo.fromObject(e.liveCourse)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.liveCourse = null),
            null != e.liveCourse && e.hasOwnProperty("liveCourse") && (n.liveCourse = s.HttpLiveCourseBasicInfo.toObject(e.liveCourse, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyCheckUserInLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyCheckUserInLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyCheckUserInLiveCourse)
                return e;
            var t = new s.HttpRequestBodyCheckUserInLiveCourse;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseId = ""),
            null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyCheckUserInLiveCourse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyCheckUserInLiveCourse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyCheckUserInLiveCourse)
                return e;
            var t = new s.HttpResponseBodyCheckUserInLiveCourse;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyGetOrderPayStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.orderId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.orderId && e.hasOwnProperty("orderId") && t.uint32(10).string(e.orderId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyGetOrderPayStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.orderId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyGetOrderPayStatus)
                return e;
            var t = new s.HttpRequestBodyGetOrderPayStatus;
            return null != e.orderId && (t.orderId = String(e.orderId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.orderId = ""),
            null != e.orderId && e.hasOwnProperty("orderId") && (n.orderId = e.orderId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyGetOrderPayStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = !1,
        e.prototype.payUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).bool(e.status),
            null != e.payUrl && e.hasOwnProperty("payUrl") && t.uint32(18).string(e.payUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyGetOrderPayStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.bool();
                    break;
                case 2:
                    r.payUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyGetOrderPayStatus)
                return e;
            var t = new s.HttpResponseBodyGetOrderPayStatus;
            return null != e.status && (t.status = Boolean(e.status)),
            null != e.payUrl && (t.payUrl = String(e.payUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.status = !1,
            n.payUrl = ""),
            null != e.status && e.hasOwnProperty("status") && (n.status = e.status),
            null != e.payUrl && e.hasOwnProperty("payUrl") && (n.payUrl = e.payUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyUploadLivePpt = function() {
        function e(e) {
            if (this.imageItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.imageItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.imageItems && e.imageItems.length)
                for (var n = 0; n < e.imageItems.length; ++n)
                    s.HttpUploadLivePpt.encode(e.imageItems[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyUploadLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.imageItems && r.imageItems.length || (r.imageItems = []),
                    r.imageItems.push(s.HttpUploadLivePpt.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyUploadLivePpt)
                return e;
            var t = new s.HttpRequestBodyUploadLivePpt;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.imageItems) {
                if (!Array.isArray(e.imageItems))
                    throw TypeError(".HttpRequestBodyUploadLivePpt.imageItems: array expected");
                t.imageItems = [];
                for (var n = 0; n < e.imageItems.length; ++n) {
                    if ("object" !== typeof e.imageItems[n])
                        throw TypeError(".HttpRequestBodyUploadLivePpt.imageItems: object expected");
                    t.imageItems[n] = s.HttpUploadLivePpt.fromObject(e.imageItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.imageItems = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.imageItems && e.imageItems.length) {
                n.imageItems = [];
                for (var r = 0; r < e.imageItems.length; ++r)
                    n.imageItems[r] = s.HttpUploadLivePpt.toObject(e.imageItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyUploadLivePpt = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyUploadLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyUploadLivePpt ? e : new s.HttpResponseBodyUploadLivePpt
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyDeleteLivePpt = function() {
        function e(e) {
            if (this.fileIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.fileIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.fileIds && e.fileIds.length)
                for (var n = 0; n < e.fileIds.length; ++n)
                    t.uint32(18).string(e.fileIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyDeleteLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.fileIds && r.fileIds.length || (r.fileIds = []),
                    r.fileIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyDeleteLivePpt)
                return e;
            var t = new s.HttpRequestBodyDeleteLivePpt;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            e.fileIds) {
                if (!Array.isArray(e.fileIds))
                    throw TypeError(".HttpRequestBodyDeleteLivePpt.fileIds: array expected");
                t.fileIds = [];
                for (var n = 0; n < e.fileIds.length; ++n)
                    t.fileIds[n] = String(e.fileIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.fileIds = []),
            t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            e.fileIds && e.fileIds.length) {
                n.fileIds = [];
                for (var r = 0; r < e.fileIds.length; ++r)
                    n.fileIds[r] = e.fileIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyDeleteLivePpt = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(16).uint64(e.liveVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyDeleteLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.liveVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyDeleteLivePpt)
                return e;
            var t = new s.HttpResponseBodyDeleteLivePpt;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyMoveLivePpt = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.fileId = "",
        e.prototype.nextSortIndex = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.fileId && e.hasOwnProperty("fileId") && t.uint32(18).string(e.fileId),
            null != e.nextSortIndex && e.hasOwnProperty("nextSortIndex") && t.uint32(24).uint32(e.nextSortIndex),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyMoveLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.fileId = e.string();
                    break;
                case 3:
                    r.nextSortIndex = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyMoveLivePpt)
                return e;
            var t = new s.HttpRequestBodyMoveLivePpt;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.fileId && (t.fileId = String(e.fileId)),
            null != e.nextSortIndex && (t.nextSortIndex = e.nextSortIndex >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.fileId = "",
            n.nextSortIndex = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.fileId && e.hasOwnProperty("fileId") && (n.fileId = e.fileId),
            null != e.nextSortIndex && e.hasOwnProperty("nextSortIndex") && (n.nextSortIndex = e.nextSortIndex),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyMoveLivePpt = function() {
        function e(e) {
            if (this.pptDataMap = {},
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.pptDataMap = a.emptyObject,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(16).uint64(e.liveVersion),
            null != e.pptDataMap && e.hasOwnProperty("pptDataMap"))
                for (var n = Object.keys(e.pptDataMap), r = 0; r < n.length; ++r)
                    t.uint32(26).fork().uint32(10).string(n[r]).uint32(16).uint32(e.pptDataMap[n[r]]).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n, r = void 0 === t ? e.len : e.pos + t, i = new s.HttpResponseBodyMoveLivePpt;
            while (e.pos < r) {
                var u = e.uint32();
                switch (u >>> 3) {
                case 1:
                    i.groupId = e.uint32();
                    break;
                case 2:
                    i.liveVersion = e.uint64();
                    break;
                case 3:
                    e.skip().pos++,
                    i.pptDataMap === a.emptyObject && (i.pptDataMap = {}),
                    n = e.string(),
                    e.pos++,
                    i.pptDataMap[n] = e.uint32();
                    break;
                default:
                    e.skipType(7 & u);
                    break
                }
            }
            return i
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpResponseBodyMoveLivePpt)
                return e;
            var t = new s.HttpResponseBodyMoveLivePpt;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            e.pptDataMap) {
                if ("object" !== typeof e.pptDataMap)
                    throw TypeError(".HttpResponseBodyMoveLivePpt.pptDataMap: object expected");
                t.pptDataMap = {};
                for (var n = Object.keys(e.pptDataMap), r = 0; r < n.length; ++r)
                    t.pptDataMap[n[r]] = e.pptDataMap[n[r]] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n, r = {};
            if ((t.objects || t.defaults) && (r.pptDataMap = {}),
            t.defaults)
                if (r.groupId = 0,
                a.Long) {
                    var o = new a.Long(0,0,!0);
                    r.liveVersion = t.longs === String ? o.toString() : t.longs === Number ? o.toNumber() : o
                } else
                    r.liveVersion = t.longs === String ? "0" : 0;
            if (null != e.groupId && e.hasOwnProperty("groupId") && (r.groupId = e.groupId),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? r.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : r.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            e.pptDataMap && (n = Object.keys(e.pptDataMap)).length) {
                r.pptDataMap = {};
                for (var i = 0; i < n.length; ++i)
                    r.pptDataMap[n[i]] = e.pptDataMap[n[i]]
            }
            return r
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodyChangeLivePpt = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.fileId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.fileId && e.hasOwnProperty("fileId") && t.uint32(18).string(e.fileId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodyChangeLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.fileId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodyChangeLivePpt)
                return e;
            var t = new s.HttpRequestBodyChangeLivePpt;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.fileId && (t.fileId = String(e.fileId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.fileId = ""),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.fileId && e.hasOwnProperty("fileId") && (n.fileId = e.fileId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodyChangeLivePpt = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodyChangeLivePpt;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodyChangeLivePpt ? e : new s.HttpResponseBodyChangeLivePpt
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpRequestBodySaveComplaint = function() {
        function e(e) {
            if (this.imageItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.complaintType = 0,
        e.prototype.reason = "",
        e.prototype.imageItems = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.complaintType && e.hasOwnProperty("complaintType") && t.uint32(24).int32(e.complaintType),
            null != e.reason && e.hasOwnProperty("reason") && t.uint32(34).string(e.reason),
            null != e.imageItems && e.imageItems.length)
                for (var n = 0; n < e.imageItems.length; ++n)
                    s.HttpImage.encode(e.imageItems[n], t.uint32(42).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpRequestBodySaveComplaint;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.complaintType = e.int32();
                    break;
                case 4:
                    r.reason = e.string();
                    break;
                case 5:
                    r.imageItems && r.imageItems.length || (r.imageItems = []),
                    r.imageItems.push(s.HttpImage.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.HttpRequestBodySaveComplaint)
                return e;
            var t = new s.HttpRequestBodySaveComplaint;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            switch (e.complaintType) {
            case "CommonComplaintTypeNone":
            case 0:
                t.complaintType = 0;
                break;
            case "CommonComplaintTypeIllegalContent":
            case 1:
                t.complaintType = 1;
                break;
            case "CommonComplaintTypeCheat":
            case 2:
                t.complaintType = 2;
                break;
            case "CommonComplaintTypeAccountTheft":
            case 3:
                t.complaintType = 3;
                break;
            case "CommonComplaintTypeTort":
            case 4:
                t.complaintType = 4;
                break;
            case "CommonComplaintTypeSendShamInfo":
            case 5:
                t.complaintType = 5;
                break;
            case "CommonComplaintTypePretendToBeOther":
            case 6:
                t.complaintType = 6;
                break;
            case "CommonComplaintTypeGambling":
            case 7:
                t.complaintType = 7;
                break;
            case "CommonComplaintTypeSpreadingRumors":
            case 8:
                t.complaintType = 8;
                break
            }
            if (null != e.reason && (t.reason = String(e.reason)),
            e.imageItems) {
                if (!Array.isArray(e.imageItems))
                    throw TypeError(".HttpRequestBodySaveComplaint.imageItems: array expected");
                t.imageItems = [];
                for (var n = 0; n < e.imageItems.length; ++n) {
                    if ("object" !== typeof e.imageItems[n])
                        throw TypeError(".HttpRequestBodySaveComplaint.imageItems: object expected");
                    t.imageItems[n] = s.HttpImage.fromObject(e.imageItems[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.imageItems = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.complaintType = t.enums === String ? "CommonComplaintTypeNone" : 0,
            n.reason = ""),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.complaintType && e.hasOwnProperty("complaintType") && (n.complaintType = t.enums === String ? s.CommonComplaintType[e.complaintType] : e.complaintType),
            null != e.reason && e.hasOwnProperty("reason") && (n.reason = e.reason),
            e.imageItems && e.imageItems.length) {
                n.imageItems = [];
                for (var r = 0; r < e.imageItems.length; ++r)
                    n.imageItems[r] = s.HttpImage.toObject(e.imageItems[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.HttpResponseBodySaveComplaint = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.HttpResponseBodySaveComplaint;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.HttpResponseBodySaveComplaint ? e : new s.HttpResponseBodySaveComplaint
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyExtSource = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.icon = "",
        e.prototype.title = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.icon && e.hasOwnProperty("icon") && t.uint32(10).string(e.icon),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyExtSource;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.icon = e.string();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyExtSource)
                return e;
            var t = new s.SocketBodyExtSource;
            return null != e.icon && (t.icon = String(e.icon)),
            null != e.title && (t.title = String(e.title)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.icon = "",
            n.title = ""),
            null != e.icon && e.hasOwnProperty("icon") && (n.icon = e.icon),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyExtDetail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.icon = "",
        e.prototype.title = "",
        e.prototype.detailText = "",
        e.prototype.tableIcon = "",
        e.prototype.url = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.icon && e.hasOwnProperty("icon") && t.uint32(10).string(e.icon),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.detailText && e.hasOwnProperty("detailText") && t.uint32(26).string(e.detailText),
            null != e.tableIcon && e.hasOwnProperty("tableIcon") && t.uint32(34).string(e.tableIcon),
            null != e.url && e.hasOwnProperty("url") && t.uint32(42).string(e.url),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyExtDetail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.icon = e.string();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.detailText = e.string();
                    break;
                case 4:
                    r.tableIcon = e.string();
                    break;
                case 5:
                    r.url = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyExtDetail)
                return e;
            var t = new s.SocketBodyExtDetail;
            return null != e.icon && (t.icon = String(e.icon)),
            null != e.title && (t.title = String(e.title)),
            null != e.detailText && (t.detailText = String(e.detailText)),
            null != e.tableIcon && (t.tableIcon = String(e.tableIcon)),
            null != e.url && (t.url = String(e.url)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.icon = "",
            n.title = "",
            n.detailText = "",
            n.tableIcon = "",
            n.url = ""),
            null != e.icon && e.hasOwnProperty("icon") && (n.icon = e.icon),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.detailText && e.hasOwnProperty("detailText") && (n.detailText = e.detailText),
            null != e.tableIcon && e.hasOwnProperty("tableIcon") && (n.tableIcon = e.tableIcon),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupButtonItem = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.actionType = 0,
        e.prototype.rgb = "",
        e.prototype.url = "",
        e.prototype.items = a.emptyArray,
        e.prototype.disable = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(16).int32(e.actionType),
            null != e.rgb && e.hasOwnProperty("rgb") && t.uint32(26).string(e.rgb),
            null != e.url && e.hasOwnProperty("url") && t.uint32(34).string(e.url),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.SocketBodyGroupButtonItem.encode(e.items[n], t.uint32(42).fork()).ldelim();
            return null != e.disable && e.hasOwnProperty("disable") && t.uint32(48).bool(e.disable),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupButtonItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.actionType = e.int32();
                    break;
                case 3:
                    r.rgb = e.string();
                    break;
                case 4:
                    r.url = e.string();
                    break;
                case 5:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.SocketBodyGroupButtonItem.decode(e, e.uint32()));
                    break;
                case 6:
                    r.disable = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupButtonItem)
                return e;
            var t = new s.SocketBodyGroupButtonItem;
            switch (null != e.title && (t.title = String(e.title)),
            e.actionType) {
            case "CommonExtButtonActionTypeNone":
            case 0:
                t.actionType = 0;
                break;
            case "CommonExtButtonActionTypeOpenUrl":
            case 1:
                t.actionType = 1;
                break;
            case "CommonExtButtonActionTypeClick":
            case 2:
                t.actionType = 2;
                break
            }
            if (null != e.rgb && (t.rgb = String(e.rgb)),
            null != e.url && (t.url = String(e.url)),
            e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".SocketBodyGroupButtonItem.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".SocketBodyGroupButtonItem.items: object expected");
                    t.items[n] = s.SocketBodyGroupButtonItem.fromObject(e.items[n])
                }
            }
            return null != e.disable && (t.disable = Boolean(e.disable)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.title = "",
            n.actionType = t.enums === String ? "CommonExtButtonActionTypeNone" : 0,
            n.rgb = "",
            n.url = "",
            n.disable = !1),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonExtButtonActionType[e.actionType] : e.actionType),
            null != e.rgb && e.hasOwnProperty("rgb") && (n.rgb = e.rgb),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.SocketBodyGroupButtonItem.toObject(e.items[r], t)
            }
            return null != e.disable && e.hasOwnProperty("disable") && (n.disable = e.disable),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyExtButtonOptions = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.buttonType = 0,
        e.prototype.detail = null,
        e.prototype.items = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.buttonType && e.hasOwnProperty("buttonType") && t.uint32(8).int32(e.buttonType),
            null != e.detail && e.hasOwnProperty("detail") && s.SocketBodyExtDetail.encode(e.detail, t.uint32(18).fork()).ldelim(),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.SocketBodyGroupButtonItem.encode(e.items[n], t.uint32(26).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyExtButtonOptions;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.buttonType = e.int32();
                    break;
                case 2:
                    r.detail = s.SocketBodyExtDetail.decode(e, e.uint32());
                    break;
                case 3:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.SocketBodyGroupButtonItem.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyExtButtonOptions)
                return e;
            var t = new s.SocketBodyExtButtonOptions;
            switch (e.buttonType) {
            case "CommonExtButtonTypeNone":
            case 0:
                t.buttonType = 0;
                break;
            case "CommonExtButtonTypeDetail":
            case 1:
                t.buttonType = 1;
                break;
            case "CommonExtButtonTypeGroup":
            case 2:
                t.buttonType = 2;
                break
            }
            if (null != e.detail) {
                if ("object" !== typeof e.detail)
                    throw TypeError(".SocketBodyExtButtonOptions.detail: object expected");
                t.detail = s.SocketBodyExtDetail.fromObject(e.detail)
            }
            if (e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".SocketBodyExtButtonOptions.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".SocketBodyExtButtonOptions.items: object expected");
                    t.items[n] = s.SocketBodyGroupButtonItem.fromObject(e.items[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.buttonType = t.enums === String ? "CommonExtButtonTypeNone" : 0,
            n.detail = null),
            null != e.buttonType && e.hasOwnProperty("buttonType") && (n.buttonType = t.enums === String ? s.CommonExtButtonType[e.buttonType] : e.buttonType),
            null != e.detail && e.hasOwnProperty("detail") && (n.detail = s.SocketBodyExtDetail.toObject(e.detail, t)),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.SocketBodyGroupButtonItem.toObject(e.items[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyText = function() {
        function e(e) {
            if (this.atUsers = [],
            this.atUserInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.prototype.atUsers = a.emptyArray,
        e.prototype.atAll = !1,
        e.prototype.source = null,
        e.prototype.buttonOptions = null,
        e.prototype.appId = "",
        e.prototype.originMessage = null,
        e.prototype.voiceInfo = null,
        e.prototype.atUserInfos = a.emptyArray,
        e.prototype.url = "",
        e.prototype.shareInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            null != e.atUsers && e.atUsers.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.atUsers.length; ++n)
                    t.uint32(e.atUsers[n]);
                t.ldelim()
            }
            if (null != e.atAll && e.hasOwnProperty("atAll") && t.uint32(24).bool(e.atAll),
            null != e.source && e.hasOwnProperty("source") && s.SocketBodyExtSource.encode(e.source, t.uint32(34).fork()).ldelim(),
            null != e.buttonOptions && e.hasOwnProperty("buttonOptions") && s.SocketBodyExtButtonOptions.encode(e.buttonOptions, t.uint32(42).fork()).ldelim(),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(50).string(e.appId),
            null != e.originMessage && e.hasOwnProperty("originMessage") && s.CommonMessage.encode(e.originMessage, t.uint32(58).fork()).ldelim(),
            null != e.voiceInfo && e.hasOwnProperty("voiceInfo") && s.SocketBodyVoice.encode(e.voiceInfo, t.uint32(66).fork()).ldelim(),
            null != e.atUserInfos && e.atUserInfos.length)
                for (n = 0; n < e.atUserInfos.length; ++n)
                    s.CommonAtUserInfo.encode(e.atUserInfos[n], t.uint32(74).fork()).ldelim();
            return null != e.url && e.hasOwnProperty("url") && t.uint32(82).string(e.url),
            null != e.shareInfo && e.hasOwnProperty("shareInfo") && s.SocketBodyShareUrl.encode(e.shareInfo, t.uint32(90).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyText;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                case 2:
                    if (r.atUsers && r.atUsers.length || (r.atUsers = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.atUsers.push(e.uint32())
                    } else
                        r.atUsers.push(e.uint32());
                    break;
                case 3:
                    r.atAll = e.bool();
                    break;
                case 4:
                    r.source = s.SocketBodyExtSource.decode(e, e.uint32());
                    break;
                case 5:
                    r.buttonOptions = s.SocketBodyExtButtonOptions.decode(e, e.uint32());
                    break;
                case 6:
                    r.appId = e.string();
                    break;
                case 7:
                    r.originMessage = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 8:
                    r.voiceInfo = s.SocketBodyVoice.decode(e, e.uint32());
                    break;
                case 9:
                    r.atUserInfos && r.atUserInfos.length || (r.atUserInfos = []),
                    r.atUserInfos.push(s.CommonAtUserInfo.decode(e, e.uint32()));
                    break;
                case 10:
                    r.url = e.string();
                    break;
                case 11:
                    r.shareInfo = s.SocketBodyShareUrl.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyText)
                return e;
            var t = new s.SocketBodyText;
            if (null != e.text && (t.text = String(e.text)),
            e.atUsers) {
                if (!Array.isArray(e.atUsers))
                    throw TypeError(".SocketBodyText.atUsers: array expected");
                t.atUsers = [];
                for (var n = 0; n < e.atUsers.length; ++n)
                    t.atUsers[n] = e.atUsers[n] >>> 0
            }
            if (null != e.atAll && (t.atAll = Boolean(e.atAll)),
            null != e.source) {
                if ("object" !== typeof e.source)
                    throw TypeError(".SocketBodyText.source: object expected");
                t.source = s.SocketBodyExtSource.fromObject(e.source)
            }
            if (null != e.buttonOptions) {
                if ("object" !== typeof e.buttonOptions)
                    throw TypeError(".SocketBodyText.buttonOptions: object expected");
                t.buttonOptions = s.SocketBodyExtButtonOptions.fromObject(e.buttonOptions)
            }
            if (null != e.appId && (t.appId = String(e.appId)),
            null != e.originMessage) {
                if ("object" !== typeof e.originMessage)
                    throw TypeError(".SocketBodyText.originMessage: object expected");
                t.originMessage = s.CommonMessage.fromObject(e.originMessage)
            }
            if (null != e.voiceInfo) {
                if ("object" !== typeof e.voiceInfo)
                    throw TypeError(".SocketBodyText.voiceInfo: object expected");
                t.voiceInfo = s.SocketBodyVoice.fromObject(e.voiceInfo)
            }
            if (e.atUserInfos) {
                if (!Array.isArray(e.atUserInfos))
                    throw TypeError(".SocketBodyText.atUserInfos: array expected");
                t.atUserInfos = [];
                for (n = 0; n < e.atUserInfos.length; ++n) {
                    if ("object" !== typeof e.atUserInfos[n])
                        throw TypeError(".SocketBodyText.atUserInfos: object expected");
                    t.atUserInfos[n] = s.CommonAtUserInfo.fromObject(e.atUserInfos[n])
                }
            }
            if (null != e.url && (t.url = String(e.url)),
            null != e.shareInfo) {
                if ("object" !== typeof e.shareInfo)
                    throw TypeError(".SocketBodyText.shareInfo: object expected");
                t.shareInfo = s.SocketBodyShareUrl.fromObject(e.shareInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.atUsers = [],
            n.atUserInfos = []),
            t.defaults && (n.text = "",
            n.atAll = !1,
            n.source = null,
            n.buttonOptions = null,
            n.appId = "",
            n.originMessage = null,
            n.voiceInfo = null,
            n.url = "",
            n.shareInfo = null),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            e.atUsers && e.atUsers.length) {
                n.atUsers = [];
                for (var r = 0; r < e.atUsers.length; ++r)
                    n.atUsers[r] = e.atUsers[r]
            }
            if (null != e.atAll && e.hasOwnProperty("atAll") && (n.atAll = e.atAll),
            null != e.source && e.hasOwnProperty("source") && (n.source = s.SocketBodyExtSource.toObject(e.source, t)),
            null != e.buttonOptions && e.hasOwnProperty("buttonOptions") && (n.buttonOptions = s.SocketBodyExtButtonOptions.toObject(e.buttonOptions, t)),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            null != e.originMessage && e.hasOwnProperty("originMessage") && (n.originMessage = s.CommonMessage.toObject(e.originMessage, t)),
            null != e.voiceInfo && e.hasOwnProperty("voiceInfo") && (n.voiceInfo = s.SocketBodyVoice.toObject(e.voiceInfo, t)),
            e.atUserInfos && e.atUserInfos.length) {
                n.atUserInfos = [];
                for (r = 0; r < e.atUserInfos.length; ++r)
                    n.atUserInfos[r] = s.CommonAtUserInfo.toObject(e.atUserInfos[r], t)
            }
            return null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.shareInfo && e.hasOwnProperty("shareInfo") && (n.shareInfo = s.SocketBodyShareUrl.toObject(e.shareInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyImage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.originImageInfo = null,
        e.prototype.thumbImageInfo = null,
        e.prototype.middleImageInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.originImageInfo && e.hasOwnProperty("originImageInfo") && s.CommonImageInfo.encode(e.originImageInfo, t.uint32(10).fork()).ldelim(),
            null != e.thumbImageInfo && e.hasOwnProperty("thumbImageInfo") && s.CommonImageInfo.encode(e.thumbImageInfo, t.uint32(18).fork()).ldelim(),
            null != e.middleImageInfo && e.hasOwnProperty("middleImageInfo") && s.CommonImageInfo.encode(e.middleImageInfo, t.uint32(26).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyImage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.originImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.thumbImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                case 3:
                    r.middleImageInfo = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyImage)
                return e;
            var t = new s.SocketBodyImage;
            if (null != e.originImageInfo) {
                if ("object" !== typeof e.originImageInfo)
                    throw TypeError(".SocketBodyImage.originImageInfo: object expected");
                t.originImageInfo = s.CommonImageInfo.fromObject(e.originImageInfo)
            }
            if (null != e.thumbImageInfo) {
                if ("object" !== typeof e.thumbImageInfo)
                    throw TypeError(".SocketBodyImage.thumbImageInfo: object expected");
                t.thumbImageInfo = s.CommonImageInfo.fromObject(e.thumbImageInfo)
            }
            if (null != e.middleImageInfo) {
                if ("object" !== typeof e.middleImageInfo)
                    throw TypeError(".SocketBodyImage.middleImageInfo: object expected");
                t.middleImageInfo = s.CommonImageInfo.fromObject(e.middleImageInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.originImageInfo = null,
            n.thumbImageInfo = null,
            n.middleImageInfo = null),
            null != e.originImageInfo && e.hasOwnProperty("originImageInfo") && (n.originImageInfo = s.CommonImageInfo.toObject(e.originImageInfo, t)),
            null != e.thumbImageInfo && e.hasOwnProperty("thumbImageInfo") && (n.thumbImageInfo = s.CommonImageInfo.toObject(e.thumbImageInfo, t)),
            null != e.middleImageInfo && e.hasOwnProperty("middleImageInfo") && (n.middleImageInfo = s.CommonImageInfo.toObject(e.middleImageInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyEmotion = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.item = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.item && e.hasOwnProperty("item") && s.CommonImageInfo.encode(e.item, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyEmotion;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.item = s.CommonImageInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyEmotion)
                return e;
            var t = new s.SocketBodyEmotion;
            if (null != e.item) {
                if ("object" !== typeof e.item)
                    throw TypeError(".SocketBodyEmotion.item: object expected");
                t.item = s.CommonImageInfo.fromObject(e.item)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.item = null),
            null != e.item && e.hasOwnProperty("item") && (n.item = s.CommonImageInfo.toObject(e.item, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyVideo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.size = 0,
        e.prototype.name = "",
        e.prototype.imageUrl = "",
        e.prototype.width = 0,
        e.prototype.height = 0,
        e.prototype.duration = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint32(e.size),
            null != e.name && e.hasOwnProperty("name") && t.uint32(26).string(e.name),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && t.uint32(34).string(e.imageUrl),
            null != e.width && e.hasOwnProperty("width") && t.uint32(45).float(e.width),
            null != e.height && e.hasOwnProperty("height") && t.uint32(53).float(e.height),
            null != e.duration && e.hasOwnProperty("duration") && t.uint32(61).float(e.duration),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyVideo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.size = e.uint32();
                    break;
                case 3:
                    r.name = e.string();
                    break;
                case 4:
                    r.imageUrl = e.string();
                    break;
                case 5:
                    r.width = e.float();
                    break;
                case 6:
                    r.height = e.float();
                    break;
                case 7:
                    r.duration = e.float();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyVideo)
                return e;
            var t = new s.SocketBodyVideo;
            return null != e.url && (t.url = String(e.url)),
            null != e.size && (t.size = e.size >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.imageUrl && (t.imageUrl = String(e.imageUrl)),
            null != e.width && (t.width = Number(e.width)),
            null != e.height && (t.height = Number(e.height)),
            null != e.duration && (t.duration = Number(e.duration)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = "",
            n.size = 0,
            n.name = "",
            n.imageUrl = "",
            n.width = 0,
            n.height = 0,
            n.duration = 0),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.size && e.hasOwnProperty("size") && (n.size = e.size),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && (n.imageUrl = e.imageUrl),
            null != e.width && e.hasOwnProperty("width") && (n.width = t.json && !isFinite(e.width) ? String(e.width) : e.width),
            null != e.height && e.hasOwnProperty("height") && (n.height = t.json && !isFinite(e.height) ? String(e.height) : e.height),
            null != e.duration && e.hasOwnProperty("duration") && (n.duration = t.json && !isFinite(e.duration) ? String(e.duration) : e.duration),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyVoice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.size = 0,
        e.prototype.duration = 0,
        e.prototype.wave = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint32(e.size),
            null != e.duration && e.hasOwnProperty("duration") && t.uint32(24).uint32(e.duration),
            null != e.wave && e.hasOwnProperty("wave") && t.uint32(34).bytes(e.wave),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyVoice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.size = e.uint32();
                    break;
                case 3:
                    r.duration = e.uint32();
                    break;
                case 4:
                    r.wave = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyVoice)
                return e;
            var t = new s.SocketBodyVoice;
            return null != e.url && (t.url = String(e.url)),
            null != e.size && (t.size = e.size >>> 0),
            null != e.duration && (t.duration = e.duration >>> 0),
            null != e.wave && ("string" === typeof e.wave ? a.base64.decode(e.wave, t.wave = a.newBuffer(a.base64.length(e.wave)), 0) : e.wave.length && (t.wave = e.wave)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.url = "",
            n.size = 0,
            n.duration = 0,
            t.bytes === String ? n.wave = "" : (n.wave = [],
            t.bytes !== Array && (n.wave = a.newBuffer(n.wave)))),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.size && e.hasOwnProperty("size") && (n.size = e.size),
            null != e.duration && e.hasOwnProperty("duration") && (n.duration = e.duration),
            null != e.wave && e.hasOwnProperty("wave") && (n.wave = t.bytes === String ? a.base64.encode(e.wave, 0, e.wave.length) : t.bytes === Array ? Array.prototype.slice.call(e.wave) : e.wave),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFile = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.url = "",
        e.prototype.size = 0,
        e.prototype.fileName = "",
        e.prototype.md5 = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.fileSize = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.url && e.hasOwnProperty("url") && t.uint32(10).string(e.url),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint32(e.size),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(26).string(e.fileName),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(34).string(e.md5),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(40).uint64(e.expiredTimestamp),
            null != e.fileSize && e.hasOwnProperty("fileSize") && t.uint32(48).uint64(e.fileSize),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFile;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.url = e.string();
                    break;
                case 2:
                    r.size = e.uint32();
                    break;
                case 3:
                    r.fileName = e.string();
                    break;
                case 4:
                    r.md5 = e.string();
                    break;
                case 5:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 6:
                    r.fileSize = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFile)
                return e;
            var t = new s.SocketBodyFile;
            return null != e.url && (t.url = String(e.url)),
            null != e.size && (t.size = e.size >>> 0),
            null != e.fileName && (t.fileName = String(e.fileName)),
            null != e.md5 && (t.md5 = String(e.md5)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.fileSize && (a.Long ? (t.fileSize = a.Long.fromValue(e.fileSize)).unsigned = !0 : "string" === typeof e.fileSize ? t.fileSize = parseInt(e.fileSize, 10) : "number" === typeof e.fileSize ? t.fileSize = e.fileSize : "object" === typeof e.fileSize && (t.fileSize = new a.LongBits(e.fileSize.low >>> 0,e.fileSize.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.url = "",
                n.size = 0,
                n.fileName = "",
                n.md5 = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.fileSize = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.fileSize = t.longs === String ? "0" : 0
            }
            return null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.size && e.hasOwnProperty("size") && (n.size = e.size),
            null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.fileSize && e.hasOwnProperty("fileSize") && ("number" === typeof e.fileSize ? n.fileSize = t.longs === String ? String(e.fileSize) : e.fileSize : n.fileSize = t.longs === String ? a.Long.prototype.toString.call(e.fileSize) : t.longs === Number ? new a.LongBits(e.fileSize.low >>> 0,e.fileSize.high >>> 0).toNumber(!0) : e.fileSize),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyPersonalCard = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.prototype.type = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.type && e.hasOwnProperty("type") && t.uint32(24).int32(e.type),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyPersonalCard;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.type = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyPersonalCard)
                return e;
            var t = new s.SocketBodyPersonalCard;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            e.type) {
            case "CommonUserTypeNormalUser":
            case 0:
                t.type = 0;
                break;
            case "CommonUserTypeSystemAccount":
            case 1:
                t.type = 1;
                break;
            case "CommonUserTypeServiceAccount":
            case 2:
                t.type = 2;
                break;
            case "CommonUserTypeGroupRobot":
            case 3:
                t.type = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.name = "",
            n.type = t.enums === String ? "CommonUserTypeNormalUser" : 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? s.CommonUserType[e.type] : e.type),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCard = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.groupName = "",
        e.prototype.isPrivate = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.groupName && e.hasOwnProperty("groupName") && t.uint32(18).string(e.groupName),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && t.uint32(24).bool(e.isPrivate),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCard;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.groupName = e.string();
                    break;
                case 3:
                    r.isPrivate = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCard)
                return e;
            var t = new s.SocketBodyGroupCard;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.groupName && (t.groupName = String(e.groupName)),
            null != e.isPrivate && (t.isPrivate = Boolean(e.isPrivate)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0,
            n.groupName = "",
            n.isPrivate = !1),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.groupName && e.hasOwnProperty("groupName") && (n.groupName = e.groupName),
            null != e.isPrivate && e.hasOwnProperty("isPrivate") && (n.isPrivate = e.isPrivate),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLocation = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.name = "",
        e.prototype.address = "",
        e.prototype.latitude = 0,
        e.prototype.longitude = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.name && e.hasOwnProperty("name") && t.uint32(10).string(e.name),
            null != e.address && e.hasOwnProperty("address") && t.uint32(18).string(e.address),
            null != e.latitude && e.hasOwnProperty("latitude") && t.uint32(29).float(e.latitude),
            null != e.longitude && e.hasOwnProperty("longitude") && t.uint32(37).float(e.longitude),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLocation;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.name = e.string();
                    break;
                case 2:
                    r.address = e.string();
                    break;
                case 3:
                    r.latitude = e.float();
                    break;
                case 4:
                    r.longitude = e.float();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLocation)
                return e;
            var t = new s.SocketBodyLocation;
            return null != e.name && (t.name = String(e.name)),
            null != e.address && (t.address = String(e.address)),
            null != e.latitude && (t.latitude = Number(e.latitude)),
            null != e.longitude && (t.longitude = Number(e.longitude)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.name = "",
            n.address = "",
            n.latitude = 0,
            n.longitude = 0),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.address && e.hasOwnProperty("address") && (n.address = e.address),
            null != e.latitude && e.hasOwnProperty("latitude") && (n.latitude = t.json && !isFinite(e.latitude) ? String(e.latitude) : e.latitude),
            null != e.longitude && e.hasOwnProperty("longitude") && (n.longitude = t.json && !isFinite(e.longitude) ? String(e.longitude) : e.longitude),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCombinedMessage = function() {
        function e(e) {
            if (this.items = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.chatName = "",
        e.prototype.items = a.emptyArray,
        e.prototype.init = !1,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.chatName && e.hasOwnProperty("chatName") && t.uint32(26).string(e.chatName),
            null != e.items && e.items.length)
                for (var n = 0; n < e.items.length; ++n)
                    s.SocketBodyCombinedMessageItem.encode(e.items[n], t.uint32(34).fork()).ldelim();
            return null != e.init && e.hasOwnProperty("init") && t.uint32(40).bool(e.init),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(48).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCombinedMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.chatName = e.string();
                    break;
                case 4:
                    r.items && r.items.length || (r.items = []),
                    r.items.push(s.SocketBodyCombinedMessageItem.decode(e, e.uint32()));
                    break;
                case 5:
                    r.init = e.bool();
                    break;
                case 6:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCombinedMessage)
                return e;
            var t = new s.SocketBodyCombinedMessage;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (null != e.chatName && (t.chatName = String(e.chatName)),
            e.items) {
                if (!Array.isArray(e.items))
                    throw TypeError(".SocketBodyCombinedMessage.items: array expected");
                t.items = [];
                for (var n = 0; n < e.items.length; ++n) {
                    if ("object" !== typeof e.items[n])
                        throw TypeError(".SocketBodyCombinedMessage.items: object expected");
                    t.items[n] = s.SocketBodyCombinedMessageItem.fromObject(e.items[n])
                }
            }
            return null != e.init && (t.init = Boolean(e.init)),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.items = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.chatName = "",
            n.init = !1,
            n.userId = 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.chatName && e.hasOwnProperty("chatName") && (n.chatName = e.chatName),
            e.items && e.items.length) {
                n.items = [];
                for (var r = 0; r < e.items.length; ++r)
                    n.items[r] = s.SocketBodyCombinedMessageItem.toObject(e.items[r], t)
            }
            return null != e.init && e.hasOwnProperty("init") && (n.init = e.init),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCombinedMessageItem = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.prototype.senderId = 0,
        e.prototype.senderName = "",
        e.prototype.brief = "",
        e.prototype.bodyType = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(16).uint32(e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(26).string(e.senderName),
            null != e.brief && e.hasOwnProperty("brief") && t.uint32(34).string(e.brief),
            null != e.bodyType && e.hasOwnProperty("bodyType") && t.uint32(42).string(e.bodyType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCombinedMessageItem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                case 2:
                    r.senderId = e.uint32();
                    break;
                case 3:
                    r.senderName = e.string();
                    break;
                case 4:
                    r.brief = e.string();
                    break;
                case 5:
                    r.bodyType = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCombinedMessageItem)
                return e;
            var t = new s.SocketBodyCombinedMessageItem;
            return null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.senderId && (t.senderId = e.senderId >>> 0),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.brief && (t.brief = String(e.brief)),
            null != e.bodyType && (t.bodyType = String(e.bodyType)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.messageId = "",
            n.senderId = 0,
            n.senderName = "",
            n.brief = "",
            n.bodyType = ""),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.brief && e.hasOwnProperty("brief") && (n.brief = e.brief),
            null != e.bodyType && e.hasOwnProperty("bodyType") && (n.bodyType = e.bodyType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyRedpacketSend = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.redpacketType = 0,
        e.prototype.description = "",
        e.prototype.totalCount = 0,
        e.prototype.hasExpired = !1,
        e.prototype.members = a.emptyArray,
        e.prototype.totalPrice = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(16).int32(e.redpacketType),
            null != e.description && e.hasOwnProperty("description") && t.uint32(26).string(e.description),
            null != e.totalCount && e.hasOwnProperty("totalCount") && t.uint32(32).uint32(e.totalCount),
            null != e.hasExpired && e.hasOwnProperty("hasExpired") && t.uint32(40).bool(e.hasExpired),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyRedpacketSendReceivedMember.encode(e.members[n], t.uint32(50).fork()).ldelim();
            return null != e.totalPrice && e.hasOwnProperty("totalPrice") && t.uint32(56).uint32(e.totalPrice),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyRedpacketSend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.redpacketType = e.int32();
                    break;
                case 3:
                    r.description = e.string();
                    break;
                case 4:
                    r.totalCount = e.uint32();
                    break;
                case 5:
                    r.hasExpired = e.bool();
                    break;
                case 6:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyRedpacketSendReceivedMember.decode(e, e.uint32()));
                    break;
                case 7:
                    r.totalPrice = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyRedpacketSend)
                return e;
            var t = new s.SocketBodyRedpacketSend;
            switch (null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            e.redpacketType) {
            case "CommonRedpacketTypeUndefined":
            case 0:
                t.redpacketType = 0;
                break;
            case "CommonRedpacketTypePersonal":
            case 1:
                t.redpacketType = 1;
                break;
            case "CommonRedpacketTypeGroupNormal":
            case 2:
                t.redpacketType = 2;
                break;
            case "CommonRedpacketTypeGroupRandom":
            case 3:
                t.redpacketType = 3;
                break
            }
            if (null != e.description && (t.description = String(e.description)),
            null != e.totalCount && (t.totalCount = e.totalCount >>> 0),
            null != e.hasExpired && (t.hasExpired = Boolean(e.hasExpired)),
            e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyRedpacketSend.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyRedpacketSend.members: object expected");
                    t.members[n] = s.SocketBodyRedpacketSendReceivedMember.fromObject(e.members[n])
                }
            }
            return null != e.totalPrice && (t.totalPrice = e.totalPrice >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults && (n.redpacketId = "",
            n.redpacketType = t.enums === String ? "CommonRedpacketTypeUndefined" : 0,
            n.description = "",
            n.totalCount = 0,
            n.hasExpired = !1,
            n.totalPrice = 0),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = t.enums === String ? s.CommonRedpacketType[e.redpacketType] : e.redpacketType),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.totalCount && e.hasOwnProperty("totalCount") && (n.totalCount = e.totalCount),
            null != e.hasExpired && e.hasOwnProperty("hasExpired") && (n.hasExpired = e.hasExpired),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.SocketBodyRedpacketSendReceivedMember.toObject(e.members[r], t)
            }
            return null != e.totalPrice && e.hasOwnProperty("totalPrice") && (n.totalPrice = e.totalPrice),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyRedpacketSendReceivedMember = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.receivedPrice = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).int32(e.userId),
            null != e.receivedPrice && e.hasOwnProperty("receivedPrice") && t.uint32(16).int32(e.receivedPrice),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyRedpacketSendReceivedMember;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.int32();
                    break;
                case 2:
                    r.receivedPrice = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyRedpacketSendReceivedMember)
                return e;
            var t = new s.SocketBodyRedpacketSendReceivedMember;
            return null != e.userId && (t.userId = 0 | e.userId),
            null != e.receivedPrice && (t.receivedPrice = 0 | e.receivedPrice),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.receivedPrice = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.receivedPrice && e.hasOwnProperty("receivedPrice") && (n.receivedPrice = e.receivedPrice),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyMusic = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.songName = "",
        e.prototype.singerName = "",
        e.prototype.url = "",
        e.prototype.imageUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.songName && e.hasOwnProperty("songName") && t.uint32(10).string(e.songName),
            null != e.singerName && e.hasOwnProperty("singerName") && t.uint32(18).string(e.singerName),
            null != e.url && e.hasOwnProperty("url") && t.uint32(26).string(e.url),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && t.uint32(34).string(e.imageUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyMusic;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.songName = e.string();
                    break;
                case 2:
                    r.singerName = e.string();
                    break;
                case 3:
                    r.url = e.string();
                    break;
                case 4:
                    r.imageUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyMusic)
                return e;
            var t = new s.SocketBodyMusic;
            return null != e.songName && (t.songName = String(e.songName)),
            null != e.singerName && (t.singerName = String(e.singerName)),
            null != e.url && (t.url = String(e.url)),
            null != e.imageUrl && (t.imageUrl = String(e.imageUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.songName = "",
            n.singerName = "",
            n.url = "",
            n.imageUrl = ""),
            null != e.songName && e.hasOwnProperty("songName") && (n.songName = e.songName),
            null != e.singerName && e.hasOwnProperty("singerName") && (n.singerName = e.singerName),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && (n.imageUrl = e.imageUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyShareUrl = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.body = "",
        e.prototype.url = "",
        e.prototype.imageUrl = "",
        e.prototype.appKey = "",
        e.prototype.imageIcon = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.body && e.hasOwnProperty("body") && t.uint32(18).string(e.body),
            null != e.url && e.hasOwnProperty("url") && t.uint32(26).string(e.url),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && t.uint32(34).string(e.imageUrl),
            null != e.appKey && e.hasOwnProperty("appKey") && t.uint32(42).string(e.appKey),
            null != e.imageIcon && e.hasOwnProperty("imageIcon") && t.uint32(50).string(e.imageIcon),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyShareUrl;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.body = e.string();
                    break;
                case 3:
                    r.url = e.string();
                    break;
                case 4:
                    r.imageUrl = e.string();
                    break;
                case 5:
                    r.appKey = e.string();
                    break;
                case 6:
                    r.imageIcon = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyShareUrl)
                return e;
            var t = new s.SocketBodyShareUrl;
            return null != e.title && (t.title = String(e.title)),
            null != e.body && (t.body = String(e.body)),
            null != e.url && (t.url = String(e.url)),
            null != e.imageUrl && (t.imageUrl = String(e.imageUrl)),
            null != e.appKey && (t.appKey = String(e.appKey)),
            null != e.imageIcon && (t.imageIcon = String(e.imageIcon)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.title = "",
            n.body = "",
            n.url = "",
            n.imageUrl = "",
            n.appKey = "",
            n.imageIcon = ""),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.body && e.hasOwnProperty("body") && (n.body = e.body),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.imageUrl && e.hasOwnProperty("imageUrl") && (n.imageUrl = e.imageUrl),
            null != e.appKey && e.hasOwnProperty("appKey") && (n.appKey = e.appKey),
            null != e.imageIcon && e.hasOwnProperty("imageIcon") && (n.imageIcon = e.imageIcon),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyUrlWithButton = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.body = "",
        e.prototype.buttonText = "",
        e.prototype.buttonUrl = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.showAvatar = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.body && e.hasOwnProperty("body") && t.uint32(18).string(e.body),
            null != e.buttonText && e.hasOwnProperty("buttonText") && t.uint32(26).string(e.buttonText),
            null != e.buttonUrl && e.hasOwnProperty("buttonUrl") && t.uint32(34).string(e.buttonUrl),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(40).uint64(e.timestamp),
            null != e.showAvatar && e.hasOwnProperty("showAvatar") && t.uint32(48).bool(e.showAvatar),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyUrlWithButton;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.body = e.string();
                    break;
                case 3:
                    r.buttonText = e.string();
                    break;
                case 4:
                    r.buttonUrl = e.string();
                    break;
                case 5:
                    r.timestamp = e.uint64();
                    break;
                case 6:
                    r.showAvatar = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyUrlWithButton)
                return e;
            var t = new s.SocketBodyUrlWithButton;
            return null != e.title && (t.title = String(e.title)),
            null != e.body && (t.body = String(e.body)),
            null != e.buttonText && (t.buttonText = String(e.buttonText)),
            null != e.buttonUrl && (t.buttonUrl = String(e.buttonUrl)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !0 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0))),
            null != e.showAvatar && (t.showAvatar = Boolean(e.showAvatar)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.title = "",
                n.body = "",
                n.buttonText = "",
                n.buttonUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.showAvatar = !1
            }
            return null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.body && e.hasOwnProperty("body") && (n.body = e.body),
            null != e.buttonText && e.hasOwnProperty("buttonText") && (n.buttonText = e.buttonText),
            null != e.buttonUrl && e.hasOwnProperty("buttonUrl") && (n.buttonUrl = e.buttonUrl),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber(!0) : e.timestamp),
            null != e.showAvatar && e.hasOwnProperty("showAvatar") && (n.showAvatar = e.showAvatar),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyMarkdown = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.body = "",
        e.prototype.showAvatar = !1,
        e.prototype.source = null,
        e.prototype.buttonOptions = null,
        e.prototype.appId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.body && e.hasOwnProperty("body") && t.uint32(18).string(e.body),
            null != e.showAvatar && e.hasOwnProperty("showAvatar") && t.uint32(24).bool(e.showAvatar),
            null != e.source && e.hasOwnProperty("source") && s.SocketBodyExtSource.encode(e.source, t.uint32(34).fork()).ldelim(),
            null != e.buttonOptions && e.hasOwnProperty("buttonOptions") && s.SocketBodyExtButtonOptions.encode(e.buttonOptions, t.uint32(42).fork()).ldelim(),
            null != e.appId && e.hasOwnProperty("appId") && t.uint32(50).string(e.appId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyMarkdown;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.body = e.string();
                    break;
                case 3:
                    r.showAvatar = e.bool();
                    break;
                case 4:
                    r.source = s.SocketBodyExtSource.decode(e, e.uint32());
                    break;
                case 5:
                    r.buttonOptions = s.SocketBodyExtButtonOptions.decode(e, e.uint32());
                    break;
                case 6:
                    r.appId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyMarkdown)
                return e;
            var t = new s.SocketBodyMarkdown;
            if (null != e.title && (t.title = String(e.title)),
            null != e.body && (t.body = String(e.body)),
            null != e.showAvatar && (t.showAvatar = Boolean(e.showAvatar)),
            null != e.source) {
                if ("object" !== typeof e.source)
                    throw TypeError(".SocketBodyMarkdown.source: object expected");
                t.source = s.SocketBodyExtSource.fromObject(e.source)
            }
            if (null != e.buttonOptions) {
                if ("object" !== typeof e.buttonOptions)
                    throw TypeError(".SocketBodyMarkdown.buttonOptions: object expected");
                t.buttonOptions = s.SocketBodyExtButtonOptions.fromObject(e.buttonOptions)
            }
            return null != e.appId && (t.appId = String(e.appId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.title = "",
            n.body = "",
            n.showAvatar = !1,
            n.source = null,
            n.buttonOptions = null,
            n.appId = ""),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.body && e.hasOwnProperty("body") && (n.body = e.body),
            null != e.showAvatar && e.hasOwnProperty("showAvatar") && (n.showAvatar = e.showAvatar),
            null != e.source && e.hasOwnProperty("source") && (n.source = s.SocketBodyExtSource.toObject(e.source, t)),
            null != e.buttonOptions && e.hasOwnProperty("buttonOptions") && (n.buttonOptions = s.SocketBodyExtButtonOptions.toObject(e.buttonOptions, t)),
            null != e.appId && e.hasOwnProperty("appId") && (n.appId = e.appId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyHbOffice = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.content = "",
        e.prototype.url = "",
        e.prototype.tableName = "",
        e.prototype.tableIcon = "",
        e.prototype.senderName = "",
        e.prototype.senderAccount = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.content && e.hasOwnProperty("content") && t.uint32(18).string(e.content),
            null != e.url && e.hasOwnProperty("url") && t.uint32(26).string(e.url),
            null != e.tableName && e.hasOwnProperty("tableName") && t.uint32(34).string(e.tableName),
            null != e.tableIcon && e.hasOwnProperty("tableIcon") && t.uint32(42).string(e.tableIcon),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(50).string(e.senderName),
            null != e.senderAccount && e.hasOwnProperty("senderAccount") && t.uint32(56).uint64(e.senderAccount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyHbOffice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.content = e.string();
                    break;
                case 3:
                    r.url = e.string();
                    break;
                case 4:
                    r.tableName = e.string();
                    break;
                case 5:
                    r.tableIcon = e.string();
                    break;
                case 6:
                    r.senderName = e.string();
                    break;
                case 7:
                    r.senderAccount = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyHbOffice)
                return e;
            var t = new s.SocketBodyHbOffice;
            return null != e.title && (t.title = String(e.title)),
            null != e.content && (t.content = String(e.content)),
            null != e.url && (t.url = String(e.url)),
            null != e.tableName && (t.tableName = String(e.tableName)),
            null != e.tableIcon && (t.tableIcon = String(e.tableIcon)),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.senderAccount && (a.Long ? (t.senderAccount = a.Long.fromValue(e.senderAccount)).unsigned = !0 : "string" === typeof e.senderAccount ? t.senderAccount = parseInt(e.senderAccount, 10) : "number" === typeof e.senderAccount ? t.senderAccount = e.senderAccount : "object" === typeof e.senderAccount && (t.senderAccount = new a.LongBits(e.senderAccount.low >>> 0,e.senderAccount.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.title = "",
                n.content = "",
                n.url = "",
                n.tableName = "",
                n.tableIcon = "",
                n.senderName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.senderAccount = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.senderAccount = t.longs === String ? "0" : 0;
            return null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            null != e.url && e.hasOwnProperty("url") && (n.url = e.url),
            null != e.tableName && e.hasOwnProperty("tableName") && (n.tableName = e.tableName),
            null != e.tableIcon && e.hasOwnProperty("tableIcon") && (n.tableIcon = e.tableIcon),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.senderAccount && e.hasOwnProperty("senderAccount") && ("number" === typeof e.senderAccount ? n.senderAccount = t.longs === String ? String(e.senderAccount) : e.senderAccount : n.senderAccount = t.longs === String ? a.Long.prototype.toString.call(e.senderAccount) : t.longs === Number ? new a.LongBits(e.senderAccount.low >>> 0,e.senderAccount.high >>> 0).toNumber(!0) : e.senderAccount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyTransferSend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.transferId = "",
        e.prototype.processingStatus = 0,
        e.prototype.price = 0,
        e.prototype.description = "",
        e.prototype.timestamp = a.Long ? a.Long.fromBits(0, 0, !1) : 0,
        e.prototype.senderId = 0,
        e.prototype.receiverId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.transferId && e.hasOwnProperty("transferId") && t.uint32(10).string(e.transferId),
            null != e.processingStatus && e.hasOwnProperty("processingStatus") && t.uint32(16).int32(e.processingStatus),
            null != e.price && e.hasOwnProperty("price") && t.uint32(24).int32(e.price),
            null != e.description && e.hasOwnProperty("description") && t.uint32(34).string(e.description),
            null != e.timestamp && e.hasOwnProperty("timestamp") && t.uint32(40).int64(e.timestamp),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(48).int32(e.senderId),
            null != e.receiverId && e.hasOwnProperty("receiverId") && t.uint32(56).int32(e.receiverId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyTransferSend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.transferId = e.string();
                    break;
                case 2:
                    r.processingStatus = e.int32();
                    break;
                case 3:
                    r.price = e.int32();
                    break;
                case 4:
                    r.description = e.string();
                    break;
                case 5:
                    r.timestamp = e.int64();
                    break;
                case 6:
                    r.senderId = e.int32();
                    break;
                case 7:
                    r.receiverId = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyTransferSend)
                return e;
            var t = new s.SocketBodyTransferSend;
            return null != e.transferId && (t.transferId = String(e.transferId)),
            null != e.processingStatus && (t.processingStatus = 0 | e.processingStatus),
            null != e.price && (t.price = 0 | e.price),
            null != e.description && (t.description = String(e.description)),
            null != e.timestamp && (a.Long ? (t.timestamp = a.Long.fromValue(e.timestamp)).unsigned = !1 : "string" === typeof e.timestamp ? t.timestamp = parseInt(e.timestamp, 10) : "number" === typeof e.timestamp ? t.timestamp = e.timestamp : "object" === typeof e.timestamp && (t.timestamp = new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber())),
            null != e.senderId && (t.senderId = 0 | e.senderId),
            null != e.receiverId && (t.receiverId = 0 | e.receiverId),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.transferId = "",
                n.processingStatus = 0,
                n.price = 0,
                n.description = "",
                a.Long) {
                    var r = new a.Long(0,0,!1);
                    n.timestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.timestamp = t.longs === String ? "0" : 0;
                n.senderId = 0,
                n.receiverId = 0
            }
            return null != e.transferId && e.hasOwnProperty("transferId") && (n.transferId = e.transferId),
            null != e.processingStatus && e.hasOwnProperty("processingStatus") && (n.processingStatus = e.processingStatus),
            null != e.price && e.hasOwnProperty("price") && (n.price = e.price),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.timestamp && e.hasOwnProperty("timestamp") && ("number" === typeof e.timestamp ? n.timestamp = t.longs === String ? String(e.timestamp) : e.timestamp : n.timestamp = t.longs === String ? a.Long.prototype.toString.call(e.timestamp) : t.longs === Number ? new a.LongBits(e.timestamp.low >>> 0,e.timestamp.high >>> 0).toNumber() : e.timestamp),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            null != e.receiverId && e.hasOwnProperty("receiverId") && (n.receiverId = e.receiverId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyRemindMessage = function() {
        function e(e) {
            if (this.remindUsers = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.prototype.remindUsers = a.emptyArray,
        e.prototype.remindAll = !1,
        e.prototype.playType = 0,
        e.prototype.specialRingType = 0,
        e.prototype.strengthType = 0,
        e.prototype.playFileUrl = "",
        e.prototype.templateText = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            null != e.remindUsers && e.remindUsers.length) {
                t.uint32(18).fork();
                for (var n = 0; n < e.remindUsers.length; ++n)
                    t.uint32(e.remindUsers[n]);
                t.ldelim()
            }
            return null != e.remindAll && e.hasOwnProperty("remindAll") && t.uint32(24).bool(e.remindAll),
            null != e.playType && e.hasOwnProperty("playType") && t.uint32(32).int32(e.playType),
            null != e.specialRingType && e.hasOwnProperty("specialRingType") && t.uint32(40).int32(e.specialRingType),
            null != e.strengthType && e.hasOwnProperty("strengthType") && t.uint32(48).int32(e.strengthType),
            null != e.playFileUrl && e.hasOwnProperty("playFileUrl") && t.uint32(58).string(e.playFileUrl),
            null != e.templateText && e.hasOwnProperty("templateText") && t.uint32(66).string(e.templateText),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyRemindMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                case 2:
                    if (r.remindUsers && r.remindUsers.length || (r.remindUsers = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.remindUsers.push(e.uint32())
                    } else
                        r.remindUsers.push(e.uint32());
                    break;
                case 3:
                    r.remindAll = e.bool();
                    break;
                case 4:
                    r.playType = e.int32();
                    break;
                case 5:
                    r.specialRingType = e.int32();
                    break;
                case 6:
                    r.strengthType = e.int32();
                    break;
                case 7:
                    r.playFileUrl = e.string();
                    break;
                case 8:
                    r.templateText = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyRemindMessage)
                return e;
            var t = new s.SocketBodyRemindMessage;
            if (null != e.text && (t.text = String(e.text)),
            e.remindUsers) {
                if (!Array.isArray(e.remindUsers))
                    throw TypeError(".SocketBodyRemindMessage.remindUsers: array expected");
                t.remindUsers = [];
                for (var n = 0; n < e.remindUsers.length; ++n)
                    t.remindUsers[n] = e.remindUsers[n] >>> 0
            }
            switch (null != e.remindAll && (t.remindAll = Boolean(e.remindAll)),
            e.playType) {
            case "CommonRemindMessagePlayTypeNormal":
            case 0:
                t.playType = 0;
                break;
            case "CommonRemindMessagePlayTypeVoice":
            case 1:
                t.playType = 1;
                break;
            case "CommonRemindMessagePlayTypeSpecial":
            case 2:
                t.playType = 2;
                break
            }
            switch (e.specialRingType) {
            case "CommonRemindMessageSpecialRingTypeUndefined":
            case 0:
                t.specialRingType = 0;
                break;
            case "CommonRemindMessageSpecialRingTypeOnDuty":
            case 1:
                t.specialRingType = 1;
                break;
            case "CommonRemindMessageSpecialRingTypeMeeting":
            case 2:
                t.specialRingType = 2;
                break;
            case "CommonRemindMessageSpecialRingTypeAssemble":
            case 3:
                t.specialRingType = 3;
                break;
            case "CommonRemindMessageSpecialRingTypeEat":
            case 4:
                t.specialRingType = 4;
                break;
            case "CommonRemindMessageSpecialRingTypeOffDuty":
            case 5:
                t.specialRingType = 5;
                break
            }
            switch (e.strengthType) {
            case "CommonRemindMessageStrengthTypeNormal":
            case 0:
                t.strengthType = 0;
                break;
            case "CommonRemindMessageStrengthTypeImportant":
            case 1:
                t.strengthType = 1;
                break;
            case "CommonRemindMessageStrengthTypeEmergency":
            case 2:
                t.strengthType = 2;
                break
            }
            return null != e.playFileUrl && (t.playFileUrl = String(e.playFileUrl)),
            null != e.templateText && (t.templateText = String(e.templateText)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.remindUsers = []),
            t.defaults && (n.text = "",
            n.remindAll = !1,
            n.playType = t.enums === String ? "CommonRemindMessagePlayTypeNormal" : 0,
            n.specialRingType = t.enums === String ? "CommonRemindMessageSpecialRingTypeUndefined" : 0,
            n.strengthType = t.enums === String ? "CommonRemindMessageStrengthTypeNormal" : 0,
            n.playFileUrl = "",
            n.templateText = ""),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            e.remindUsers && e.remindUsers.length) {
                n.remindUsers = [];
                for (var r = 0; r < e.remindUsers.length; ++r)
                    n.remindUsers[r] = e.remindUsers[r]
            }
            return null != e.remindAll && e.hasOwnProperty("remindAll") && (n.remindAll = e.remindAll),
            null != e.playType && e.hasOwnProperty("playType") && (n.playType = t.enums === String ? s.CommonRemindMessagePlayType[e.playType] : e.playType),
            null != e.specialRingType && e.hasOwnProperty("specialRingType") && (n.specialRingType = t.enums === String ? s.CommonRemindMessageSpecialRingType[e.specialRingType] : e.specialRingType),
            null != e.strengthType && e.hasOwnProperty("strengthType") && (n.strengthType = t.enums === String ? s.CommonRemindMessageStrengthType[e.strengthType] : e.strengthType),
            null != e.playFileUrl && e.hasOwnProperty("playFileUrl") && (n.playFileUrl = e.playFileUrl),
            null != e.templateText && e.hasOwnProperty("templateText") && (n.templateText = e.templateText),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyVote = function() {
        function e(e) {
            if (this.options = [],
            this.voteMemberIds = [],
            this.detailOptions = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.title = "",
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.options = a.emptyArray,
        e.prototype.anonymous = !1,
        e.prototype.open = !1,
        e.prototype.selectCount = 0,
        e.prototype.voteMemberIds = a.emptyArray,
        e.prototype.detailOptions = a.emptyArray,
        e.prototype.version = 0,
        e.prototype.senderId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(8).uint64(e.voteId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(24).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(32).uint64(e.endTimestamp),
            null != e.options && e.options.length)
                for (var n = 0; n < e.options.length; ++n)
                    s.CommonVoteOption.encode(e.options[n], t.uint32(42).fork()).ldelim();
            if (null != e.anonymous && e.hasOwnProperty("anonymous") && t.uint32(48).bool(e.anonymous),
            null != e.open && e.hasOwnProperty("open") && t.uint32(56).bool(e.open),
            null != e.selectCount && e.hasOwnProperty("selectCount") && t.uint32(64).uint32(e.selectCount),
            null != e.voteMemberIds && e.voteMemberIds.length) {
                t.uint32(74).fork();
                for (n = 0; n < e.voteMemberIds.length; ++n)
                    t.uint32(e.voteMemberIds[n]);
                t.ldelim()
            }
            if (null != e.detailOptions && e.detailOptions.length)
                for (n = 0; n < e.detailOptions.length; ++n)
                    s.CommonVoteOptionDetail.encode(e.detailOptions[n], t.uint32(82).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(88).uint32(e.version),
            null != e.senderId && e.hasOwnProperty("senderId") && t.uint32(96).uint32(e.senderId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyVote;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.voteId = e.uint64();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.startTimestamp = e.uint64();
                    break;
                case 4:
                    r.endTimestamp = e.uint64();
                    break;
                case 5:
                    r.options && r.options.length || (r.options = []),
                    r.options.push(s.CommonVoteOption.decode(e, e.uint32()));
                    break;
                case 6:
                    r.anonymous = e.bool();
                    break;
                case 7:
                    r.open = e.bool();
                    break;
                case 8:
                    r.selectCount = e.uint32();
                    break;
                case 9:
                    if (r.voteMemberIds && r.voteMemberIds.length || (r.voteMemberIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.voteMemberIds.push(e.uint32())
                    } else
                        r.voteMemberIds.push(e.uint32());
                    break;
                case 10:
                    r.detailOptions && r.detailOptions.length || (r.detailOptions = []),
                    r.detailOptions.push(s.CommonVoteOptionDetail.decode(e, e.uint32()));
                    break;
                case 11:
                    r.version = e.uint32();
                    break;
                case 12:
                    r.senderId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyVote)
                return e;
            var t = new s.SocketBodyVote;
            if (null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            null != e.title && (t.title = String(e.title)),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            e.options) {
                if (!Array.isArray(e.options))
                    throw TypeError(".SocketBodyVote.options: array expected");
                t.options = [];
                for (var n = 0; n < e.options.length; ++n) {
                    if ("object" !== typeof e.options[n])
                        throw TypeError(".SocketBodyVote.options: object expected");
                    t.options[n] = s.CommonVoteOption.fromObject(e.options[n])
                }
            }
            if (null != e.anonymous && (t.anonymous = Boolean(e.anonymous)),
            null != e.open && (t.open = Boolean(e.open)),
            null != e.selectCount && (t.selectCount = e.selectCount >>> 0),
            e.voteMemberIds) {
                if (!Array.isArray(e.voteMemberIds))
                    throw TypeError(".SocketBodyVote.voteMemberIds: array expected");
                t.voteMemberIds = [];
                for (n = 0; n < e.voteMemberIds.length; ++n)
                    t.voteMemberIds[n] = e.voteMemberIds[n] >>> 0
            }
            if (e.detailOptions) {
                if (!Array.isArray(e.detailOptions))
                    throw TypeError(".SocketBodyVote.detailOptions: array expected");
                t.detailOptions = [];
                for (n = 0; n < e.detailOptions.length; ++n) {
                    if ("object" !== typeof e.detailOptions[n])
                        throw TypeError(".SocketBodyVote.detailOptions: object expected");
                    t.detailOptions[n] = s.CommonVoteOptionDetail.fromObject(e.detailOptions[n])
                }
            }
            return null != e.version && (t.version = e.version >>> 0),
            null != e.senderId && (t.senderId = e.senderId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.options = [],
            n.voteMemberIds = [],
            n.detailOptions = []),
            t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                if (n.title = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.anonymous = !1,
                n.open = !1,
                n.selectCount = 0,
                n.version = 0,
                n.senderId = 0
            }
            if (null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            e.options && e.options.length) {
                n.options = [];
                for (var o = 0; o < e.options.length; ++o)
                    n.options[o] = s.CommonVoteOption.toObject(e.options[o], t)
            }
            if (null != e.anonymous && e.hasOwnProperty("anonymous") && (n.anonymous = e.anonymous),
            null != e.open && e.hasOwnProperty("open") && (n.open = e.open),
            null != e.selectCount && e.hasOwnProperty("selectCount") && (n.selectCount = e.selectCount),
            e.voteMemberIds && e.voteMemberIds.length) {
                n.voteMemberIds = [];
                for (o = 0; o < e.voteMemberIds.length; ++o)
                    n.voteMemberIds[o] = e.voteMemberIds[o]
            }
            if (e.detailOptions && e.detailOptions.length) {
                n.detailOptions = [];
                for (o = 0; o < e.detailOptions.length; ++o)
                    n.detailOptions[o] = s.CommonVoteOptionDetail.toObject(e.detailOptions[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.senderId && e.hasOwnProperty("senderId") && (n.senderId = e.senderId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyTask = function() {
        function e(e) {
            if (this.receiverMemberIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskId = 0,
        e.prototype.content = "",
        e.prototype.receiverMemberIds = a.emptyArray,
        e.prototype.isFinish = !1,
        e.prototype.isDelete = !1,
        e.prototype.version = 0,
        e.prototype.taskConversationId = "",
        e.prototype.taskType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskId && e.hasOwnProperty("taskId") && t.uint32(8).uint32(e.taskId),
            null != e.content && e.hasOwnProperty("content") && t.uint32(18).string(e.content),
            null != e.receiverMemberIds && e.receiverMemberIds.length)
                for (var n = 0; n < e.receiverMemberIds.length; ++n)
                    s.CommonAtUserInfo.encode(e.receiverMemberIds[n], t.uint32(26).fork()).ldelim();
            return null != e.isFinish && e.hasOwnProperty("isFinish") && t.uint32(32).bool(e.isFinish),
            null != e.isDelete && e.hasOwnProperty("isDelete") && t.uint32(40).bool(e.isDelete),
            null != e.version && e.hasOwnProperty("version") && t.uint32(48).uint32(e.version),
            null != e.taskConversationId && e.hasOwnProperty("taskConversationId") && t.uint32(58).string(e.taskConversationId),
            null != e.taskType && e.hasOwnProperty("taskType") && t.uint32(64).int32(e.taskType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyTask;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.taskId = e.uint32();
                    break;
                case 2:
                    r.content = e.string();
                    break;
                case 3:
                    r.receiverMemberIds && r.receiverMemberIds.length || (r.receiverMemberIds = []),
                    r.receiverMemberIds.push(s.CommonAtUserInfo.decode(e, e.uint32()));
                    break;
                case 4:
                    r.isFinish = e.bool();
                    break;
                case 5:
                    r.isDelete = e.bool();
                    break;
                case 6:
                    r.version = e.uint32();
                    break;
                case 7:
                    r.taskConversationId = e.string();
                    break;
                case 8:
                    r.taskType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyTask)
                return e;
            var t = new s.SocketBodyTask;
            if (null != e.taskId && (t.taskId = e.taskId >>> 0),
            null != e.content && (t.content = String(e.content)),
            e.receiverMemberIds) {
                if (!Array.isArray(e.receiverMemberIds))
                    throw TypeError(".SocketBodyTask.receiverMemberIds: array expected");
                t.receiverMemberIds = [];
                for (var n = 0; n < e.receiverMemberIds.length; ++n) {
                    if ("object" !== typeof e.receiverMemberIds[n])
                        throw TypeError(".SocketBodyTask.receiverMemberIds: object expected");
                    t.receiverMemberIds[n] = s.CommonAtUserInfo.fromObject(e.receiverMemberIds[n])
                }
            }
            switch (null != e.isFinish && (t.isFinish = Boolean(e.isFinish)),
            null != e.isDelete && (t.isDelete = Boolean(e.isDelete)),
            null != e.version && (t.version = e.version >>> 0),
            null != e.taskConversationId && (t.taskConversationId = String(e.taskConversationId)),
            e.taskType) {
            case "CommonTaskTypeNone":
            case 0:
                t.taskType = 0;
                break;
            case "CommonTaskTypeTask":
            case 1:
                t.taskType = 1;
                break;
            case "CommonTaskTypeGroup":
            case 2:
                t.taskType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.receiverMemberIds = []),
            t.defaults && (n.taskId = 0,
            n.content = "",
            n.isFinish = !1,
            n.isDelete = !1,
            n.version = 0,
            n.taskConversationId = "",
            n.taskType = t.enums === String ? "CommonTaskTypeNone" : 0),
            null != e.taskId && e.hasOwnProperty("taskId") && (n.taskId = e.taskId),
            null != e.content && e.hasOwnProperty("content") && (n.content = e.content),
            e.receiverMemberIds && e.receiverMemberIds.length) {
                n.receiverMemberIds = [];
                for (var r = 0; r < e.receiverMemberIds.length; ++r)
                    n.receiverMemberIds[r] = s.CommonAtUserInfo.toObject(e.receiverMemberIds[r], t)
            }
            return null != e.isFinish && e.hasOwnProperty("isFinish") && (n.isFinish = e.isFinish),
            null != e.isDelete && e.hasOwnProperty("isDelete") && (n.isDelete = e.isDelete),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            null != e.taskConversationId && e.hasOwnProperty("taskConversationId") && (n.taskConversationId = e.taskConversationId),
            null != e.taskType && e.hasOwnProperty("taskType") && (n.taskType = t.enums === String ? s.CommonTaskType[e.taskType] : e.taskType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyP2pFile = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.size = 0,
        e.prototype.fileName = "",
        e.prototype.md5 = "",
        e.prototype.status = 0,
        e.prototype.cancelUserId = 0,
        e.prototype.sdp = null,
        e.prototype.fileSize = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.size && e.hasOwnProperty("size") && t.uint32(8).uint32(e.size),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(18).string(e.fileName),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(26).string(e.md5),
            null != e.status && e.hasOwnProperty("status") && t.uint32(32).int32(e.status),
            null != e.cancelUserId && e.hasOwnProperty("cancelUserId") && t.uint32(40).uint32(e.cancelUserId),
            null != e.sdp && e.hasOwnProperty("sdp") && s.SocketBodyWebRtcSDP.encode(e.sdp, t.uint32(50).fork()).ldelim(),
            null != e.fileSize && e.hasOwnProperty("fileSize") && t.uint32(56).uint64(e.fileSize),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyP2pFile;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.size = e.uint32();
                    break;
                case 2:
                    r.fileName = e.string();
                    break;
                case 3:
                    r.md5 = e.string();
                    break;
                case 4:
                    r.status = e.int32();
                    break;
                case 5:
                    r.cancelUserId = e.uint32();
                    break;
                case 6:
                    r.sdp = s.SocketBodyWebRtcSDP.decode(e, e.uint32());
                    break;
                case 7:
                    r.fileSize = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyP2pFile)
                return e;
            var t = new s.SocketBodyP2pFile;
            switch (null != e.size && (t.size = e.size >>> 0),
            null != e.fileName && (t.fileName = String(e.fileName)),
            null != e.md5 && (t.md5 = String(e.md5)),
            e.status) {
            case "CommonP2pFileStatusNone":
            case 0:
                t.status = 0;
                break;
            case "CommonP2pFileStatusWaiting":
            case 1:
                t.status = 1;
                break;
            case "CommonP2pFileStatusReject":
            case 2:
                t.status = 2;
                break;
            case "CommonP2pFileStatusCancel":
            case 3:
                t.status = 3;
                break;
            case "CommonP2pFileStatusAccept":
            case 4:
                t.status = 4;
                break;
            case "CommonP2pFileStatusSuccess":
            case 5:
                t.status = 5;
                break;
            case "CommonP2pFileStatusPause":
            case 6:
                t.status = 6;
                break;
            case "CommonP2pFileStatusFailure":
            case 7:
                t.status = 7;
                break
            }
            if (null != e.cancelUserId && (t.cancelUserId = e.cancelUserId >>> 0),
            null != e.sdp) {
                if ("object" !== typeof e.sdp)
                    throw TypeError(".SocketBodyP2pFile.sdp: object expected");
                t.sdp = s.SocketBodyWebRtcSDP.fromObject(e.sdp)
            }
            return null != e.fileSize && (a.Long ? (t.fileSize = a.Long.fromValue(e.fileSize)).unsigned = !0 : "string" === typeof e.fileSize ? t.fileSize = parseInt(e.fileSize, 10) : "number" === typeof e.fileSize ? t.fileSize = e.fileSize : "object" === typeof e.fileSize && (t.fileSize = new a.LongBits(e.fileSize.low >>> 0,e.fileSize.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.size = 0,
                n.fileName = "",
                n.md5 = "",
                n.status = t.enums === String ? "CommonP2pFileStatusNone" : 0,
                n.cancelUserId = 0,
                n.sdp = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.fileSize = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.fileSize = t.longs === String ? "0" : 0;
            return null != e.size && e.hasOwnProperty("size") && (n.size = e.size),
            null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonP2pFileStatus[e.status] : e.status),
            null != e.cancelUserId && e.hasOwnProperty("cancelUserId") && (n.cancelUserId = e.cancelUserId),
            null != e.sdp && e.hasOwnProperty("sdp") && (n.sdp = s.SocketBodyWebRtcSDP.toObject(e.sdp, t)),
            null != e.fileSize && e.hasOwnProperty("fileSize") && ("number" === typeof e.fileSize ? n.fileSize = t.longs === String ? String(e.fileSize) : e.fileSize : n.fileSize = t.longs === String ? a.Long.prototype.toString.call(e.fileSize) : t.longs === Number ? new a.LongBits(e.fileSize.low >>> 0,e.fileSize.high >>> 0).toNumber(!0) : e.fileSize),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyMessageUpdate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.message = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyMessageUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyMessageUpdate)
                return e;
            var t = new s.SocketBodyMessageUpdate;
            if (null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".SocketBodyMessageUpdate.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.message = null),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCancelMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.prototype.name = "",
        e.prototype.editText = "",
        e.prototype.senderName = "",
        e.prototype.senderUserId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.editText && e.hasOwnProperty("editText") && t.uint32(26).string(e.editText),
            null != e.senderName && e.hasOwnProperty("senderName") && t.uint32(34).string(e.senderName),
            null != e.senderUserId && e.hasOwnProperty("senderUserId") && t.uint32(40).uint32(e.senderUserId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCancelMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.editText = e.string();
                    break;
                case 4:
                    r.senderName = e.string();
                    break;
                case 5:
                    r.senderUserId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCancelMessage)
                return e;
            var t = new s.SocketBodyCancelMessage;
            return null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.name && (t.name = String(e.name)),
            null != e.editText && (t.editText = String(e.editText)),
            null != e.senderName && (t.senderName = String(e.senderName)),
            null != e.senderUserId && (t.senderUserId = e.senderUserId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.messageId = "",
            n.name = "",
            n.editText = "",
            n.senderName = "",
            n.senderUserId = 0),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.editText && e.hasOwnProperty("editText") && (n.editText = e.editText),
            null != e.senderName && e.hasOwnProperty("senderName") && (n.senderName = e.senderName),
            null != e.senderUserId && e.hasOwnProperty("senderUserId") && (n.senderUserId = e.senderUserId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCancelMessageFail = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCancelMessageFail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCancelMessageFail)
                return e;
            var t = new s.SocketBodyCancelMessageFail;
            return null != e.messageId && (t.messageId = String(e.messageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.messageId = ""),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLoginRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.token = "",
        e.prototype.deviceId = "",
        e.prototype.batchAck = null,
        e.prototype.config = null,
        e.prototype.externalSourceType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.token && e.hasOwnProperty("token") && t.uint32(18).string(e.token),
            null != e.deviceId && e.hasOwnProperty("deviceId") && t.uint32(26).string(e.deviceId),
            null != e.batchAck && e.hasOwnProperty("batchAck") && s.SocketBodyBatchAck.encode(e.batchAck, t.uint32(42).fork()).ldelim(),
            null != e.config && e.hasOwnProperty("config") && s.SocketBodyConfig.encode(e.config, t.uint32(50).fork()).ldelim(),
            null != e.externalSourceType && e.hasOwnProperty("externalSourceType") && t.uint32(56).int32(e.externalSourceType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLoginRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.token = e.string();
                    break;
                case 3:
                    r.deviceId = e.string();
                    break;
                case 5:
                    r.batchAck = s.SocketBodyBatchAck.decode(e, e.uint32());
                    break;
                case 6:
                    r.config = s.SocketBodyConfig.decode(e, e.uint32());
                    break;
                case 7:
                    r.externalSourceType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLoginRequest)
                return e;
            var t = new s.SocketBodyLoginRequest;
            if (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.token && (t.token = String(e.token)),
            null != e.deviceId && (t.deviceId = String(e.deviceId)),
            null != e.batchAck) {
                if ("object" !== typeof e.batchAck)
                    throw TypeError(".SocketBodyLoginRequest.batchAck: object expected");
                t.batchAck = s.SocketBodyBatchAck.fromObject(e.batchAck)
            }
            if (null != e.config) {
                if ("object" !== typeof e.config)
                    throw TypeError(".SocketBodyLoginRequest.config: object expected");
                t.config = s.SocketBodyConfig.fromObject(e.config)
            }
            switch (e.externalSourceType) {
            case "CommonExternalSourceTypeDefault":
            case 0:
                t.externalSourceType = 0;
                break;
            case "CommonExternalSourceTypeMiniProgram":
            case 1:
                t.externalSourceType = 1;
                break;
            case "CommonExternalSourceTypeMobile":
            case 2:
                t.externalSourceType = 2;
                break;
            case "CommonExternalSourceTypePC":
            case 3:
                t.externalSourceType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.token = "",
            n.deviceId = "",
            n.batchAck = null,
            n.config = null,
            n.externalSourceType = t.enums === String ? "CommonExternalSourceTypeDefault" : 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.deviceId && e.hasOwnProperty("deviceId") && (n.deviceId = e.deviceId),
            null != e.batchAck && e.hasOwnProperty("batchAck") && (n.batchAck = s.SocketBodyBatchAck.toObject(e.batchAck, t)),
            null != e.config && e.hasOwnProperty("config") && (n.config = s.SocketBodyConfig.toObject(e.config, t)),
            null != e.externalSourceType && e.hasOwnProperty("externalSourceType") && (n.externalSourceType = t.enums === String ? s.CommonExternalSourceType[e.externalSourceType] : e.externalSourceType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }();
    s.SocketBodyLoginResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.responseCode = 0,
        e.prototype.userId = 0,
        e.prototype.deviceId = "",
        e.prototype.defaultPrivateCountDown = 0,
        e.prototype.batchAck = null,
        e.prototype.config = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.responseCode && e.hasOwnProperty("responseCode") && t.uint32(8).int32(e.responseCode),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(16).uint32(e.userId),
            null != e.deviceId && e.hasOwnProperty("deviceId") && t.uint32(26).string(e.deviceId),
            null != e.defaultPrivateCountDown && e.hasOwnProperty("defaultPrivateCountDown") && t.uint32(32).uint32(e.defaultPrivateCountDown),
            null != e.batchAck && e.hasOwnProperty("batchAck") && s.SocketBodyBatchAck.encode(e.batchAck, t.uint32(42).fork()).ldelim(),
            null != e.config && e.hasOwnProperty("config") && s.SocketBodyConfig.encode(e.config, t.uint32(50).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLoginResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.responseCode = e.int32();
                    break;
                case 2:
                    r.userId = e.uint32();
                    break;
                case 3:
                    r.deviceId = e.string();
                    break;
                case 4:
                    r.defaultPrivateCountDown = e.uint32();
                    break;
                case 5:
                    r.batchAck = s.SocketBodyBatchAck.decode(e, e.uint32());
                    break;
                case 6:
                    r.config = s.SocketBodyConfig.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLoginResponse)
                return e;
            var t = new s.SocketBodyLoginResponse;
            switch (e.responseCode) {
            case "SocketResponseCodeSuccess":
            case 0:
                t.responseCode = 0;
                break;
            case "SocketResponseCodeUserAuthFail":
            case 1:
                t.responseCode = 1;
                break;
            case "SocketResponseCodeUserNotConnection":
            case 2:
                t.responseCode = 2;
                break;
            case "SocketResponseCodeUserTokenTimeOut":
            case 3:
                t.responseCode = 3;
                break;
            case "SocketResponseCodeUserUpdatePassword":
            case 4:
                t.responseCode = 4;
                break;
            case "SocketResponseCodeUserKickOffline":
            case 5:
                t.responseCode = 5;
                break;
            case "SocketResponseCodeMessageReceiverNotSenderFriend":
            case 6:
                t.responseCode = 6;
                break;
            case "SocketResponseCodeMessageSenderNotGroupMember":
            case 7:
                t.responseCode = 7;
                break;
            case "SocketResponseCodeMessageReceiverNotFollowRobot":
            case 8:
                t.responseCode = 8;
                break;
            case "SocketResponseCodeCallNonExistent":
            case 9:
                t.responseCode = 9;
                break;
            case "SocketResponseCodeGroupVoiceChatMemberOverLimit":
            case 10:
                t.responseCode = 10;
                break;
            case "SocketResponseCodeCallChaterNotFriend":
            case 11:
                t.responseCode = 11;
                break;
            case "SocketResponseCodeUserNotJoined":
            case 12:
                t.responseCode = 12;
                break;
            case "SocketResponseCodeSendRemindMessageNotPermit":
            case 13:
                t.responseCode = 13;
                break;
            case "SocketResponseCodeCallOver":
            case 14:
                t.responseCode = 14;
                break;
            case "SocketResponseCodeCallNotCalling":
            case 15:
                t.responseCode = 15;
                break;
            case "SocketResponseCodeCallIsCalling":
            case 16:
                t.responseCode = 16;
                break;
            case "SocketResponseCodeCallIsCallingOrOver":
            case 17:
                t.responseCode = 17;
                break;
            case "SocketResponseCodeCallGroupMemberLessThanTwo":
            case 18:
                t.responseCode = 18;
                break;
            case "SocketResponseCodeCallMemberNotInGroup":
            case 19:
                t.responseCode = 19;
                break;
            case "SocketResponseCodeCallExistGroupCall":
            case 20:
                t.responseCode = 20;
                break;
            case "SocketResponseCodeCallInviteZeroMember":
            case 21:
                t.responseCode = 21;
                break;
            case "SocketResponseCodeCallGroupMemberIsCalling":
            case 22:
                t.responseCode = 22;
                break;
            case "SocketResponseCodeCallMemberNotInCallGroup":
            case 23:
                t.responseCode = 23;
                break;
            case "SocketResponseCodeCallGroupMemberIsWaiting":
            case 24:
                t.responseCode = 24;
                break;
            case "SocketResponseCodeCallChannelIsNull":
            case 25:
                t.responseCode = 25;
                break;
            case "SocketResponseCodeCallCanCallYourSelf":
            case 26:
                t.responseCode = 26;
                break;
            case "SocketResponseCodeMessageServiceAccountCantReply":
            case 27:
                t.responseCode = 27;
                break;
            case "SocketResponseCodeGroupNotAllowSendMessage":
            case 28:
                t.responseCode = 28;
                break;
            case "SocketResponseCodeServerCrash":
            case 29:
                t.responseCode = 29;
                break;
            case "SocketResponseCodeFail":
            case 30:
                t.responseCode = 30;
                break
            }
            if (null != e.userId && (t.userId = e.userId >>> 0),
            null != e.deviceId && (t.deviceId = String(e.deviceId)),
            null != e.defaultPrivateCountDown && (t.defaultPrivateCountDown = e.defaultPrivateCountDown >>> 0),
            null != e.batchAck) {
                if ("object" !== typeof e.batchAck)
                    throw TypeError(".SocketBodyLoginResponse.batchAck: object expected");
                t.batchAck = s.SocketBodyBatchAck.fromObject(e.batchAck)
            }
            if (null != e.config) {
                if ("object" !== typeof e.config)
                    throw TypeError(".SocketBodyLoginResponse.config: object expected");
                t.config = s.SocketBodyConfig.fromObject(e.config)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.responseCode = t.enums === String ? "SocketResponseCodeSuccess" : 0,
            n.userId = 0,
            n.deviceId = "",
            n.defaultPrivateCountDown = 0,
            n.batchAck = null,
            n.config = null),
            null != e.responseCode && e.hasOwnProperty("responseCode") && (n.responseCode = t.enums === String ? s.SocketResponseCode[e.responseCode] : e.responseCode),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.deviceId && e.hasOwnProperty("deviceId") && (n.deviceId = e.deviceId),
            null != e.defaultPrivateCountDown && e.hasOwnProperty("defaultPrivateCountDown") && (n.defaultPrivateCountDown = e.defaultPrivateCountDown),
            null != e.batchAck && e.hasOwnProperty("batchAck") && (n.batchAck = s.SocketBodyBatchAck.toObject(e.batchAck, t)),
            null != e.config && e.hasOwnProperty("config") && (n.config = s.SocketBodyConfig.toObject(e.config, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyBatchAck = function() {
        function e(e) {
            if (this.batchMessageAcks = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.batchMessageAcks = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.batchMessageAcks && e.batchMessageAcks.length)
                for (var n = 0; n < e.batchMessageAcks.length; ++n)
                    s.SocketBodyBatchConversationMessageAck.encode(e.batchMessageAcks[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyBatchAck;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.batchMessageAcks && r.batchMessageAcks.length || (r.batchMessageAcks = []),
                    r.batchMessageAcks.push(s.SocketBodyBatchConversationMessageAck.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyBatchAck)
                return e;
            var t = new s.SocketBodyBatchAck;
            if (e.batchMessageAcks) {
                if (!Array.isArray(e.batchMessageAcks))
                    throw TypeError(".SocketBodyBatchAck.batchMessageAcks: array expected");
                t.batchMessageAcks = [];
                for (var n = 0; n < e.batchMessageAcks.length; ++n) {
                    if ("object" !== typeof e.batchMessageAcks[n])
                        throw TypeError(".SocketBodyBatchAck.batchMessageAcks: object expected");
                    t.batchMessageAcks[n] = s.SocketBodyBatchConversationMessageAck.fromObject(e.batchMessageAcks[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.batchMessageAcks = []),
            e.batchMessageAcks && e.batchMessageAcks.length) {
                n.batchMessageAcks = [];
                for (var r = 0; r < e.batchMessageAcks.length; ++r)
                    n.batchMessageAcks[r] = s.SocketBodyBatchConversationMessageAck.toObject(e.batchMessageAcks[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyConfig = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.external = !1,
        e.prototype.appVersion = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.external && e.hasOwnProperty("external") && t.uint32(8).bool(e.external),
            null != e.appVersion && e.hasOwnProperty("appVersion") && t.uint32(18).string(e.appVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyConfig;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.external = e.bool();
                    break;
                case 2:
                    r.appVersion = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyConfig)
                return e;
            var t = new s.SocketBodyConfig;
            return null != e.external && (t.external = Boolean(e.external)),
            null != e.appVersion && (t.appVersion = String(e.appVersion)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.external = !1,
            n.appVersion = ""),
            null != e.external && e.hasOwnProperty("external") && (n.external = e.external),
            null != e.appVersion && e.hasOwnProperty("appVersion") && (n.appVersion = e.appVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLogoutRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.deviceType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.deviceType && e.hasOwnProperty("deviceType") && t.uint32(16).int32(e.deviceType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLogoutRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.deviceType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLogoutRequest)
                return e;
            var t = new s.SocketBodyLogoutRequest;
            switch (null != e.userId && (t.userId = e.userId >>> 0),
            e.deviceType) {
            case "CommonUserDeviceTypePC":
            case 0:
                t.deviceType = 0;
                break;
            case "CommonUserDeviceTypeAndroid":
            case 1:
                t.deviceType = 1;
                break;
            case "CommonUserDeviceTypeiOS":
            case 2:
                t.deviceType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.deviceType = t.enums === String ? "CommonUserDeviceTypePC" : 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.deviceType && e.hasOwnProperty("deviceType") && (n.deviceType = t.enums === String ? s.CommonUserDeviceType[e.deviceType] : e.deviceType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLogoutResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.responseCode = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.responseCode && e.hasOwnProperty("responseCode") && t.uint32(8).int32(e.responseCode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLogoutResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.responseCode = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLogoutResponse)
                return e;
            var t = new s.SocketBodyLogoutResponse;
            switch (e.responseCode) {
            case "SocketResponseCodeSuccess":
            case 0:
                t.responseCode = 0;
                break;
            case "SocketResponseCodeUserAuthFail":
            case 1:
                t.responseCode = 1;
                break;
            case "SocketResponseCodeUserNotConnection":
            case 2:
                t.responseCode = 2;
                break;
            case "SocketResponseCodeUserTokenTimeOut":
            case 3:
                t.responseCode = 3;
                break;
            case "SocketResponseCodeUserUpdatePassword":
            case 4:
                t.responseCode = 4;
                break;
            case "SocketResponseCodeUserKickOffline":
            case 5:
                t.responseCode = 5;
                break;
            case "SocketResponseCodeMessageReceiverNotSenderFriend":
            case 6:
                t.responseCode = 6;
                break;
            case "SocketResponseCodeMessageSenderNotGroupMember":
            case 7:
                t.responseCode = 7;
                break;
            case "SocketResponseCodeMessageReceiverNotFollowRobot":
            case 8:
                t.responseCode = 8;
                break;
            case "SocketResponseCodeCallNonExistent":
            case 9:
                t.responseCode = 9;
                break;
            case "SocketResponseCodeGroupVoiceChatMemberOverLimit":
            case 10:
                t.responseCode = 10;
                break;
            case "SocketResponseCodeCallChaterNotFriend":
            case 11:
                t.responseCode = 11;
                break;
            case "SocketResponseCodeUserNotJoined":
            case 12:
                t.responseCode = 12;
                break;
            case "SocketResponseCodeSendRemindMessageNotPermit":
            case 13:
                t.responseCode = 13;
                break;
            case "SocketResponseCodeCallOver":
            case 14:
                t.responseCode = 14;
                break;
            case "SocketResponseCodeCallNotCalling":
            case 15:
                t.responseCode = 15;
                break;
            case "SocketResponseCodeCallIsCalling":
            case 16:
                t.responseCode = 16;
                break;
            case "SocketResponseCodeCallIsCallingOrOver":
            case 17:
                t.responseCode = 17;
                break;
            case "SocketResponseCodeCallGroupMemberLessThanTwo":
            case 18:
                t.responseCode = 18;
                break;
            case "SocketResponseCodeCallMemberNotInGroup":
            case 19:
                t.responseCode = 19;
                break;
            case "SocketResponseCodeCallExistGroupCall":
            case 20:
                t.responseCode = 20;
                break;
            case "SocketResponseCodeCallInviteZeroMember":
            case 21:
                t.responseCode = 21;
                break;
            case "SocketResponseCodeCallGroupMemberIsCalling":
            case 22:
                t.responseCode = 22;
                break;
            case "SocketResponseCodeCallMemberNotInCallGroup":
            case 23:
                t.responseCode = 23;
                break;
            case "SocketResponseCodeCallGroupMemberIsWaiting":
            case 24:
                t.responseCode = 24;
                break;
            case "SocketResponseCodeCallChannelIsNull":
            case 25:
                t.responseCode = 25;
                break;
            case "SocketResponseCodeCallCanCallYourSelf":
            case 26:
                t.responseCode = 26;
                break;
            case "SocketResponseCodeMessageServiceAccountCantReply":
            case 27:
                t.responseCode = 27;
                break;
            case "SocketResponseCodeGroupNotAllowSendMessage":
            case 28:
                t.responseCode = 28;
                break;
            case "SocketResponseCodeServerCrash":
            case 29:
                t.responseCode = 29;
                break;
            case "SocketResponseCodeFail":
            case 30:
                t.responseCode = 30;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.responseCode = t.enums === String ? "SocketResponseCodeSuccess" : 0),
            null != e.responseCode && e.hasOwnProperty("responseCode") && (n.responseCode = t.enums === String ? s.SocketResponseCode[e.responseCode] : e.responseCode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGetLoginQRCodeRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.loginType = 0,
        e.prototype.deviceId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.loginType && e.hasOwnProperty("loginType") && t.uint32(8).int32(e.loginType),
            null != e.deviceId && e.hasOwnProperty("deviceId") && t.uint32(18).string(e.deviceId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGetLoginQRCodeRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.loginType = e.int32();
                    break;
                case 2:
                    r.deviceId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGetLoginQRCodeRequest)
                return e;
            var t = new s.SocketBodyGetLoginQRCodeRequest;
            switch (e.loginType) {
            case "CommonPCLoginTypeUndifined":
            case 0:
                t.loginType = 0;
                break;
            case "CommonPCLoginTypeWindowsClient":
            case 1:
                t.loginType = 1;
                break;
            case "CommonPCLoginTypeMacClient":
            case 2:
                t.loginType = 2;
                break;
            case "CommonPCLoginTypeWebBrowser":
            case 3:
                t.loginType = 3;
                break
            }
            return null != e.deviceId && (t.deviceId = String(e.deviceId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.loginType = t.enums === String ? "CommonPCLoginTypeUndifined" : 0,
            n.deviceId = ""),
            null != e.loginType && e.hasOwnProperty("loginType") && (n.loginType = t.enums === String ? s.CommonPCLoginType[e.loginType] : e.loginType),
            null != e.deviceId && e.hasOwnProperty("deviceId") && (n.deviceId = e.deviceId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGetLoginQRCodeResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.qrcode = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.qrcode && e.hasOwnProperty("qrcode") && t.uint32(10).string(e.qrcode),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGetLoginQRCodeResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.qrcode = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGetLoginQRCodeResponse)
                return e;
            var t = new s.SocketBodyGetLoginQRCodeResponse;
            return null != e.qrcode && (t.qrcode = String(e.qrcode)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.qrcode = ""),
            null != e.qrcode && e.hasOwnProperty("qrcode") && (n.qrcode = e.qrcode),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyQRCodeMobileScaned = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.prototype.avatarUrl = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(26).string(e.avatarUrl),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyQRCodeMobileScaned;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.avatarUrl = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyQRCodeMobileScaned)
                return e;
            var t = new s.SocketBodyQRCodeMobileScaned;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.name = "",
            n.avatarUrl = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyQRCodeLoginMobileAccept = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.token = "",
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.hbOfficeToken = "",
        e.prototype.hbOfficeUserId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.lastDeviceId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.token && e.hasOwnProperty("token") && t.uint32(18).string(e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(24).uint64(e.expiredTimestamp),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && t.uint32(34).string(e.hbOfficeToken),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && t.uint32(40).uint64(e.hbOfficeUserId),
            null != e.lastDeviceId && e.hasOwnProperty("lastDeviceId") && t.uint32(50).string(e.lastDeviceId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyQRCodeLoginMobileAccept;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.token = e.string();
                    break;
                case 3:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 4:
                    r.hbOfficeToken = e.string();
                    break;
                case 5:
                    r.hbOfficeUserId = e.uint64();
                    break;
                case 6:
                    r.lastDeviceId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyQRCodeLoginMobileAccept)
                return e;
            var t = new s.SocketBodyQRCodeLoginMobileAccept;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.token && (t.token = String(e.token)),
            null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.hbOfficeToken && (t.hbOfficeToken = String(e.hbOfficeToken)),
            null != e.hbOfficeUserId && (a.Long ? (t.hbOfficeUserId = a.Long.fromValue(e.hbOfficeUserId)).unsigned = !0 : "string" === typeof e.hbOfficeUserId ? t.hbOfficeUserId = parseInt(e.hbOfficeUserId, 10) : "number" === typeof e.hbOfficeUserId ? t.hbOfficeUserId = e.hbOfficeUserId : "object" === typeof e.hbOfficeUserId && (t.hbOfficeUserId = new a.LongBits(e.hbOfficeUserId.low >>> 0,e.hbOfficeUserId.high >>> 0).toNumber(!0))),
            null != e.lastDeviceId && (t.lastDeviceId = String(e.lastDeviceId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.userId = 0,
                n.token = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                if (n.hbOfficeToken = "",
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.hbOfficeUserId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.hbOfficeUserId = t.longs === String ? "0" : 0;
                n.lastDeviceId = ""
            }
            return null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.token && e.hasOwnProperty("token") && (n.token = e.token),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.hbOfficeToken && e.hasOwnProperty("hbOfficeToken") && (n.hbOfficeToken = e.hbOfficeToken),
            null != e.hbOfficeUserId && e.hasOwnProperty("hbOfficeUserId") && ("number" === typeof e.hbOfficeUserId ? n.hbOfficeUserId = t.longs === String ? String(e.hbOfficeUserId) : e.hbOfficeUserId : n.hbOfficeUserId = t.longs === String ? a.Long.prototype.toString.call(e.hbOfficeUserId) : t.longs === Number ? new a.LongBits(e.hbOfficeUserId.low >>> 0,e.hbOfficeUserId.high >>> 0).toNumber(!0) : e.hbOfficeUserId),
            null != e.lastDeviceId && e.hasOwnProperty("lastDeviceId") && (n.lastDeviceId = e.lastDeviceId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyWebLoginStatusChange = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.isWebOnline = !1,
        e.prototype.loginType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.isWebOnline && e.hasOwnProperty("isWebOnline") && t.uint32(8).bool(e.isWebOnline),
            null != e.loginType && e.hasOwnProperty("loginType") && t.uint32(16).int32(e.loginType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyWebLoginStatusChange;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.isWebOnline = e.bool();
                    break;
                case 2:
                    r.loginType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyWebLoginStatusChange)
                return e;
            var t = new s.SocketBodyWebLoginStatusChange;
            switch (null != e.isWebOnline && (t.isWebOnline = Boolean(e.isWebOnline)),
            e.loginType) {
            case "CommonPCLoginTypeUndifined":
            case 0:
                t.loginType = 0;
                break;
            case "CommonPCLoginTypeWindowsClient":
            case 1:
                t.loginType = 1;
                break;
            case "CommonPCLoginTypeMacClient":
            case 2:
                t.loginType = 2;
                break;
            case "CommonPCLoginTypeWebBrowser":
            case 3:
                t.loginType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.isWebOnline = !1,
            n.loginType = t.enums === String ? "CommonPCLoginTypeUndifined" : 0),
            null != e.isWebOnline && e.hasOwnProperty("isWebOnline") && (n.isWebOnline = e.isWebOnline),
            null != e.loginType && e.hasOwnProperty("loginType") && (n.loginType = t.enums === String ? s.CommonPCLoginType[e.loginType] : e.loginType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGetMyWebLoginStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGetMyWebLoginStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyGetMyWebLoginStatus ? e : new s.SocketBodyGetMyWebLoginStatus
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFriendRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.name = "",
        e.prototype.requestMessage = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.name && e.hasOwnProperty("name") && t.uint32(10).string(e.name),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && t.uint32(18).string(e.requestMessage),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFriendRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.name = e.string();
                    break;
                case 2:
                    r.requestMessage = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFriendRequest)
                return e;
            var t = new s.SocketBodyFriendRequest;
            return null != e.name && (t.name = String(e.name)),
            null != e.requestMessage && (t.requestMessage = String(e.requestMessage)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.name = "",
            n.requestMessage = ""),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.requestMessage && e.hasOwnProperty("requestMessage") && (n.requestMessage = e.requestMessage),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyAcceptFriendRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyAcceptFriendRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyAcceptFriendRequest)
                return e;
            var t = new s.SocketBodyAcceptFriendRequest;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFriendDelete = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFriendDelete;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFriendDelete)
                return e;
            var t = new s.SocketBodyFriendDelete;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFriendInfoUpdate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFriendInfoUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFriendInfoUpdate)
                return e;
            var t = new s.SocketBodyFriendInfoUpdate;
            return null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFollowServiceAccountChange = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.serviceAccountId = 0,
        e.prototype.followStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.serviceAccountId && e.hasOwnProperty("serviceAccountId") && t.uint32(8).uint32(e.serviceAccountId),
            null != e.followStatus && e.hasOwnProperty("followStatus") && t.uint32(16).bool(e.followStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFollowServiceAccountChange;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.serviceAccountId = e.uint32();
                    break;
                case 2:
                    r.followStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFollowServiceAccountChange)
                return e;
            var t = new s.SocketBodyFollowServiceAccountChange;
            return null != e.serviceAccountId && (t.serviceAccountId = e.serviceAccountId >>> 0),
            null != e.followStatus && (t.followStatus = Boolean(e.followStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.serviceAccountId = 0,
            n.followStatus = !1),
            null != e.serviceAccountId && e.hasOwnProperty("serviceAccountId") && (n.serviceAccountId = e.serviceAccountId),
            null != e.followStatus && e.hasOwnProperty("followStatus") && (n.followStatus = e.followStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyUserOnlineStatusNotification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.onlineStatus = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.onlineStatus && e.hasOwnProperty("onlineStatus") && s.CommonUserOnlineStatus.encode(e.onlineStatus, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyUserOnlineStatusNotification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.onlineStatus = s.CommonUserOnlineStatus.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyUserOnlineStatusNotification)
                return e;
            var t = new s.SocketBodyUserOnlineStatusNotification;
            if (null != e.onlineStatus) {
                if ("object" !== typeof e.onlineStatus)
                    throw TypeError(".SocketBodyUserOnlineStatusNotification.onlineStatus: object expected");
                t.onlineStatus = s.CommonUserOnlineStatus.fromObject(e.onlineStatus)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.onlineStatus = null),
            null != e.onlineStatus && e.hasOwnProperty("onlineStatus") && (n.onlineStatus = s.CommonUserOnlineStatus.toObject(e.onlineStatus, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyContactsSettingsChange = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.contactSettingsVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.contactSettingsVersion && e.hasOwnProperty("contactSettingsVersion") && t.uint32(8).uint64(e.contactSettingsVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyContactsSettingsChange;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.contactSettingsVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyContactsSettingsChange)
                return e;
            var t = new s.SocketBodyContactsSettingsChange;
            return null != e.contactSettingsVersion && (a.Long ? (t.contactSettingsVersion = a.Long.fromValue(e.contactSettingsVersion)).unsigned = !0 : "string" === typeof e.contactSettingsVersion ? t.contactSettingsVersion = parseInt(e.contactSettingsVersion, 10) : "number" === typeof e.contactSettingsVersion ? t.contactSettingsVersion = e.contactSettingsVersion : "object" === typeof e.contactSettingsVersion && (t.contactSettingsVersion = new a.LongBits(e.contactSettingsVersion.low >>> 0,e.contactSettingsVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.contactSettingsVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.contactSettingsVersion = t.longs === String ? "0" : 0;
            return null != e.contactSettingsVersion && e.hasOwnProperty("contactSettingsVersion") && ("number" === typeof e.contactSettingsVersion ? n.contactSettingsVersion = t.longs === String ? String(e.contactSettingsVersion) : e.contactSettingsVersion : n.contactSettingsVersion = t.longs === String ? a.Long.prototype.toString.call(e.contactSettingsVersion) : t.longs === Number ? new a.LongBits(e.contactSettingsVersion.low >>> 0,e.contactSettingsVersion.high >>> 0).toNumber(!0) : e.contactSettingsVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyContactSetPrivateCountDown = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.privateCountDown = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && t.uint32(8).uint32(e.privateCountDown),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyContactSetPrivateCountDown;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.privateCountDown = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyContactSetPrivateCountDown)
                return e;
            var t = new s.SocketBodyContactSetPrivateCountDown;
            return null != e.privateCountDown && (t.privateCountDown = e.privateCountDown >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.privateCountDown = 0),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && (n.privateCountDown = e.privateCountDown),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyContactUseScreenshot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyContactUseScreenshot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyContactUseScreenshot ? e : new s.SocketBodyContactUseScreenshot
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyContactMessageDestroy = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyContactMessageDestroy;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyContactMessageDestroy ? e : new s.SocketBodyContactMessageDestroy
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupMember = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupMember;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupMember)
                return e;
            var t = new s.SocketBodyGroupMember;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.name = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupJoin = function() {
        function e(e) {
            if (this.members = [],
            this.groupMembers = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.groupJoinType = 0,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupNotice = "",
        e.prototype.groupMembers = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            if (null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && t.uint32(16).int32(e.groupJoinType),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(24).uint64(e.memberVersion),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && t.uint32(34).string(e.groupNotice),
            null != e.groupMembers && e.groupMembers.length)
                for (n = 0; n < e.groupMembers.length; ++n)
                    s.HttpGroupMember.encode(e.groupMembers[n], t.uint32(42).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupJoin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.groupJoinType = e.int32();
                    break;
                case 3:
                    r.memberVersion = e.uint64();
                    break;
                case 4:
                    r.groupNotice = e.string();
                    break;
                case 5:
                    r.groupMembers && r.groupMembers.length || (r.groupMembers = []),
                    r.groupMembers.push(s.HttpGroupMember.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupJoin)
                return e;
            var t = new s.SocketBodyGroupJoin;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupJoin.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupJoin.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            switch (e.groupJoinType) {
            case "CommonGroupJoinTypeUndefined":
            case 0:
                t.groupJoinType = 0;
                break;
            case "CommonGroupJoinTypeByInvitation":
            case 1:
                t.groupJoinType = 1;
                break;
            case "CommonGroupJoinTypeByQRCode":
            case 2:
                t.groupJoinType = 2;
                break;
            case "CommonGroupJoinTypeByWechatShareUrl":
            case 3:
                t.groupJoinType = 3;
                break
            }
            if (null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            null != e.groupNotice && (t.groupNotice = String(e.groupNotice)),
            e.groupMembers) {
                if (!Array.isArray(e.groupMembers))
                    throw TypeError(".SocketBodyGroupJoin.groupMembers: array expected");
                t.groupMembers = [];
                for (n = 0; n < e.groupMembers.length; ++n) {
                    if ("object" !== typeof e.groupMembers[n])
                        throw TypeError(".SocketBodyGroupJoin.groupMembers: object expected");
                    t.groupMembers[n] = s.HttpGroupMember.fromObject(e.groupMembers[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = [],
            n.groupMembers = []),
            t.defaults) {
                if (n.groupJoinType = t.enums === String ? "CommonGroupJoinTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
                n.groupNotice = ""
            }
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            if (null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && (n.groupJoinType = t.enums === String ? s.CommonGroupJoinType[e.groupJoinType] : e.groupJoinType),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && (n.groupNotice = e.groupNotice),
            e.groupMembers && e.groupMembers.length) {
                n.groupMembers = [];
                for (o = 0; o < e.groupMembers.length; ++o)
                    n.groupMembers[o] = s.HttpGroupMember.toObject(e.groupMembers[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupLeave = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.prototype.member = null,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(24).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupLeave;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupLeave)
                return e;
            var t = new s.SocketBodyGroupLeave;
            if (null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupLeave.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.groupId = 0,
                n.member = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            return null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupDissolve = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupDissolve;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupDissolve)
                return e;
            var t = new s.SocketBodyGroupDissolve;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupDeleteMembers = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.member = null,
        e.prototype.dissolve = !1,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.dissolve && e.hasOwnProperty("dissolve") && t.uint32(24).bool(e.dissolve),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(32).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupDeleteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.dissolve = e.bool();
                    break;
                case 4:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupDeleteMembers)
                return e;
            var t = new s.SocketBodyGroupDeleteMembers;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupDeleteMembers.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupDeleteMembers.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupDeleteMembers.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.dissolve && (t.dissolve = Boolean(e.dissolve)),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (n.member = null,
                n.dissolve = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.dissolve && e.hasOwnProperty("dissolve") && (n.dissolve = e.dissolve),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupAdminDeleteMembers = function() {
        function e(e) {
            if (this.members = [],
            this.admins = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.member = null,
        e.prototype.admins = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            if (null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.admins && e.admins.length)
                for (n = 0; n < e.admins.length; ++n)
                    s.SocketBodyGroupMember.encode(e.admins[n], t.uint32(26).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupAdminDeleteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.admins && r.admins.length || (r.admins = []),
                    r.admins.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupAdminDeleteMembers)
                return e;
            var t = new s.SocketBodyGroupAdminDeleteMembers;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupAdminDeleteMembers.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupAdminDeleteMembers.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupAdminDeleteMembers.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            if (e.admins) {
                if (!Array.isArray(e.admins))
                    throw TypeError(".SocketBodyGroupAdminDeleteMembers.admins: array expected");
                t.admins = [];
                for (n = 0; n < e.admins.length; ++n) {
                    if ("object" !== typeof e.admins[n])
                        throw TypeError(".SocketBodyGroupAdminDeleteMembers.admins: object expected");
                    t.admins[n] = s.SocketBodyGroupMember.fromObject(e.admins[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = [],
            n.admins = []),
            t.defaults && (n.member = null),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.SocketBodyGroupMember.toObject(e.members[r], t)
            }
            if (null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            e.admins && e.admins.length) {
                n.admins = [];
                for (r = 0; r < e.admins.length; ++r)
                    n.admins[r] = s.SocketBodyGroupMember.toObject(e.admins[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupRobotAdd = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robot = null,
        e.prototype.member = null,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robot && e.hasOwnProperty("robot") && s.SocketBodyGroupMember.encode(e.robot, t.uint32(10).fork()).ldelim(),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(24).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupRobotAdd;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robot = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupRobotAdd)
                return e;
            var t = new s.SocketBodyGroupRobotAdd;
            if (null != e.robot) {
                if ("object" !== typeof e.robot)
                    throw TypeError(".SocketBodyGroupRobotAdd.robot: object expected");
                t.robot = s.SocketBodyGroupMember.fromObject(e.robot)
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupRobotAdd.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.robot = null,
                n.member = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            return null != e.robot && e.hasOwnProperty("robot") && (n.robot = s.SocketBodyGroupMember.toObject(e.robot, t)),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupRobotDelete = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robot = null,
        e.prototype.member = null,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robot && e.hasOwnProperty("robot") && s.SocketBodyGroupMember.encode(e.robot, t.uint32(10).fork()).ldelim(),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(24).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupRobotDelete;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robot = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupRobotDelete)
                return e;
            var t = new s.SocketBodyGroupRobotDelete;
            if (null != e.robot) {
                if ("object" !== typeof e.robot)
                    throw TypeError(".SocketBodyGroupRobotDelete.robot: object expected");
                t.robot = s.SocketBodyGroupMember.fromObject(e.robot)
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupRobotDelete.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.robot = null,
                n.member = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            return null != e.robot && e.hasOwnProperty("robot") && (n.robot = s.SocketBodyGroupMember.toObject(e.robot, t)),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupRobotName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robot = null,
        e.prototype.member = null,
        e.prototype.oldName = "",
        e.prototype.newName = "",
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robot && e.hasOwnProperty("robot") && s.SocketBodyGroupMember.encode(e.robot, t.uint32(10).fork()).ldelim(),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.oldName && e.hasOwnProperty("oldName") && t.uint32(26).string(e.oldName),
            null != e.newName && e.hasOwnProperty("newName") && t.uint32(34).string(e.newName),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(40).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupRobotName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robot = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.oldName = e.string();
                    break;
                case 4:
                    r.newName = e.string();
                    break;
                case 5:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupRobotName)
                return e;
            var t = new s.SocketBodySetGroupRobotName;
            if (null != e.robot) {
                if ("object" !== typeof e.robot)
                    throw TypeError(".SocketBodySetGroupRobotName.robot: object expected");
                t.robot = s.SocketBodyGroupMember.fromObject(e.robot)
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodySetGroupRobotName.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.oldName && (t.oldName = String(e.oldName)),
            null != e.newName && (t.newName = String(e.newName)),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.robot = null,
                n.member = null,
                n.oldName = "",
                n.newName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            return null != e.robot && e.hasOwnProperty("robot") && (n.robot = s.SocketBodyGroupMember.toObject(e.robot, t)),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.oldName && e.hasOwnProperty("oldName") && (n.oldName = e.oldName),
            null != e.newName && e.hasOwnProperty("newName") && (n.newName = e.newName),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupRobotAvatar = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robot = null,
        e.prototype.member = null,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robot && e.hasOwnProperty("robot") && s.SocketBodyGroupMember.encode(e.robot, t.uint32(10).fork()).ldelim(),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(24).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupRobotAvatar;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robot = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupRobotAvatar)
                return e;
            var t = new s.SocketBodySetGroupRobotAvatar;
            if (null != e.robot) {
                if ("object" !== typeof e.robot)
                    throw TypeError(".SocketBodySetGroupRobotAvatar.robot: object expected");
                t.robot = s.SocketBodyGroupMember.fromObject(e.robot)
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodySetGroupRobotAvatar.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.robot = null,
                n.member = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            return null != e.robot && e.hasOwnProperty("robot") && (n.robot = s.SocketBodyGroupMember.toObject(e.robot, t)),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupRobotSendMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.robot = null,
        e.prototype.member = null,
        e.prototype.sendMessage = !1,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.robot && e.hasOwnProperty("robot") && s.SocketBodyGroupMember.encode(e.robot, t.uint32(10).fork()).ldelim(),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && t.uint32(24).bool(e.sendMessage),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(32).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupRobotSendMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.robot = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.sendMessage = e.bool();
                    break;
                case 4:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupRobotSendMessage)
                return e;
            var t = new s.SocketBodySetGroupRobotSendMessage;
            if (null != e.robot) {
                if ("object" !== typeof e.robot)
                    throw TypeError(".SocketBodySetGroupRobotSendMessage.robot: object expected");
                t.robot = s.SocketBodyGroupMember.fromObject(e.robot)
            }
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodySetGroupRobotSendMessage.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.sendMessage && (t.sendMessage = Boolean(e.sendMessage)),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.robot = null,
                n.member = null,
                n.sendMessage = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            return null != e.robot && e.hasOwnProperty("robot") && (n.robot = s.SocketBodyGroupMember.toObject(e.robot, t)),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.sendMessage && e.hasOwnProperty("sendMessage") && (n.sendMessage = e.sendMessage),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSetGroupName = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.oldGroupName = "",
        e.prototype.newGroupName = "",
        e.prototype.member = null,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.oldGroupName && e.hasOwnProperty("oldGroupName") && t.uint32(10).string(e.oldGroupName),
            null != e.newGroupName && e.hasOwnProperty("newGroupName") && t.uint32(18).string(e.newGroupName),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(26).fork()).ldelim(),
            null != e.version && e.hasOwnProperty("version") && t.uint32(32).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSetGroupName;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.oldGroupName = e.string();
                    break;
                case 2:
                    r.newGroupName = e.string();
                    break;
                case 3:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 4:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSetGroupName)
                return e;
            var t = new s.SocketBodyGroupSetGroupName;
            if (null != e.oldGroupName && (t.oldGroupName = String(e.oldGroupName)),
            null != e.newGroupName && (t.newGroupName = String(e.newGroupName)),
            null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupSetGroupName.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.oldGroupName = "",
                n.newGroupName = "",
                n.member = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.oldGroupName && e.hasOwnProperty("oldGroupName") && (n.oldGroupName = e.oldGroupName),
            null != e.newGroupName && e.hasOwnProperty("newGroupName") && (n.newGroupName = e.newGroupName),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSetPrivateCountDown = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.privateCountDown = 0,
        e.prototype.member = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && t.uint32(8).uint32(e.privateCountDown),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSetPrivateCountDown;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.privateCountDown = e.uint32();
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSetPrivateCountDown)
                return e;
            var t = new s.SocketBodyGroupSetPrivateCountDown;
            if (null != e.privateCountDown && (t.privateCountDown = e.privateCountDown >>> 0),
            null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupSetPrivateCountDown.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.privateCountDown = 0,
            n.member = null),
            null != e.privateCountDown && e.hasOwnProperty("privateCountDown") && (n.privateCountDown = e.privateCountDown),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupUseScreenshot = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.member = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupUseScreenshot;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupUseScreenshot)
                return e;
            var t = new s.SocketBodyGroupUseScreenshot;
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupUseScreenshot.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.member = null),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupMessageDestroy = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.member = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupMessageDestroy;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupMessageDestroy)
                return e;
            var t = new s.SocketBodyGroupMessageDestroy;
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupMessageDestroy.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.member = null),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSetMemberAlias = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.oldMemberAlias = "",
        e.prototype.newMemberAlias = "",
        e.prototype.myVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.oldMemberAlias && e.hasOwnProperty("oldMemberAlias") && t.uint32(10).string(e.oldMemberAlias),
            null != e.newMemberAlias && e.hasOwnProperty("newMemberAlias") && t.uint32(18).string(e.newMemberAlias),
            null != e.myVersion && e.hasOwnProperty("myVersion") && t.uint32(24).uint64(e.myVersion),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(32).uint64(e.memberVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSetMemberAlias;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.oldMemberAlias = e.string();
                    break;
                case 2:
                    r.newMemberAlias = e.string();
                    break;
                case 3:
                    r.myVersion = e.uint64();
                    break;
                case 4:
                    r.memberVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSetMemberAlias)
                return e;
            var t = new s.SocketBodyGroupSetMemberAlias;
            return null != e.oldMemberAlias && (t.oldMemberAlias = String(e.oldMemberAlias)),
            null != e.newMemberAlias && (t.newMemberAlias = String(e.newMemberAlias)),
            null != e.myVersion && (a.Long ? (t.myVersion = a.Long.fromValue(e.myVersion)).unsigned = !0 : "string" === typeof e.myVersion ? t.myVersion = parseInt(e.myVersion, 10) : "number" === typeof e.myVersion ? t.myVersion = e.myVersion : "object" === typeof e.myVersion && (t.myVersion = new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0))),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.oldMemberAlias = "",
                n.newMemberAlias = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.myVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.myVersion = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0
            }
            return null != e.oldMemberAlias && e.hasOwnProperty("oldMemberAlias") && (n.oldMemberAlias = e.oldMemberAlias),
            null != e.newMemberAlias && e.hasOwnProperty("newMemberAlias") && (n.newMemberAlias = e.newMemberAlias),
            null != e.myVersion && e.hasOwnProperty("myVersion") && ("number" === typeof e.myVersion ? n.myVersion = t.longs === String ? String(e.myVersion) : e.myVersion : n.myVersion = t.longs === String ? a.Long.prototype.toString.call(e.myVersion) : t.longs === Number ? new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0) : e.myVersion),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupAvatarChange = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.avatarUrl = "",
        e.prototype.avatarVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && t.uint32(10).string(e.avatarUrl),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && t.uint32(16).uint64(e.avatarVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupAvatarChange;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.avatarUrl = e.string();
                    break;
                case 2:
                    r.avatarVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupAvatarChange)
                return e;
            var t = new s.SocketBodyGroupAvatarChange;
            return null != e.avatarUrl && (t.avatarUrl = String(e.avatarUrl)),
            null != e.avatarVersion && (a.Long ? (t.avatarVersion = a.Long.fromValue(e.avatarVersion)).unsigned = !0 : "string" === typeof e.avatarVersion ? t.avatarVersion = parseInt(e.avatarVersion, 10) : "number" === typeof e.avatarVersion ? t.avatarVersion = e.avatarVersion : "object" === typeof e.avatarVersion && (t.avatarVersion = new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.avatarUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.avatarVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.avatarVersion = t.longs === String ? "0" : 0;
            return null != e.avatarUrl && e.hasOwnProperty("avatarUrl") && (n.avatarUrl = e.avatarUrl),
            null != e.avatarVersion && e.hasOwnProperty("avatarVersion") && ("number" === typeof e.avatarVersion ? n.avatarVersion = t.longs === String ? String(e.avatarVersion) : e.avatarVersion : n.avatarVersion = t.longs === String ? a.Long.prototype.toString.call(e.avatarVersion) : t.longs === Number ? new a.LongBits(e.avatarVersion.low >>> 0,e.avatarVersion.high >>> 0).toNumber(!0) : e.avatarVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSetOwner = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.oldOwner = null,
        e.prototype.newOwner = null,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.oldOwner && e.hasOwnProperty("oldOwner") && s.SocketBodyGroupMember.encode(e.oldOwner, t.uint32(10).fork()).ldelim(),
            null != e.newOwner && e.hasOwnProperty("newOwner") && s.SocketBodyGroupMember.encode(e.newOwner, t.uint32(18).fork()).ldelim(),
            null != e.version && e.hasOwnProperty("version") && t.uint32(24).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSetOwner;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.oldOwner = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.newOwner = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSetOwner)
                return e;
            var t = new s.SocketBodyGroupSetOwner;
            if (null != e.oldOwner) {
                if ("object" !== typeof e.oldOwner)
                    throw TypeError(".SocketBodyGroupSetOwner.oldOwner: object expected");
                t.oldOwner = s.SocketBodyGroupMember.fromObject(e.oldOwner)
            }
            if (null != e.newOwner) {
                if ("object" !== typeof e.newOwner)
                    throw TypeError(".SocketBodyGroupSetOwner.newOwner: object expected");
                t.newOwner = s.SocketBodyGroupMember.fromObject(e.newOwner)
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.oldOwner = null,
                n.newOwner = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.oldOwner && e.hasOwnProperty("oldOwner") && (n.oldOwner = s.SocketBodyGroupMember.toObject(e.oldOwner, t)),
            null != e.newOwner && e.hasOwnProperty("newOwner") && (n.newOwner = s.SocketBodyGroupMember.toObject(e.newOwner, t)),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupRobotAddPermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.canAllAddRobot = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.canAllAddRobot && e.hasOwnProperty("canAllAddRobot") && t.uint32(8).bool(e.canAllAddRobot),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupRobotAddPermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.canAllAddRobot = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupRobotAddPermission)
                return e;
            var t = new s.SocketBodySetGroupRobotAddPermission;
            return null != e.canAllAddRobot && (t.canAllAddRobot = Boolean(e.canAllAddRobot)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.canAllAddRobot = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.canAllAddRobot && e.hasOwnProperty("canAllAddRobot") && (n.canAllAddRobot = e.canAllAddRobot),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupBindTablePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.canAllBindTable = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.canAllBindTable && e.hasOwnProperty("canAllBindTable") && t.uint32(8).bool(e.canAllBindTable),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupBindTablePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.canAllBindTable = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupBindTablePermission)
                return e;
            var t = new s.SocketBodySetGroupBindTablePermission;
            return null != e.canAllBindTable && (t.canAllBindTable = Boolean(e.canAllBindTable)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.canAllBindTable = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.canAllBindTable && e.hasOwnProperty("canAllBindTable") && (n.canAllBindTable = e.canAllBindTable),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupSendRemindMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.canAllSendRemindMessage = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.canAllSendRemindMessage && e.hasOwnProperty("canAllSendRemindMessage") && t.uint32(8).bool(e.canAllSendRemindMessage),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupSendRemindMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.canAllSendRemindMessage = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupSendRemindMessage)
                return e;
            var t = new s.SocketBodySetGroupSendRemindMessage;
            return null != e.canAllSendRemindMessage && (t.canAllSendRemindMessage = Boolean(e.canAllSendRemindMessage)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.canAllSendRemindMessage = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.canAllSendRemindMessage && e.hasOwnProperty("canAllSendRemindMessage") && (n.canAllSendRemindMessage = e.canAllSendRemindMessage),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySetGroupPrivacyProtect = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.privacyProtect = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.privacyProtect && e.hasOwnProperty("privacyProtect") && t.uint32(8).bool(e.privacyProtect),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySetGroupPrivacyProtect;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.privacyProtect = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySetGroupPrivacyProtect)
                return e;
            var t = new s.SocketBodySetGroupPrivacyProtect;
            return null != e.privacyProtect && (t.privacyProtect = Boolean(e.privacyProtect)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.privacyProtect = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.privacyProtect && e.hasOwnProperty("privacyProtect") && (n.privacyProtect = e.privacyProtect),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupModifyPersonalInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.myVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.myVersion && e.hasOwnProperty("myVersion") && t.uint32(8).uint64(e.myVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupModifyPersonalInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.myVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupModifyPersonalInfo)
                return e;
            var t = new s.SocketBodyGroupModifyPersonalInfo;
            return null != e.myVersion && (a.Long ? (t.myVersion = a.Long.fromValue(e.myVersion)).unsigned = !0 : "string" === typeof e.myVersion ? t.myVersion = parseInt(e.myVersion, 10) : "number" === typeof e.myVersion ? t.myVersion = e.myVersion : "object" === typeof e.myVersion && (t.myVersion = new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.myVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.myVersion = t.longs === String ? "0" : 0;
            return null != e.myVersion && e.hasOwnProperty("myVersion") && ("number" === typeof e.myVersion ? n.myVersion = t.longs === String ? String(e.myVersion) : e.myVersion : n.myVersion = t.longs === String ? a.Long.prototype.toString.call(e.myVersion) : t.longs === Number ? new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0) : e.myVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupInfoModify = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.updateQRCode = !1,
        e.prototype.groupInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint64(e.version),
            null != e.updateQRCode && e.hasOwnProperty("updateQRCode") && t.uint32(16).bool(e.updateQRCode),
            null != e.groupInfo && e.hasOwnProperty("groupInfo") && s.HttpGroup.encode(e.groupInfo, t.uint32(26).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupInfoModify;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint64();
                    break;
                case 2:
                    r.updateQRCode = e.bool();
                    break;
                case 3:
                    r.groupInfo = s.HttpGroup.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupInfoModify)
                return e;
            var t = new s.SocketBodyGroupInfoModify;
            if (null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.updateQRCode && (t.updateQRCode = Boolean(e.updateQRCode)),
            null != e.groupInfo) {
                if ("object" !== typeof e.groupInfo)
                    throw TypeError(".SocketBodyGroupInfoModify.groupInfo: object expected");
                t.groupInfo = s.HttpGroup.fromObject(e.groupInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                n.updateQRCode = !1,
                n.groupInfo = null
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.updateQRCode && e.hasOwnProperty("updateQRCode") && (n.updateQRCode = e.updateQRCode),
            null != e.groupInfo && e.hasOwnProperty("groupInfo") && (n.groupInfo = s.HttpGroup.toObject(e.groupInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupMemberModify = function() {
        function e(e) {
            if (this.groupMembers = [],
            this.groupCompanyInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupMembers = a.emptyArray,
        e.prototype.groupCompanyInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(8).uint64(e.memberVersion),
            null != e.groupMembers && e.groupMembers.length)
                for (var n = 0; n < e.groupMembers.length; ++n)
                    s.HttpGroupMember.encode(e.groupMembers[n], t.uint32(18).fork()).ldelim();
            if (null != e.groupCompanyInfos && e.groupCompanyInfos.length)
                for (n = 0; n < e.groupCompanyInfos.length; ++n)
                    s.HttpGroupCompanyInfo.encode(e.groupCompanyInfos[n], t.uint32(26).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupMemberModify;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.memberVersion = e.uint64();
                    break;
                case 2:
                    r.groupMembers && r.groupMembers.length || (r.groupMembers = []),
                    r.groupMembers.push(s.HttpGroupMember.decode(e, e.uint32()));
                    break;
                case 3:
                    r.groupCompanyInfos && r.groupCompanyInfos.length || (r.groupCompanyInfos = []),
                    r.groupCompanyInfos.push(s.HttpGroupCompanyInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupMemberModify)
                return e;
            var t = new s.SocketBodyGroupMemberModify;
            if (null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            e.groupMembers) {
                if (!Array.isArray(e.groupMembers))
                    throw TypeError(".SocketBodyGroupMemberModify.groupMembers: array expected");
                t.groupMembers = [];
                for (var n = 0; n < e.groupMembers.length; ++n) {
                    if ("object" !== typeof e.groupMembers[n])
                        throw TypeError(".SocketBodyGroupMemberModify.groupMembers: object expected");
                    t.groupMembers[n] = s.HttpGroupMember.fromObject(e.groupMembers[n])
                }
            }
            if (e.groupCompanyInfos) {
                if (!Array.isArray(e.groupCompanyInfos))
                    throw TypeError(".SocketBodyGroupMemberModify.groupCompanyInfos: array expected");
                t.groupCompanyInfos = [];
                for (n = 0; n < e.groupCompanyInfos.length; ++n) {
                    if ("object" !== typeof e.groupCompanyInfos[n])
                        throw TypeError(".SocketBodyGroupMemberModify.groupCompanyInfos: object expected");
                    t.groupCompanyInfos[n] = s.HttpGroupCompanyInfo.fromObject(e.groupCompanyInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.groupMembers = [],
            n.groupCompanyInfos = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
            if (null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            e.groupMembers && e.groupMembers.length) {
                n.groupMembers = [];
                for (var o = 0; o < e.groupMembers.length; ++o)
                    n.groupMembers[o] = s.HttpGroupMember.toObject(e.groupMembers[o], t)
            }
            if (e.groupCompanyInfos && e.groupCompanyInfos.length) {
                n.groupCompanyInfos = [];
                for (o = 0; o < e.groupCompanyInfos.length; ++o)
                    n.groupCompanyInfos[o] = s.HttpGroupCompanyInfo.toObject(e.groupCompanyInfos[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupInviteMembers = function() {
        function e(e) {
            if (this.members = [],
            this.groupMembers = [],
            this.groupCompanyInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.inviter = null,
        e.prototype.isCreate = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.memberVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupNotice = "",
        e.prototype.groupMembers = a.emptyArray,
        e.prototype.groupCompanyInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            if (null != e.inviter && e.hasOwnProperty("inviter") && s.SocketBodyGroupMember.encode(e.inviter, t.uint32(18).fork()).ldelim(),
            null != e.isCreate && e.hasOwnProperty("isCreate") && t.uint32(24).bool(e.isCreate),
            null != e.version && e.hasOwnProperty("version") && t.uint32(32).uint64(e.version),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && t.uint32(40).uint64(e.memberVersion),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && t.uint32(50).string(e.groupNotice),
            null != e.groupMembers && e.groupMembers.length)
                for (n = 0; n < e.groupMembers.length; ++n)
                    s.HttpGroupMember.encode(e.groupMembers[n], t.uint32(58).fork()).ldelim();
            if (null != e.groupCompanyInfos && e.groupCompanyInfos.length)
                for (n = 0; n < e.groupCompanyInfos.length; ++n)
                    s.HttpGroupCompanyInfo.encode(e.groupCompanyInfos[n], t.uint32(66).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupInviteMembers;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.inviter = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.isCreate = e.bool();
                    break;
                case 4:
                    r.version = e.uint64();
                    break;
                case 5:
                    r.memberVersion = e.uint64();
                    break;
                case 6:
                    r.groupNotice = e.string();
                    break;
                case 7:
                    r.groupMembers && r.groupMembers.length || (r.groupMembers = []),
                    r.groupMembers.push(s.HttpGroupMember.decode(e, e.uint32()));
                    break;
                case 8:
                    r.groupCompanyInfos && r.groupCompanyInfos.length || (r.groupCompanyInfos = []),
                    r.groupCompanyInfos.push(s.HttpGroupCompanyInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupInviteMembers)
                return e;
            var t = new s.SocketBodyGroupInviteMembers;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupInviteMembers.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupInviteMembers.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            if (null != e.inviter) {
                if ("object" !== typeof e.inviter)
                    throw TypeError(".SocketBodyGroupInviteMembers.inviter: object expected");
                t.inviter = s.SocketBodyGroupMember.fromObject(e.inviter)
            }
            if (null != e.isCreate && (t.isCreate = Boolean(e.isCreate)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.memberVersion && (a.Long ? (t.memberVersion = a.Long.fromValue(e.memberVersion)).unsigned = !0 : "string" === typeof e.memberVersion ? t.memberVersion = parseInt(e.memberVersion, 10) : "number" === typeof e.memberVersion ? t.memberVersion = e.memberVersion : "object" === typeof e.memberVersion && (t.memberVersion = new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0))),
            null != e.groupNotice && (t.groupNotice = String(e.groupNotice)),
            e.groupMembers) {
                if (!Array.isArray(e.groupMembers))
                    throw TypeError(".SocketBodyGroupInviteMembers.groupMembers: array expected");
                t.groupMembers = [];
                for (n = 0; n < e.groupMembers.length; ++n) {
                    if ("object" !== typeof e.groupMembers[n])
                        throw TypeError(".SocketBodyGroupInviteMembers.groupMembers: object expected");
                    t.groupMembers[n] = s.HttpGroupMember.fromObject(e.groupMembers[n])
                }
            }
            if (e.groupCompanyInfos) {
                if (!Array.isArray(e.groupCompanyInfos))
                    throw TypeError(".SocketBodyGroupInviteMembers.groupCompanyInfos: array expected");
                t.groupCompanyInfos = [];
                for (n = 0; n < e.groupCompanyInfos.length; ++n) {
                    if ("object" !== typeof e.groupCompanyInfos[n])
                        throw TypeError(".SocketBodyGroupInviteMembers.groupCompanyInfos: object expected");
                    t.groupCompanyInfos[n] = s.HttpGroupCompanyInfo.fromObject(e.groupCompanyInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = [],
            n.groupMembers = [],
            n.groupCompanyInfos = []),
            t.defaults) {
                if (n.inviter = null,
                n.isCreate = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.memberVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.memberVersion = t.longs === String ? "0" : 0;
                n.groupNotice = ""
            }
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            if (null != e.inviter && e.hasOwnProperty("inviter") && (n.inviter = s.SocketBodyGroupMember.toObject(e.inviter, t)),
            null != e.isCreate && e.hasOwnProperty("isCreate") && (n.isCreate = e.isCreate),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.memberVersion && e.hasOwnProperty("memberVersion") && ("number" === typeof e.memberVersion ? n.memberVersion = t.longs === String ? String(e.memberVersion) : e.memberVersion : n.memberVersion = t.longs === String ? a.Long.prototype.toString.call(e.memberVersion) : t.longs === Number ? new a.LongBits(e.memberVersion.low >>> 0,e.memberVersion.high >>> 0).toNumber(!0) : e.memberVersion),
            null != e.groupNotice && e.hasOwnProperty("groupNotice") && (n.groupNotice = e.groupNotice),
            e.groupMembers && e.groupMembers.length) {
                n.groupMembers = [];
                for (o = 0; o < e.groupMembers.length; ++o)
                    n.groupMembers[o] = s.HttpGroupMember.toObject(e.groupMembers[o], t)
            }
            if (e.groupCompanyInfos && e.groupCompanyInfos.length) {
                n.groupCompanyInfos = [];
                for (o = 0; o < e.groupCompanyInfos.length; ++o)
                    n.groupCompanyInfos[o] = s.HttpGroupCompanyInfo.toObject(e.groupCompanyInfos[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCreate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupType && e.hasOwnProperty("groupType") && t.uint32(8).int32(e.groupType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCreate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCreate)
                return e;
            var t = new s.SocketBodyGroupCreate;
            switch (e.groupType) {
            case "CommonGroupTypeUndefined":
            case 0:
                t.groupType = 0;
                break;
            case "CommonGroupTypeGeneral":
            case 1:
                t.groupType = 1;
                break;
            case "CommonGroupTypeCompany":
            case 2:
                t.groupType = 2;
                break;
            case "CommonGroupTypeDepartment":
            case 3:
                t.groupType = 3;
                break;
            case "CommonGroupTypeLive":
            case 4:
                t.groupType = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupType = t.enums === String ? "CommonGroupTypeUndefined" : 0),
            null != e.groupType && e.hasOwnProperty("groupType") && (n.groupType = t.enums === String ? s.CommonGroupType[e.groupType] : e.groupType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupInviteMembersFail = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.inviter = null,
        e.prototype.groupJoinType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.inviter && e.hasOwnProperty("inviter") && s.SocketBodyGroupMember.encode(e.inviter, t.uint32(18).fork()).ldelim(),
            null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && t.uint32(24).int32(e.groupJoinType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupInviteMembersFail;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.inviter = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.groupJoinType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupInviteMembersFail)
                return e;
            var t = new s.SocketBodyGroupInviteMembersFail;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupInviteMembersFail.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupInviteMembersFail.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            if (null != e.inviter) {
                if ("object" !== typeof e.inviter)
                    throw TypeError(".SocketBodyGroupInviteMembersFail.inviter: object expected");
                t.inviter = s.SocketBodyGroupMember.fromObject(e.inviter)
            }
            switch (e.groupJoinType) {
            case "CommonGroupJoinTypeUndefined":
            case 0:
                t.groupJoinType = 0;
                break;
            case "CommonGroupJoinTypeByInvitation":
            case 1:
                t.groupJoinType = 1;
                break;
            case "CommonGroupJoinTypeByQRCode":
            case 2:
                t.groupJoinType = 2;
                break;
            case "CommonGroupJoinTypeByWechatShareUrl":
            case 3:
                t.groupJoinType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults && (n.inviter = null,
            n.groupJoinType = t.enums === String ? "CommonGroupJoinTypeUndefined" : 0),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.SocketBodyGroupMember.toObject(e.members[r], t)
            }
            return null != e.inviter && e.hasOwnProperty("inviter") && (n.inviter = s.SocketBodyGroupMember.toObject(e.inviter, t)),
            null != e.groupJoinType && e.hasOwnProperty("groupJoinType") && (n.groupJoinType = t.enums === String ? s.CommonGroupJoinType[e.groupJoinType] : e.groupJoinType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupInviteMemberNotFriend = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.member = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(10).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupInviteMemberNotFriend;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupInviteMemberNotFriend)
                return e;
            var t = new s.SocketBodyGroupInviteMemberNotFriend;
            if (null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyGroupInviteMemberNotFriend.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.member = null),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupInviteMemberNotJoined = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupInviteMemberNotJoined;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupInviteMemberNotJoined)
                return e;
            var t = new s.SocketBodyGroupInviteMemberNotJoined;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupInviteMemberNotJoined.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupInviteMemberNotJoined.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.SocketBodyGroupMember.toObject(e.members[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSetInviteVerification = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.inviteVerification = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.inviteVerification && e.hasOwnProperty("inviteVerification") && t.uint32(8).bool(e.inviteVerification),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSetInviteVerification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.inviteVerification = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSetInviteVerification)
                return e;
            var t = new s.SocketBodyGroupSetInviteVerification;
            return null != e.inviteVerification && (t.inviteVerification = Boolean(e.inviteVerification)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.inviteVerification = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.inviteVerification && e.hasOwnProperty("inviteVerification") && (n.inviteVerification = e.inviteVerification),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSendInviteVerification = function() {
        function e(e) {
            if (this.members = [],
            this.admins = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.owner = null,
        e.prototype.hasConfirmed = !1,
        e.prototype.members = a.emptyArray,
        e.prototype.inviter = null,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.hasReject = !1,
        e.prototype.admins = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.owner && e.hasOwnProperty("owner") && s.SocketBodyGroupMember.encode(e.owner, t.uint32(10).fork()).ldelim(),
            null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && t.uint32(16).bool(e.hasConfirmed),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(26).fork()).ldelim();
            if (null != e.inviter && e.hasOwnProperty("inviter") && s.SocketBodyGroupMember.encode(e.inviter, t.uint32(34).fork()).ldelim(),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(40).uint64(e.expiredTimestamp),
            null != e.hasReject && e.hasOwnProperty("hasReject") && t.uint32(48).bool(e.hasReject),
            null != e.admins && e.admins.length)
                for (n = 0; n < e.admins.length; ++n)
                    s.SocketBodyGroupMember.encode(e.admins[n], t.uint32(58).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSendInviteVerification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.owner = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.hasConfirmed = e.bool();
                    break;
                case 3:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 4:
                    r.inviter = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 5:
                    r.expiredTimestamp = e.uint64();
                    break;
                case 6:
                    r.hasReject = e.bool();
                    break;
                case 7:
                    r.admins && r.admins.length || (r.admins = []),
                    r.admins.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSendInviteVerification)
                return e;
            var t = new s.SocketBodyGroupSendInviteVerification;
            if (null != e.owner) {
                if ("object" !== typeof e.owner)
                    throw TypeError(".SocketBodyGroupSendInviteVerification.owner: object expected");
                t.owner = s.SocketBodyGroupMember.fromObject(e.owner)
            }
            if (null != e.hasConfirmed && (t.hasConfirmed = Boolean(e.hasConfirmed)),
            e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupSendInviteVerification.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupSendInviteVerification.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            if (null != e.inviter) {
                if ("object" !== typeof e.inviter)
                    throw TypeError(".SocketBodyGroupSendInviteVerification.inviter: object expected");
                t.inviter = s.SocketBodyGroupMember.fromObject(e.inviter)
            }
            if (null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            null != e.hasReject && (t.hasReject = Boolean(e.hasReject)),
            e.admins) {
                if (!Array.isArray(e.admins))
                    throw TypeError(".SocketBodyGroupSendInviteVerification.admins: array expected");
                t.admins = [];
                for (n = 0; n < e.admins.length; ++n) {
                    if ("object" !== typeof e.admins[n])
                        throw TypeError(".SocketBodyGroupSendInviteVerification.admins: object expected");
                    t.admins[n] = s.SocketBodyGroupMember.fromObject(e.admins[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = [],
            n.admins = []),
            t.defaults) {
                if (n.owner = null,
                n.hasConfirmed = !1,
                n.inviter = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
                n.hasReject = !1
            }
            if (null != e.owner && e.hasOwnProperty("owner") && (n.owner = s.SocketBodyGroupMember.toObject(e.owner, t)),
            null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && (n.hasConfirmed = e.hasConfirmed),
            e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            if (null != e.inviter && e.hasOwnProperty("inviter") && (n.inviter = s.SocketBodyGroupMember.toObject(e.inviter, t)),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            null != e.hasReject && e.hasOwnProperty("hasReject") && (n.hasReject = e.hasReject),
            e.admins && e.admins.length) {
                n.admins = [];
                for (o = 0; o < e.admins.length; ++o)
                    n.admins[o] = s.SocketBodyGroupMember.toObject(e.admins[o], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyTaskInfoUpdate = function() {
        function e(e) {
            if (this.taskIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.taskIds = a.emptyArray,
        e.prototype.taskConversationVersion = 0,
        e.prototype.actionType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.taskIds && e.taskIds.length) {
                t.uint32(10).fork();
                for (var n = 0; n < e.taskIds.length; ++n)
                    t.uint32(e.taskIds[n]);
                t.ldelim()
            }
            return null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && t.uint32(16).uint32(e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(24).int32(e.actionType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyTaskInfoUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    if (r.taskIds && r.taskIds.length || (r.taskIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.taskIds.push(e.uint32())
                    } else
                        r.taskIds.push(e.uint32());
                    break;
                case 2:
                    r.taskConversationVersion = e.uint32();
                    break;
                case 3:
                    r.actionType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyTaskInfoUpdate)
                return e;
            var t = new s.SocketBodyTaskInfoUpdate;
            if (e.taskIds) {
                if (!Array.isArray(e.taskIds))
                    throw TypeError(".SocketBodyTaskInfoUpdate.taskIds: array expected");
                t.taskIds = [];
                for (var n = 0; n < e.taskIds.length; ++n)
                    t.taskIds[n] = e.taskIds[n] >>> 0
            }
            switch (null != e.taskConversationVersion && (t.taskConversationVersion = e.taskConversationVersion >>> 0),
            e.actionType) {
            case "CommonTaskActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonTaskActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonTaskActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonTaskActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonTaskActionTypeMove":
            case 4:
                t.actionType = 4;
                break;
            case "CommonTaskActionTypeFinish":
            case 5:
                t.actionType = 5;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.taskIds = []),
            t.defaults && (n.taskConversationVersion = 0,
            n.actionType = t.enums === String ? "CommonTaskActionTypeAll" : 0),
            e.taskIds && e.taskIds.length) {
                n.taskIds = [];
                for (var r = 0; r < e.taskIds.length; ++r)
                    n.taskIds[r] = e.taskIds[r]
            }
            return null != e.taskConversationVersion && e.hasOwnProperty("taskConversationVersion") && (n.taskConversationVersion = e.taskConversationVersion),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonTaskActionType[e.actionType] : e.actionType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupAddAdmin = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupAddAdmin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupAddAdmin)
                return e;
            var t = new s.SocketBodyGroupAddAdmin;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupAddAdmin.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupAddAdmin.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupDeleteAdmin = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupDeleteAdmin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupDeleteAdmin)
                return e;
            var t = new s.SocketBodyGroupDeleteAdmin;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupDeleteAdmin.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupDeleteAdmin.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupAddBlackList = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupAddBlackList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupAddBlackList)
                return e;
            var t = new s.SocketBodyGroupAddBlackList;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupAddBlackList.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupAddBlackList.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupDeleteBlackList = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupDeleteBlackList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupDeleteBlackList)
                return e;
            var t = new s.SocketBodyGroupDeleteBlackList;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupDeleteBlackList.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupDeleteBlackList.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupAddWhiteList = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupAddWhiteList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupAddWhiteList)
                return e;
            var t = new s.SocketBodyGroupAddWhiteList;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupAddWhiteList.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupAddWhiteList.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupDeleteWhiteList = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.members = a.emptyArray,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(10).fork()).ldelim();
            return null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupDeleteWhiteList;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupDeleteWhiteList)
                return e;
            var t = new s.SocketBodyGroupDeleteWhiteList;
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupDeleteWhiteList.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupDeleteWhiteList.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults)
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            if (e.members && e.members.length) {
                n.members = [];
                for (var o = 0; o < e.members.length; ++o)
                    n.members[o] = s.SocketBodyGroupMember.toObject(e.members[o], t)
            }
            return null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupEveryoneSendMessagePermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.allowEveryoneSendMessage = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.groupInfo = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.allowEveryoneSendMessage && e.hasOwnProperty("allowEveryoneSendMessage") && t.uint32(8).bool(e.allowEveryoneSendMessage),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            null != e.groupInfo && e.hasOwnProperty("groupInfo") && s.HttpGroup.encode(e.groupInfo, t.uint32(26).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupEveryoneSendMessagePermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.allowEveryoneSendMessage = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                case 3:
                    r.groupInfo = s.HttpGroup.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupEveryoneSendMessagePermission)
                return e;
            var t = new s.SocketBodyGroupEveryoneSendMessagePermission;
            if (null != e.allowEveryoneSendMessage && (t.allowEveryoneSendMessage = Boolean(e.allowEveryoneSendMessage)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            null != e.groupInfo) {
                if ("object" !== typeof e.groupInfo)
                    throw TypeError(".SocketBodyGroupEveryoneSendMessagePermission.groupInfo: object expected");
                t.groupInfo = s.HttpGroup.fromObject(e.groupInfo)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.allowEveryoneSendMessage = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
                n.groupInfo = null
            }
            return null != e.allowEveryoneSendMessage && e.hasOwnProperty("allowEveryoneSendMessage") && (n.allowEveryoneSendMessage = e.allowEveryoneSendMessage),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            null != e.groupInfo && e.hasOwnProperty("groupInfo") && (n.groupInfo = s.HttpGroup.toObject(e.groupInfo, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupNotAllowAddFriendPermission = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.notAllowAddFriend = !1,
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.notAllowAddFriend && e.hasOwnProperty("notAllowAddFriend") && t.uint32(8).bool(e.notAllowAddFriend),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupNotAllowAddFriendPermission;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.notAllowAddFriend = e.bool();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupNotAllowAddFriendPermission)
                return e;
            var t = new s.SocketBodyGroupNotAllowAddFriendPermission;
            return null != e.notAllowAddFriend && (t.notAllowAddFriend = Boolean(e.notAllowAddFriend)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.notAllowAddFriend = !1,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.notAllowAddFriend && e.hasOwnProperty("notAllowAddFriend") && (n.notAllowAddFriend = e.notAllowAddFriend),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupUpgrade = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.companyName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && t.uint32(18).string(e.companyName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupUpgrade;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.companyName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupUpgrade)
                return e;
            var t = new s.SocketBodyGroupUpgrade;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.companyName && (t.companyName = String(e.companyName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = "",
            n.companyName = ""),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.companyName && e.hasOwnProperty("companyName") && (n.companyName = e.companyName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupUpgradeRequest = function() {
        function e(e) {
            if (this.companyInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyInfos = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.companyInfos && e.companyInfos.length)
                for (var n = 0; n < e.companyInfos.length; ++n)
                    s.CommonCompanyDepartmentInfo.encode(e.companyInfos[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupUpgradeRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyInfos && r.companyInfos.length || (r.companyInfos = []),
                    r.companyInfos.push(s.CommonCompanyDepartmentInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupUpgradeRequest)
                return e;
            var t = new s.SocketBodyGroupUpgradeRequest;
            if (e.companyInfos) {
                if (!Array.isArray(e.companyInfos))
                    throw TypeError(".SocketBodyGroupUpgradeRequest.companyInfos: array expected");
                t.companyInfos = [];
                for (var n = 0; n < e.companyInfos.length; ++n) {
                    if ("object" !== typeof e.companyInfos[n])
                        throw TypeError(".SocketBodyGroupUpgradeRequest.companyInfos: object expected");
                    t.companyInfos[n] = s.CommonCompanyDepartmentInfo.fromObject(e.companyInfos[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.companyInfos = []),
            e.companyInfos && e.companyInfos.length) {
                n.companyInfos = [];
                for (var r = 0; r < e.companyInfos.length; ++r)
                    n.companyInfos[r] = s.CommonCompanyDepartmentInfo.toObject(e.companyInfos[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupMemberAutoJoin = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyInfos = null,
        e.prototype.members = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.companyInfos && e.hasOwnProperty("companyInfos") && s.CommonCompanyDepartmentInfo.encode(e.companyInfos, t.uint32(10).fork()).ldelim(),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupMemberAutoJoin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyInfos = s.CommonCompanyDepartmentInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupMemberAutoJoin)
                return e;
            var t = new s.SocketBodyGroupMemberAutoJoin;
            if (null != e.companyInfos) {
                if ("object" !== typeof e.companyInfos)
                    throw TypeError(".SocketBodyGroupMemberAutoJoin.companyInfos: object expected");
                t.companyInfos = s.CommonCompanyDepartmentInfo.fromObject(e.companyInfos)
            }
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupMemberAutoJoin.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupMemberAutoJoin.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults && (n.companyInfos = null),
            null != e.companyInfos && e.hasOwnProperty("companyInfos") && (n.companyInfos = s.CommonCompanyDepartmentInfo.toObject(e.companyInfos, t)),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.SocketBodyGroupMember.toObject(e.members[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupMemberAutoLeave = function() {
        function e(e) {
            if (this.members = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyInfos = null,
        e.prototype.members = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.companyInfos && e.hasOwnProperty("companyInfos") && s.CommonCompanyDepartmentInfo.encode(e.companyInfos, t.uint32(10).fork()).ldelim(),
            null != e.members && e.members.length)
                for (var n = 0; n < e.members.length; ++n)
                    s.SocketBodyGroupMember.encode(e.members[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupMemberAutoLeave;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyInfos = s.CommonCompanyDepartmentInfo.decode(e, e.uint32());
                    break;
                case 2:
                    r.members && r.members.length || (r.members = []),
                    r.members.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupMemberAutoLeave)
                return e;
            var t = new s.SocketBodyGroupMemberAutoLeave;
            if (null != e.companyInfos) {
                if ("object" !== typeof e.companyInfos)
                    throw TypeError(".SocketBodyGroupMemberAutoLeave.companyInfos: object expected");
                t.companyInfos = s.CommonCompanyDepartmentInfo.fromObject(e.companyInfos)
            }
            if (e.members) {
                if (!Array.isArray(e.members))
                    throw TypeError(".SocketBodyGroupMemberAutoLeave.members: array expected");
                t.members = [];
                for (var n = 0; n < e.members.length; ++n) {
                    if ("object" !== typeof e.members[n])
                        throw TypeError(".SocketBodyGroupMemberAutoLeave.members: object expected");
                    t.members[n] = s.SocketBodyGroupMember.fromObject(e.members[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.members = []),
            t.defaults && (n.companyInfos = null),
            null != e.companyInfos && e.hasOwnProperty("companyInfos") && (n.companyInfos = s.CommonCompanyDepartmentInfo.toObject(e.companyInfos, t)),
            e.members && e.members.length) {
                n.members = [];
                for (var r = 0; r < e.members.length; ++r)
                    n.members[r] = s.SocketBodyGroupMember.toObject(e.members[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupSendRequestJoinVerification = function() {
        function e(e) {
            if (this.admins = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.owner = null,
        e.prototype.admins = a.emptyArray,
        e.prototype.hasConfirmed = !1,
        e.prototype.hasReject = !1,
        e.prototype.requestMember = null,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.owner && e.hasOwnProperty("owner") && s.SocketBodyGroupMember.encode(e.owner, t.uint32(10).fork()).ldelim(),
            null != e.admins && e.admins.length)
                for (var n = 0; n < e.admins.length; ++n)
                    s.SocketBodyGroupMember.encode(e.admins[n], t.uint32(18).fork()).ldelim();
            return null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && t.uint32(24).bool(e.hasConfirmed),
            null != e.hasReject && e.hasOwnProperty("hasReject") && t.uint32(32).bool(e.hasReject),
            null != e.requestMember && e.hasOwnProperty("requestMember") && s.SocketBodyGroupMember.encode(e.requestMember, t.uint32(42).fork()).ldelim(),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(48).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupSendRequestJoinVerification;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.owner = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.admins && r.admins.length || (r.admins = []),
                    r.admins.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 3:
                    r.hasConfirmed = e.bool();
                    break;
                case 4:
                    r.hasReject = e.bool();
                    break;
                case 5:
                    r.requestMember = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 6:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupSendRequestJoinVerification)
                return e;
            var t = new s.SocketBodyGroupSendRequestJoinVerification;
            if (null != e.owner) {
                if ("object" !== typeof e.owner)
                    throw TypeError(".SocketBodyGroupSendRequestJoinVerification.owner: object expected");
                t.owner = s.SocketBodyGroupMember.fromObject(e.owner)
            }
            if (e.admins) {
                if (!Array.isArray(e.admins))
                    throw TypeError(".SocketBodyGroupSendRequestJoinVerification.admins: array expected");
                t.admins = [];
                for (var n = 0; n < e.admins.length; ++n) {
                    if ("object" !== typeof e.admins[n])
                        throw TypeError(".SocketBodyGroupSendRequestJoinVerification.admins: object expected");
                    t.admins[n] = s.SocketBodyGroupMember.fromObject(e.admins[n])
                }
            }
            if (null != e.hasConfirmed && (t.hasConfirmed = Boolean(e.hasConfirmed)),
            null != e.hasReject && (t.hasReject = Boolean(e.hasReject)),
            null != e.requestMember) {
                if ("object" !== typeof e.requestMember)
                    throw TypeError(".SocketBodyGroupSendRequestJoinVerification.requestMember: object expected");
                t.requestMember = s.SocketBodyGroupMember.fromObject(e.requestMember)
            }
            return null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.admins = []),
            t.defaults)
                if (n.owner = null,
                n.hasConfirmed = !1,
                n.hasReject = !1,
                n.requestMember = null,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            if (null != e.owner && e.hasOwnProperty("owner") && (n.owner = s.SocketBodyGroupMember.toObject(e.owner, t)),
            e.admins && e.admins.length) {
                n.admins = [];
                for (var o = 0; o < e.admins.length; ++o)
                    n.admins[o] = s.SocketBodyGroupMember.toObject(e.admins[o], t)
            }
            return null != e.hasConfirmed && e.hasOwnProperty("hasConfirmed") && (n.hasConfirmed = e.hasConfirmed),
            null != e.hasReject && e.hasOwnProperty("hasReject") && (n.hasReject = e.hasReject),
            null != e.requestMember && e.hasOwnProperty("requestMember") && (n.requestMember = s.SocketBodyGroupMember.toObject(e.requestMember, t)),
            null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupMemberOutOfLimit = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.groupId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(8).uint32(e.groupId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupMemberOutOfLimit;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.groupId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupMemberOutOfLimit)
                return e;
            var t = new s.SocketBodyGroupMemberOutOfLimit;
            return null != e.groupId && (t.groupId = e.groupId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.groupId = 0),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupAppeal = function() {
        function e(e) {
            if (this.admins = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.owner = null,
        e.prototype.admins = a.emptyArray,
        e.prototype.reason = "",
        e.prototype.appealStatus = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.owner && e.hasOwnProperty("owner") && s.SocketBodyGroupMember.encode(e.owner, t.uint32(10).fork()).ldelim(),
            null != e.admins && e.admins.length)
                for (var n = 0; n < e.admins.length; ++n)
                    s.SocketBodyGroupMember.encode(e.admins[n], t.uint32(18).fork()).ldelim();
            return null != e.reason && e.hasOwnProperty("reason") && t.uint32(26).string(e.reason),
            null != e.appealStatus && e.hasOwnProperty("appealStatus") && t.uint32(32).int32(e.appealStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupAppeal;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.owner = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 2:
                    r.admins && r.admins.length || (r.admins = []),
                    r.admins.push(s.SocketBodyGroupMember.decode(e, e.uint32()));
                    break;
                case 3:
                    r.reason = e.string();
                    break;
                case 4:
                    r.appealStatus = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupAppeal)
                return e;
            var t = new s.SocketBodyGroupAppeal;
            if (null != e.owner) {
                if ("object" !== typeof e.owner)
                    throw TypeError(".SocketBodyGroupAppeal.owner: object expected");
                t.owner = s.SocketBodyGroupMember.fromObject(e.owner)
            }
            if (e.admins) {
                if (!Array.isArray(e.admins))
                    throw TypeError(".SocketBodyGroupAppeal.admins: array expected");
                t.admins = [];
                for (var n = 0; n < e.admins.length; ++n) {
                    if ("object" !== typeof e.admins[n])
                        throw TypeError(".SocketBodyGroupAppeal.admins: object expected");
                    t.admins[n] = s.SocketBodyGroupMember.fromObject(e.admins[n])
                }
            }
            switch (null != e.reason && (t.reason = String(e.reason)),
            e.appealStatus) {
            case "CommonAppealStatusSuspend":
            case 0:
                t.appealStatus = 0;
                break;
            case "CommonAppealStatusSubmitted":
            case 1:
                t.appealStatus = 1;
                break;
            case "CommonAppealStatusRestore":
            case 2:
                t.appealStatus = 2;
                break;
            case "CommonAppealStatusReject":
            case 3:
                t.appealStatus = 3;
                break;
            case "CommonAppealStatusStopUsing":
            case 4:
                t.appealStatus = 4;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.admins = []),
            t.defaults && (n.owner = null,
            n.reason = "",
            n.appealStatus = t.enums === String ? "CommonAppealStatusSuspend" : 0),
            null != e.owner && e.hasOwnProperty("owner") && (n.owner = s.SocketBodyGroupMember.toObject(e.owner, t)),
            e.admins && e.admins.length) {
                n.admins = [];
                for (var r = 0; r < e.admins.length; ++r)
                    n.admins[r] = s.SocketBodyGroupMember.toObject(e.admins[r], t)
            }
            return null != e.reason && e.hasOwnProperty("reason") && (n.reason = e.reason),
            null != e.appealStatus && e.hasOwnProperty("appealStatus") && (n.appealStatus = t.enums === String ? s.CommonAppealStatus[e.appealStatus] : e.appealStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCompanyChanged = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.version = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint64(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCompanyChanged;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.version = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCompanyChanged)
                return e;
            var t = new s.SocketBodyCompanyChanged;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.version && (a.Long ? (t.version = a.Long.fromValue(e.version)).unsigned = !0 : "string" === typeof e.version ? t.version = parseInt(e.version, 10) : "number" === typeof e.version ? t.version = e.version : "object" === typeof e.version && (t.version = new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.companyId = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.version = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.version = t.longs === String ? "0" : 0;
            return null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.version && e.hasOwnProperty("version") && ("number" === typeof e.version ? n.version = t.longs === String ? String(e.version) : e.version : n.version = t.longs === String ? a.Long.prototype.toString.call(e.version) : t.longs === Number ? new a.LongBits(e.version.low >>> 0,e.version.high >>> 0).toNumber(!0) : e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCompanyRemoved = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCompanyRemoved;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCompanyRemoved)
                return e;
            var t = new s.SocketBodyCompanyRemoved;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.companyId = ""),
            null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCompanyModifyPersonalInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.companyId = "",
        e.prototype.myVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.companyId && e.hasOwnProperty("companyId") && t.uint32(10).string(e.companyId),
            null != e.myVersion && e.hasOwnProperty("myVersion") && t.uint32(16).uint64(e.myVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCompanyModifyPersonalInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.companyId = e.string();
                    break;
                case 2:
                    r.myVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCompanyModifyPersonalInfo)
                return e;
            var t = new s.SocketBodyCompanyModifyPersonalInfo;
            return null != e.companyId && (t.companyId = String(e.companyId)),
            null != e.myVersion && (a.Long ? (t.myVersion = a.Long.fromValue(e.myVersion)).unsigned = !0 : "string" === typeof e.myVersion ? t.myVersion = parseInt(e.myVersion, 10) : "number" === typeof e.myVersion ? t.myVersion = e.myVersion : "object" === typeof e.myVersion && (t.myVersion = new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.companyId = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.myVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.myVersion = t.longs === String ? "0" : 0;
            return null != e.companyId && e.hasOwnProperty("companyId") && (n.companyId = e.companyId),
            null != e.myVersion && e.hasOwnProperty("myVersion") && ("number" === typeof e.myVersion ? n.myVersion = t.longs === String ? String(e.myVersion) : e.myVersion : n.myVersion = t.longs === String ? a.Long.prototype.toString.call(e.myVersion) : t.longs === Number ? new a.LongBits(e.myVersion.low >>> 0,e.myVersion.high >>> 0).toNumber(!0) : e.myVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyConversationReadStatus = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(24).uint64(e.sequence),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyConversationReadStatus;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.sequence = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyConversationReadStatus)
                return e;
            var t = new s.SocketBodyConversationReadStatus;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !0 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0) : e.sequence),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyConversationRemove = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.deleteServerMessages = !1,
        e.prototype.notRemoveConversation = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.deleteServerMessages && e.hasOwnProperty("deleteServerMessages") && t.uint32(24).bool(e.deleteServerMessages),
            null != e.notRemoveConversation && e.hasOwnProperty("notRemoveConversation") && t.uint32(32).bool(e.notRemoveConversation),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyConversationRemove;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.deleteServerMessages = e.bool();
                    break;
                case 4:
                    r.notRemoveConversation = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyConversationRemove)
                return e;
            var t = new s.SocketBodyConversationRemove;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.deleteServerMessages && (t.deleteServerMessages = Boolean(e.deleteServerMessages)),
            null != e.notRemoveConversation && (t.notRemoveConversation = Boolean(e.notRemoveConversation)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.deleteServerMessages = !1,
            n.notRemoveConversation = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.deleteServerMessages && e.hasOwnProperty("deleteServerMessages") && (n.deleteServerMessages = e.deleteServerMessages),
            null != e.notRemoveConversation && e.hasOwnProperty("notRemoveConversation") && (n.notRemoveConversation = e.notRemoveConversation),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyPrivateConversationDestroy = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.removeConversation = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.removeConversation && e.hasOwnProperty("removeConversation") && t.uint32(24).bool(e.removeConversation),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyPrivateConversationDestroy;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.removeConversation = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyPrivateConversationDestroy)
                return e;
            var t = new s.SocketBodyPrivateConversationDestroy;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.removeConversation && (t.removeConversation = Boolean(e.removeConversation)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
            n.removeConversation = !1),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.removeConversation && e.hasOwnProperty("removeConversation") && (n.removeConversation = e.removeConversation),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyConversationDeleteMessages = function() {
        function e(e) {
            if (this.deleteMessageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.deleteMessageIds = a.emptyArray,
        e.prototype.minDeleteSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxDeleteSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.minSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.maxSequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.deleteMessageIds && e.deleteMessageIds.length)
                for (var n = 0; n < e.deleteMessageIds.length; ++n)
                    t.uint32(26).string(e.deleteMessageIds[n]);
            return null != e.minDeleteSequence && e.hasOwnProperty("minDeleteSequence") && t.uint32(32).uint64(e.minDeleteSequence),
            null != e.maxDeleteSequence && e.hasOwnProperty("maxDeleteSequence") && t.uint32(40).uint64(e.maxDeleteSequence),
            null != e.minSequence && e.hasOwnProperty("minSequence") && t.uint32(48).uint64(e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && t.uint32(56).uint64(e.maxSequence),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyConversationDeleteMessages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.deleteMessageIds && r.deleteMessageIds.length || (r.deleteMessageIds = []),
                    r.deleteMessageIds.push(e.string());
                    break;
                case 4:
                    r.minDeleteSequence = e.uint64();
                    break;
                case 5:
                    r.maxDeleteSequence = e.uint64();
                    break;
                case 6:
                    r.minSequence = e.uint64();
                    break;
                case 7:
                    r.maxSequence = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyConversationDeleteMessages)
                return e;
            var t = new s.SocketBodyConversationDeleteMessages;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.deleteMessageIds) {
                if (!Array.isArray(e.deleteMessageIds))
                    throw TypeError(".SocketBodyConversationDeleteMessages.deleteMessageIds: array expected");
                t.deleteMessageIds = [];
                for (var n = 0; n < e.deleteMessageIds.length; ++n)
                    t.deleteMessageIds[n] = String(e.deleteMessageIds[n])
            }
            return null != e.minDeleteSequence && (a.Long ? (t.minDeleteSequence = a.Long.fromValue(e.minDeleteSequence)).unsigned = !0 : "string" === typeof e.minDeleteSequence ? t.minDeleteSequence = parseInt(e.minDeleteSequence, 10) : "number" === typeof e.minDeleteSequence ? t.minDeleteSequence = e.minDeleteSequence : "object" === typeof e.minDeleteSequence && (t.minDeleteSequence = new a.LongBits(e.minDeleteSequence.low >>> 0,e.minDeleteSequence.high >>> 0).toNumber(!0))),
            null != e.maxDeleteSequence && (a.Long ? (t.maxDeleteSequence = a.Long.fromValue(e.maxDeleteSequence)).unsigned = !0 : "string" === typeof e.maxDeleteSequence ? t.maxDeleteSequence = parseInt(e.maxDeleteSequence, 10) : "number" === typeof e.maxDeleteSequence ? t.maxDeleteSequence = e.maxDeleteSequence : "object" === typeof e.maxDeleteSequence && (t.maxDeleteSequence = new a.LongBits(e.maxDeleteSequence.low >>> 0,e.maxDeleteSequence.high >>> 0).toNumber(!0))),
            null != e.minSequence && (a.Long ? (t.minSequence = a.Long.fromValue(e.minSequence)).unsigned = !0 : "string" === typeof e.minSequence ? t.minSequence = parseInt(e.minSequence, 10) : "number" === typeof e.minSequence ? t.minSequence = e.minSequence : "object" === typeof e.minSequence && (t.minSequence = new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0))),
            null != e.maxSequence && (a.Long ? (t.maxSequence = a.Long.fromValue(e.maxSequence)).unsigned = !0 : "string" === typeof e.maxSequence ? t.maxSequence = parseInt(e.maxSequence, 10) : "number" === typeof e.maxSequence ? t.maxSequence = e.maxSequence : "object" === typeof e.maxSequence && (t.maxSequence = new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.deleteMessageIds = []),
            t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.minDeleteSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.minDeleteSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.maxDeleteSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.maxDeleteSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.minSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.minSequence = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.maxSequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.maxSequence = t.longs === String ? "0" : 0
            }
            if (null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.deleteMessageIds && e.deleteMessageIds.length) {
                n.deleteMessageIds = [];
                for (var o = 0; o < e.deleteMessageIds.length; ++o)
                    n.deleteMessageIds[o] = e.deleteMessageIds[o]
            }
            return null != e.minDeleteSequence && e.hasOwnProperty("minDeleteSequence") && ("number" === typeof e.minDeleteSequence ? n.minDeleteSequence = t.longs === String ? String(e.minDeleteSequence) : e.minDeleteSequence : n.minDeleteSequence = t.longs === String ? a.Long.prototype.toString.call(e.minDeleteSequence) : t.longs === Number ? new a.LongBits(e.minDeleteSequence.low >>> 0,e.minDeleteSequence.high >>> 0).toNumber(!0) : e.minDeleteSequence),
            null != e.maxDeleteSequence && e.hasOwnProperty("maxDeleteSequence") && ("number" === typeof e.maxDeleteSequence ? n.maxDeleteSequence = t.longs === String ? String(e.maxDeleteSequence) : e.maxDeleteSequence : n.maxDeleteSequence = t.longs === String ? a.Long.prototype.toString.call(e.maxDeleteSequence) : t.longs === Number ? new a.LongBits(e.maxDeleteSequence.low >>> 0,e.maxDeleteSequence.high >>> 0).toNumber(!0) : e.maxDeleteSequence),
            null != e.minSequence && e.hasOwnProperty("minSequence") && ("number" === typeof e.minSequence ? n.minSequence = t.longs === String ? String(e.minSequence) : e.minSequence : n.minSequence = t.longs === String ? a.Long.prototype.toString.call(e.minSequence) : t.longs === Number ? new a.LongBits(e.minSequence.low >>> 0,e.minSequence.high >>> 0).toNumber(!0) : e.minSequence),
            null != e.maxSequence && e.hasOwnProperty("maxSequence") && ("number" === typeof e.maxSequence ? n.maxSequence = t.longs === String ? String(e.maxSequence) : e.maxSequence : n.maxSequence = t.longs === String ? a.Long.prototype.toString.call(e.maxSequence) : t.longs === Number ? new a.LongBits(e.maxSequence.low >>> 0,e.maxSequence.high >>> 0).toNumber(!0) : e.maxSequence),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCommonSystem = function() {
        function e(e) {
            if (this.linkInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.prototype.linkInfos = a.emptyArray,
        e.prototype.isPush = !1,
        e.prototype.onlyPush = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            null != e.linkInfos && e.linkInfos.length)
                for (var n = 0; n < e.linkInfos.length; ++n)
                    s.CommonLinkInfo.encode(e.linkInfos[n], t.uint32(18).fork()).ldelim();
            return null != e.isPush && e.hasOwnProperty("isPush") && t.uint32(24).bool(e.isPush),
            null != e.onlyPush && e.hasOwnProperty("onlyPush") && t.uint32(32).bool(e.onlyPush),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCommonSystem;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                case 2:
                    r.linkInfos && r.linkInfos.length || (r.linkInfos = []),
                    r.linkInfos.push(s.CommonLinkInfo.decode(e, e.uint32()));
                    break;
                case 3:
                    r.isPush = e.bool();
                    break;
                case 4:
                    r.onlyPush = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCommonSystem)
                return e;
            var t = new s.SocketBodyCommonSystem;
            if (null != e.text && (t.text = String(e.text)),
            e.linkInfos) {
                if (!Array.isArray(e.linkInfos))
                    throw TypeError(".SocketBodyCommonSystem.linkInfos: array expected");
                t.linkInfos = [];
                for (var n = 0; n < e.linkInfos.length; ++n) {
                    if ("object" !== typeof e.linkInfos[n])
                        throw TypeError(".SocketBodyCommonSystem.linkInfos: object expected");
                    t.linkInfos[n] = s.CommonLinkInfo.fromObject(e.linkInfos[n])
                }
            }
            return null != e.isPush && (t.isPush = Boolean(e.isPush)),
            null != e.onlyPush && (t.onlyPush = Boolean(e.onlyPush)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.linkInfos = []),
            t.defaults && (n.text = "",
            n.isPush = !1,
            n.onlyPush = !1),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            e.linkInfos && e.linkInfos.length) {
                n.linkInfos = [];
                for (var r = 0; r < e.linkInfos.length; ++r)
                    n.linkInfos[r] = s.CommonLinkInfo.toObject(e.linkInfos[r], t)
            }
            return null != e.isPush && e.hasOwnProperty("isPush") && (n.isPush = e.isPush),
            null != e.onlyPush && e.hasOwnProperty("onlyPush") && (n.onlyPush = e.onlyPush),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyTempStoreCommonText = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyTempStoreCommonText;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyTempStoreCommonText)
                return e;
            var t = new s.SocketBodyTempStoreCommonText;
            return null != e.text && (t.text = String(e.text)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.text = ""),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySystemNotice = function() {
        function e(e) {
            if (this.linkInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.text = "",
        e.prototype.linkInfos = a.emptyArray,
        e.prototype.expiredTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.text && e.hasOwnProperty("text") && t.uint32(10).string(e.text),
            null != e.linkInfos && e.linkInfos.length)
                for (var n = 0; n < e.linkInfos.length; ++n)
                    s.CommonLinkInfo.encode(e.linkInfos[n], t.uint32(18).fork()).ldelim();
            return null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && t.uint32(24).uint64(e.expiredTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySystemNotice;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.text = e.string();
                    break;
                case 2:
                    r.linkInfos && r.linkInfos.length || (r.linkInfos = []),
                    r.linkInfos.push(s.CommonLinkInfo.decode(e, e.uint32()));
                    break;
                case 3:
                    r.expiredTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySystemNotice)
                return e;
            var t = new s.SocketBodySystemNotice;
            if (null != e.text && (t.text = String(e.text)),
            e.linkInfos) {
                if (!Array.isArray(e.linkInfos))
                    throw TypeError(".SocketBodySystemNotice.linkInfos: array expected");
                t.linkInfos = [];
                for (var n = 0; n < e.linkInfos.length; ++n) {
                    if ("object" !== typeof e.linkInfos[n])
                        throw TypeError(".SocketBodySystemNotice.linkInfos: object expected");
                    t.linkInfos[n] = s.CommonLinkInfo.fromObject(e.linkInfos[n])
                }
            }
            return null != e.expiredTimestamp && (a.Long ? (t.expiredTimestamp = a.Long.fromValue(e.expiredTimestamp)).unsigned = !0 : "string" === typeof e.expiredTimestamp ? t.expiredTimestamp = parseInt(e.expiredTimestamp, 10) : "number" === typeof e.expiredTimestamp ? t.expiredTimestamp = e.expiredTimestamp : "object" === typeof e.expiredTimestamp && (t.expiredTimestamp = new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.linkInfos = []),
            t.defaults)
                if (n.text = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.expiredTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.expiredTimestamp = t.longs === String ? "0" : 0;
            if (null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            e.linkInfos && e.linkInfos.length) {
                n.linkInfos = [];
                for (var o = 0; o < e.linkInfos.length; ++o)
                    n.linkInfos[o] = s.CommonLinkInfo.toObject(e.linkInfos[o], t)
            }
            return null != e.expiredTimestamp && e.hasOwnProperty("expiredTimestamp") && ("number" === typeof e.expiredTimestamp ? n.expiredTimestamp = t.longs === String ? String(e.expiredTimestamp) : e.expiredTimestamp : n.expiredTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.expiredTimestamp) : t.longs === Number ? new a.LongBits(e.expiredTimestamp.low >>> 0,e.expiredTimestamp.high >>> 0).toNumber(!0) : e.expiredTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFileDownloaded = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.userId = 0,
        e.prototype.name = "",
        e.prototype.fileMessageId = "",
        e.prototype.fileName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(8).uint32(e.userId),
            null != e.name && e.hasOwnProperty("name") && t.uint32(18).string(e.name),
            null != e.fileMessageId && e.hasOwnProperty("fileMessageId") && t.uint32(26).string(e.fileMessageId),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(34).string(e.fileName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFileDownloaded;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.userId = e.uint32();
                    break;
                case 2:
                    r.name = e.string();
                    break;
                case 3:
                    r.fileMessageId = e.string();
                    break;
                case 4:
                    r.fileName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFileDownloaded)
                return e;
            var t = new s.SocketBodyFileDownloaded;
            return null != e.userId && (t.userId = e.userId >>> 0),
            null != e.name && (t.name = String(e.name)),
            null != e.fileMessageId && (t.fileMessageId = String(e.fileMessageId)),
            null != e.fileName && (t.fileName = String(e.fileName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.userId = 0,
            n.name = "",
            n.fileMessageId = "",
            n.fileName = ""),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            null != e.name && e.hasOwnProperty("name") && (n.name = e.name),
            null != e.fileMessageId && e.hasOwnProperty("fileMessageId") && (n.fileMessageId = e.fileMessageId),
            null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyRedpacketReceiveMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.redpacketId = "",
        e.prototype.receivedUser = null,
        e.prototype.sender = null,
        e.prototype.leftCount = 0,
        e.prototype.redpacketMessageId = "",
        e.prototype.receivedPrice = 0,
        e.prototype.redpacketType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && t.uint32(10).string(e.redpacketId),
            null != e.receivedUser && e.hasOwnProperty("receivedUser") && s.SocketBodyGroupMember.encode(e.receivedUser, t.uint32(18).fork()).ldelim(),
            null != e.sender && e.hasOwnProperty("sender") && s.SocketBodyGroupMember.encode(e.sender, t.uint32(26).fork()).ldelim(),
            null != e.leftCount && e.hasOwnProperty("leftCount") && t.uint32(32).uint32(e.leftCount),
            null != e.redpacketMessageId && e.hasOwnProperty("redpacketMessageId") && t.uint32(42).string(e.redpacketMessageId),
            null != e.receivedPrice && e.hasOwnProperty("receivedPrice") && t.uint32(48).uint32(e.receivedPrice),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && t.uint32(56).int32(e.redpacketType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyRedpacketReceiveMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.redpacketId = e.string();
                    break;
                case 2:
                    r.receivedUser = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.sender = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 4:
                    r.leftCount = e.uint32();
                    break;
                case 5:
                    r.redpacketMessageId = e.string();
                    break;
                case 6:
                    r.receivedPrice = e.uint32();
                    break;
                case 7:
                    r.redpacketType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyRedpacketReceiveMessage)
                return e;
            var t = new s.SocketBodyRedpacketReceiveMessage;
            if (null != e.redpacketId && (t.redpacketId = String(e.redpacketId)),
            null != e.receivedUser) {
                if ("object" !== typeof e.receivedUser)
                    throw TypeError(".SocketBodyRedpacketReceiveMessage.receivedUser: object expected");
                t.receivedUser = s.SocketBodyGroupMember.fromObject(e.receivedUser)
            }
            if (null != e.sender) {
                if ("object" !== typeof e.sender)
                    throw TypeError(".SocketBodyRedpacketReceiveMessage.sender: object expected");
                t.sender = s.SocketBodyGroupMember.fromObject(e.sender)
            }
            switch (null != e.leftCount && (t.leftCount = e.leftCount >>> 0),
            null != e.redpacketMessageId && (t.redpacketMessageId = String(e.redpacketMessageId)),
            null != e.receivedPrice && (t.receivedPrice = e.receivedPrice >>> 0),
            e.redpacketType) {
            case "CommonRedpacketTypeUndefined":
            case 0:
                t.redpacketType = 0;
                break;
            case "CommonRedpacketTypePersonal":
            case 1:
                t.redpacketType = 1;
                break;
            case "CommonRedpacketTypeGroupNormal":
            case 2:
                t.redpacketType = 2;
                break;
            case "CommonRedpacketTypeGroupRandom":
            case 3:
                t.redpacketType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.redpacketId = "",
            n.receivedUser = null,
            n.sender = null,
            n.leftCount = 0,
            n.redpacketMessageId = "",
            n.receivedPrice = 0,
            n.redpacketType = t.enums === String ? "CommonRedpacketTypeUndefined" : 0),
            null != e.redpacketId && e.hasOwnProperty("redpacketId") && (n.redpacketId = e.redpacketId),
            null != e.receivedUser && e.hasOwnProperty("receivedUser") && (n.receivedUser = s.SocketBodyGroupMember.toObject(e.receivedUser, t)),
            null != e.sender && e.hasOwnProperty("sender") && (n.sender = s.SocketBodyGroupMember.toObject(e.sender, t)),
            null != e.leftCount && e.hasOwnProperty("leftCount") && (n.leftCount = e.leftCount),
            null != e.redpacketMessageId && e.hasOwnProperty("redpacketMessageId") && (n.redpacketMessageId = e.redpacketMessageId),
            null != e.receivedPrice && e.hasOwnProperty("receivedPrice") && (n.receivedPrice = e.receivedPrice),
            null != e.redpacketType && e.hasOwnProperty("redpacketType") && (n.redpacketType = t.enums === String ? s.CommonRedpacketType[e.redpacketType] : e.redpacketType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyOfflineMessagesBegin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyOfflineMessagesBegin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyOfflineMessagesBegin ? e : new s.SocketBodyOfflineMessagesBegin
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyOfflineMessagesFinish = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyOfflineMessagesFinish;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyOfflineMessagesFinish ? e : new s.SocketBodyOfflineMessagesFinish
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyBatchOfflineMessages = function() {
        function e(e) {
            if (this.messages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messages = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.messages && e.messages.length)
                for (var n = 0; n < e.messages.length; ++n)
                    s.CommonMessage.encode(e.messages[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyBatchOfflineMessages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messages && r.messages.length || (r.messages = []),
                    r.messages.push(s.CommonMessage.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyBatchOfflineMessages)
                return e;
            var t = new s.SocketBodyBatchOfflineMessages;
            if (e.messages) {
                if (!Array.isArray(e.messages))
                    throw TypeError(".SocketBodyBatchOfflineMessages.messages: array expected");
                t.messages = [];
                for (var n = 0; n < e.messages.length; ++n) {
                    if ("object" !== typeof e.messages[n])
                        throw TypeError(".SocketBodyBatchOfflineMessages.messages: object expected");
                    t.messages[n] = s.CommonMessage.fromObject(e.messages[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messages = []),
            e.messages && e.messages.length) {
                n.messages = [];
                for (var r = 0; r < e.messages.length; ++r)
                    n.messages[r] = s.CommonMessage.toObject(e.messages[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyBatchConversationMessageAck = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.sequence = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.userId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.sequence && e.hasOwnProperty("sequence") && t.uint32(24).uint64(e.sequence),
            null != e.userId && e.hasOwnProperty("userId") && t.uint32(32).uint32(e.userId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyBatchConversationMessageAck;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.sequence = e.uint64();
                    break;
                case 4:
                    r.userId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyBatchConversationMessageAck)
                return e;
            var t = new s.SocketBodyBatchConversationMessageAck;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            return null != e.sequence && (a.Long ? (t.sequence = a.Long.fromValue(e.sequence)).unsigned = !0 : "string" === typeof e.sequence ? t.sequence = parseInt(e.sequence, 10) : "number" === typeof e.sequence ? t.sequence = e.sequence : "object" === typeof e.sequence && (t.sequence = new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0))),
            null != e.userId && (t.userId = e.userId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.conversationId = 0,
                n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.sequence = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.sequence = t.longs === String ? "0" : 0;
                n.userId = 0
            }
            return null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            null != e.sequence && e.hasOwnProperty("sequence") && ("number" === typeof e.sequence ? n.sequence = t.longs === String ? String(e.sequence) : e.sequence : n.sequence = t.longs === String ? a.Long.prototype.toString.call(e.sequence) : t.longs === Number ? new a.LongBits(e.sequence.low >>> 0,e.sequence.high >>> 0).toNumber(!0) : e.sequence),
            null != e.userId && e.hasOwnProperty("userId") && (n.userId = e.userId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyBatchOfflineMessageAcks = function() {
        function e(e) {
            if (this.batchMessageAcks = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.batchMessageAcks = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.batchMessageAcks && e.batchMessageAcks.length)
                for (var n = 0; n < e.batchMessageAcks.length; ++n)
                    s.SocketBodyBatchConversationMessageAck.encode(e.batchMessageAcks[n], t.uint32(10).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyBatchOfflineMessageAcks;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.batchMessageAcks && r.batchMessageAcks.length || (r.batchMessageAcks = []),
                    r.batchMessageAcks.push(s.SocketBodyBatchConversationMessageAck.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyBatchOfflineMessageAcks)
                return e;
            var t = new s.SocketBodyBatchOfflineMessageAcks;
            if (e.batchMessageAcks) {
                if (!Array.isArray(e.batchMessageAcks))
                    throw TypeError(".SocketBodyBatchOfflineMessageAcks.batchMessageAcks: array expected");
                t.batchMessageAcks = [];
                for (var n = 0; n < e.batchMessageAcks.length; ++n) {
                    if ("object" !== typeof e.batchMessageAcks[n])
                        throw TypeError(".SocketBodyBatchOfflineMessageAcks.batchMessageAcks: object expected");
                    t.batchMessageAcks[n] = s.SocketBodyBatchConversationMessageAck.fromObject(e.batchMessageAcks[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.batchMessageAcks = []),
            e.batchMessageAcks && e.batchMessageAcks.length) {
                n.batchMessageAcks = [];
                for (var r = 0; r < e.batchMessageAcks.length; ++r)
                    n.batchMessageAcks[r] = s.SocketBodyBatchConversationMessageAck.toObject(e.batchMessageAcks[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyReadStateChangeMessages = function() {
        function e(e) {
            if (this.readStateChangeSingleMessages = [],
            this.readStateChangeGroupMessages = [],
            this.readStateChangePrivateSingleMessages = [],
            this.readStateChangePrivateGroupMessages = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.readStateChangeSingleMessages = a.emptyArray,
        e.prototype.readStateChangeGroupMessages = a.emptyArray,
        e.prototype.readStateChangePrivateSingleMessages = a.emptyArray,
        e.prototype.readStateChangePrivateGroupMessages = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.readStateChangeSingleMessages && e.readStateChangeSingleMessages.length)
                for (var n = 0; n < e.readStateChangeSingleMessages.length; ++n)
                    s.SocketBodyReadStateChangeSingleMessage.encode(e.readStateChangeSingleMessages[n], t.uint32(10).fork()).ldelim();
            if (null != e.readStateChangeGroupMessages && e.readStateChangeGroupMessages.length)
                for (n = 0; n < e.readStateChangeGroupMessages.length; ++n)
                    s.SocketBodyReadStateChangeGroupMessage.encode(e.readStateChangeGroupMessages[n], t.uint32(18).fork()).ldelim();
            if (null != e.readStateChangePrivateSingleMessages && e.readStateChangePrivateSingleMessages.length)
                for (n = 0; n < e.readStateChangePrivateSingleMessages.length; ++n)
                    s.SocketBodyReadStateChangeSingleMessage.encode(e.readStateChangePrivateSingleMessages[n], t.uint32(26).fork()).ldelim();
            if (null != e.readStateChangePrivateGroupMessages && e.readStateChangePrivateGroupMessages.length)
                for (n = 0; n < e.readStateChangePrivateGroupMessages.length; ++n)
                    s.SocketBodyReadStateChangeGroupMessage.encode(e.readStateChangePrivateGroupMessages[n], t.uint32(34).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyReadStateChangeMessages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.readStateChangeSingleMessages && r.readStateChangeSingleMessages.length || (r.readStateChangeSingleMessages = []),
                    r.readStateChangeSingleMessages.push(s.SocketBodyReadStateChangeSingleMessage.decode(e, e.uint32()));
                    break;
                case 2:
                    r.readStateChangeGroupMessages && r.readStateChangeGroupMessages.length || (r.readStateChangeGroupMessages = []),
                    r.readStateChangeGroupMessages.push(s.SocketBodyReadStateChangeGroupMessage.decode(e, e.uint32()));
                    break;
                case 3:
                    r.readStateChangePrivateSingleMessages && r.readStateChangePrivateSingleMessages.length || (r.readStateChangePrivateSingleMessages = []),
                    r.readStateChangePrivateSingleMessages.push(s.SocketBodyReadStateChangeSingleMessage.decode(e, e.uint32()));
                    break;
                case 4:
                    r.readStateChangePrivateGroupMessages && r.readStateChangePrivateGroupMessages.length || (r.readStateChangePrivateGroupMessages = []),
                    r.readStateChangePrivateGroupMessages.push(s.SocketBodyReadStateChangeGroupMessage.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyReadStateChangeMessages)
                return e;
            var t = new s.SocketBodyReadStateChangeMessages;
            if (e.readStateChangeSingleMessages) {
                if (!Array.isArray(e.readStateChangeSingleMessages))
                    throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangeSingleMessages: array expected");
                t.readStateChangeSingleMessages = [];
                for (var n = 0; n < e.readStateChangeSingleMessages.length; ++n) {
                    if ("object" !== typeof e.readStateChangeSingleMessages[n])
                        throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangeSingleMessages: object expected");
                    t.readStateChangeSingleMessages[n] = s.SocketBodyReadStateChangeSingleMessage.fromObject(e.readStateChangeSingleMessages[n])
                }
            }
            if (e.readStateChangeGroupMessages) {
                if (!Array.isArray(e.readStateChangeGroupMessages))
                    throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangeGroupMessages: array expected");
                t.readStateChangeGroupMessages = [];
                for (n = 0; n < e.readStateChangeGroupMessages.length; ++n) {
                    if ("object" !== typeof e.readStateChangeGroupMessages[n])
                        throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangeGroupMessages: object expected");
                    t.readStateChangeGroupMessages[n] = s.SocketBodyReadStateChangeGroupMessage.fromObject(e.readStateChangeGroupMessages[n])
                }
            }
            if (e.readStateChangePrivateSingleMessages) {
                if (!Array.isArray(e.readStateChangePrivateSingleMessages))
                    throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangePrivateSingleMessages: array expected");
                t.readStateChangePrivateSingleMessages = [];
                for (n = 0; n < e.readStateChangePrivateSingleMessages.length; ++n) {
                    if ("object" !== typeof e.readStateChangePrivateSingleMessages[n])
                        throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangePrivateSingleMessages: object expected");
                    t.readStateChangePrivateSingleMessages[n] = s.SocketBodyReadStateChangeSingleMessage.fromObject(e.readStateChangePrivateSingleMessages[n])
                }
            }
            if (e.readStateChangePrivateGroupMessages) {
                if (!Array.isArray(e.readStateChangePrivateGroupMessages))
                    throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangePrivateGroupMessages: array expected");
                t.readStateChangePrivateGroupMessages = [];
                for (n = 0; n < e.readStateChangePrivateGroupMessages.length; ++n) {
                    if ("object" !== typeof e.readStateChangePrivateGroupMessages[n])
                        throw TypeError(".SocketBodyReadStateChangeMessages.readStateChangePrivateGroupMessages: object expected");
                    t.readStateChangePrivateGroupMessages[n] = s.SocketBodyReadStateChangeGroupMessage.fromObject(e.readStateChangePrivateGroupMessages[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.readStateChangeSingleMessages = [],
            n.readStateChangeGroupMessages = [],
            n.readStateChangePrivateSingleMessages = [],
            n.readStateChangePrivateGroupMessages = []),
            e.readStateChangeSingleMessages && e.readStateChangeSingleMessages.length) {
                n.readStateChangeSingleMessages = [];
                for (var r = 0; r < e.readStateChangeSingleMessages.length; ++r)
                    n.readStateChangeSingleMessages[r] = s.SocketBodyReadStateChangeSingleMessage.toObject(e.readStateChangeSingleMessages[r], t)
            }
            if (e.readStateChangeGroupMessages && e.readStateChangeGroupMessages.length) {
                n.readStateChangeGroupMessages = [];
                for (r = 0; r < e.readStateChangeGroupMessages.length; ++r)
                    n.readStateChangeGroupMessages[r] = s.SocketBodyReadStateChangeGroupMessage.toObject(e.readStateChangeGroupMessages[r], t)
            }
            if (e.readStateChangePrivateSingleMessages && e.readStateChangePrivateSingleMessages.length) {
                n.readStateChangePrivateSingleMessages = [];
                for (r = 0; r < e.readStateChangePrivateSingleMessages.length; ++r)
                    n.readStateChangePrivateSingleMessages[r] = s.SocketBodyReadStateChangeSingleMessage.toObject(e.readStateChangePrivateSingleMessages[r], t)
            }
            if (e.readStateChangePrivateGroupMessages && e.readStateChangePrivateGroupMessages.length) {
                n.readStateChangePrivateGroupMessages = [];
                for (r = 0; r < e.readStateChangePrivateGroupMessages.length; ++r)
                    n.readStateChangePrivateGroupMessages[r] = s.SocketBodyReadStateChangeGroupMessage.toObject(e.readStateChangePrivateGroupMessages[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyReadStateChangeMessagesAck = function() {
        function e(e) {
            if (this.singleMessageIds = [],
            this.groupMessageIds = [],
            this.privateSingleMessageIds = [],
            this.privateGroupMessageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.singleMessageIds = a.emptyArray,
        e.prototype.groupMessageIds = a.emptyArray,
        e.prototype.privateSingleMessageIds = a.emptyArray,
        e.prototype.privateGroupMessageIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.singleMessageIds && e.singleMessageIds.length)
                for (var n = 0; n < e.singleMessageIds.length; ++n)
                    t.uint32(10).string(e.singleMessageIds[n]);
            if (null != e.groupMessageIds && e.groupMessageIds.length)
                for (n = 0; n < e.groupMessageIds.length; ++n)
                    t.uint32(18).string(e.groupMessageIds[n]);
            if (null != e.privateSingleMessageIds && e.privateSingleMessageIds.length)
                for (n = 0; n < e.privateSingleMessageIds.length; ++n)
                    t.uint32(26).string(e.privateSingleMessageIds[n]);
            if (null != e.privateGroupMessageIds && e.privateGroupMessageIds.length)
                for (n = 0; n < e.privateGroupMessageIds.length; ++n)
                    t.uint32(34).string(e.privateGroupMessageIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyReadStateChangeMessagesAck;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.singleMessageIds && r.singleMessageIds.length || (r.singleMessageIds = []),
                    r.singleMessageIds.push(e.string());
                    break;
                case 2:
                    r.groupMessageIds && r.groupMessageIds.length || (r.groupMessageIds = []),
                    r.groupMessageIds.push(e.string());
                    break;
                case 3:
                    r.privateSingleMessageIds && r.privateSingleMessageIds.length || (r.privateSingleMessageIds = []),
                    r.privateSingleMessageIds.push(e.string());
                    break;
                case 4:
                    r.privateGroupMessageIds && r.privateGroupMessageIds.length || (r.privateGroupMessageIds = []),
                    r.privateGroupMessageIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyReadStateChangeMessagesAck)
                return e;
            var t = new s.SocketBodyReadStateChangeMessagesAck;
            if (e.singleMessageIds) {
                if (!Array.isArray(e.singleMessageIds))
                    throw TypeError(".SocketBodyReadStateChangeMessagesAck.singleMessageIds: array expected");
                t.singleMessageIds = [];
                for (var n = 0; n < e.singleMessageIds.length; ++n)
                    t.singleMessageIds[n] = String(e.singleMessageIds[n])
            }
            if (e.groupMessageIds) {
                if (!Array.isArray(e.groupMessageIds))
                    throw TypeError(".SocketBodyReadStateChangeMessagesAck.groupMessageIds: array expected");
                t.groupMessageIds = [];
                for (n = 0; n < e.groupMessageIds.length; ++n)
                    t.groupMessageIds[n] = String(e.groupMessageIds[n])
            }
            if (e.privateSingleMessageIds) {
                if (!Array.isArray(e.privateSingleMessageIds))
                    throw TypeError(".SocketBodyReadStateChangeMessagesAck.privateSingleMessageIds: array expected");
                t.privateSingleMessageIds = [];
                for (n = 0; n < e.privateSingleMessageIds.length; ++n)
                    t.privateSingleMessageIds[n] = String(e.privateSingleMessageIds[n])
            }
            if (e.privateGroupMessageIds) {
                if (!Array.isArray(e.privateGroupMessageIds))
                    throw TypeError(".SocketBodyReadStateChangeMessagesAck.privateGroupMessageIds: array expected");
                t.privateGroupMessageIds = [];
                for (n = 0; n < e.privateGroupMessageIds.length; ++n)
                    t.privateGroupMessageIds[n] = String(e.privateGroupMessageIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.singleMessageIds = [],
            n.groupMessageIds = [],
            n.privateSingleMessageIds = [],
            n.privateGroupMessageIds = []),
            e.singleMessageIds && e.singleMessageIds.length) {
                n.singleMessageIds = [];
                for (var r = 0; r < e.singleMessageIds.length; ++r)
                    n.singleMessageIds[r] = e.singleMessageIds[r]
            }
            if (e.groupMessageIds && e.groupMessageIds.length) {
                n.groupMessageIds = [];
                for (r = 0; r < e.groupMessageIds.length; ++r)
                    n.groupMessageIds[r] = e.groupMessageIds[r]
            }
            if (e.privateSingleMessageIds && e.privateSingleMessageIds.length) {
                n.privateSingleMessageIds = [];
                for (r = 0; r < e.privateSingleMessageIds.length; ++r)
                    n.privateSingleMessageIds[r] = e.privateSingleMessageIds[r]
            }
            if (e.privateGroupMessageIds && e.privateGroupMessageIds.length) {
                n.privateGroupMessageIds = [];
                for (r = 0; r < e.privateGroupMessageIds.length; ++r)
                    n.privateGroupMessageIds[r] = e.privateGroupMessageIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyReadStateChangeSingleMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.prototype.conversationId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(16).uint32(e.conversationId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyReadStateChangeSingleMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                case 2:
                    r.conversationId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyReadStateChangeSingleMessage)
                return e;
            var t = new s.SocketBodyReadStateChangeSingleMessage;
            return null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.messageId = "",
            n.conversationId = 0),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyReadStateChangeGroupMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.prototype.groupId = 0,
        e.prototype.unread = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            null != e.groupId && e.hasOwnProperty("groupId") && t.uint32(16).uint32(e.groupId),
            null != e.unread && e.hasOwnProperty("unread") && t.uint32(24).uint32(e.unread),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyReadStateChangeGroupMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                case 2:
                    r.groupId = e.uint32();
                    break;
                case 3:
                    r.unread = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyReadStateChangeGroupMessage)
                return e;
            var t = new s.SocketBodyReadStateChangeGroupMessage;
            return null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.groupId && (t.groupId = e.groupId >>> 0),
            null != e.unread && (t.unread = e.unread >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.messageId = "",
            n.groupId = 0,
            n.unread = 0),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.groupId && e.hasOwnProperty("groupId") && (n.groupId = e.groupId),
            null != e.unread && e.hasOwnProperty("unread") && (n.unread = e.unread),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyDeviceSyncReadMessages = function() {
        function e(e) {
            if (this.messageIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.conversationId = 0,
        e.prototype.conversationType = 0,
        e.prototype.messageIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.conversationId && e.hasOwnProperty("conversationId") && t.uint32(8).uint32(e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && t.uint32(16).int32(e.conversationType),
            null != e.messageIds && e.messageIds.length)
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.uint32(26).string(e.messageIds[n]);
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyDeviceSyncReadMessages;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.conversationId = e.uint32();
                    break;
                case 2:
                    r.conversationType = e.int32();
                    break;
                case 3:
                    r.messageIds && r.messageIds.length || (r.messageIds = []),
                    r.messageIds.push(e.string());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyDeviceSyncReadMessages)
                return e;
            var t = new s.SocketBodyDeviceSyncReadMessages;
            switch (null != e.conversationId && (t.conversationId = e.conversationId >>> 0),
            e.conversationType) {
            case "CommonConversationTypeUndefined":
            case 0:
                t.conversationType = 0;
                break;
            case "CommonConversationTypeSingleChat":
            case 1:
                t.conversationType = 1;
                break;
            case "CommonConversationTypeGroupChat":
            case 2:
                t.conversationType = 2;
                break;
            case "CommonConversationTypePrivateSingleChat":
            case 3:
                t.conversationType = 3;
                break;
            case "CommonConversationTypePrivateGroupChat":
            case 4:
                t.conversationType = 4;
                break
            }
            if (e.messageIds) {
                if (!Array.isArray(e.messageIds))
                    throw TypeError(".SocketBodyDeviceSyncReadMessages.messageIds: array expected");
                t.messageIds = [];
                for (var n = 0; n < e.messageIds.length; ++n)
                    t.messageIds[n] = String(e.messageIds[n])
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.messageIds = []),
            t.defaults && (n.conversationId = 0,
            n.conversationType = t.enums === String ? "CommonConversationTypeUndefined" : 0),
            null != e.conversationId && e.hasOwnProperty("conversationId") && (n.conversationId = e.conversationId),
            null != e.conversationType && e.hasOwnProperty("conversationType") && (n.conversationType = t.enums === String ? s.CommonConversationType[e.conversationType] : e.conversationType),
            e.messageIds && e.messageIds.length) {
                n.messageIds = [];
                for (var r = 0; r < e.messageIds.length; ++r)
                    n.messageIds[r] = e.messageIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyUserVoteMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.voteUserId = 0,
        e.prototype.voteUserName = "",
        e.prototype.anonymous = !1,
        e.prototype.open = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(16).uint64(e.voteId),
            null != e.voteUserId && e.hasOwnProperty("voteUserId") && t.uint32(24).uint32(e.voteUserId),
            null != e.voteUserName && e.hasOwnProperty("voteUserName") && t.uint32(34).string(e.voteUserName),
            null != e.anonymous && e.hasOwnProperty("anonymous") && t.uint32(40).bool(e.anonymous),
            null != e.open && e.hasOwnProperty("open") && t.uint32(48).bool(e.open),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyUserVoteMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.voteId = e.uint64();
                    break;
                case 3:
                    r.voteUserId = e.uint32();
                    break;
                case 4:
                    r.voteUserName = e.string();
                    break;
                case 5:
                    r.anonymous = e.bool();
                    break;
                case 6:
                    r.open = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyUserVoteMessage)
                return e;
            var t = new s.SocketBodyUserVoteMessage;
            return null != e.title && (t.title = String(e.title)),
            null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            null != e.voteUserId && (t.voteUserId = e.voteUserId >>> 0),
            null != e.voteUserName && (t.voteUserName = String(e.voteUserName)),
            null != e.anonymous && (t.anonymous = Boolean(e.anonymous)),
            null != e.open && (t.open = Boolean(e.open)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.title = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                n.voteUserId = 0,
                n.voteUserName = "",
                n.anonymous = !1,
                n.open = !1
            }
            return null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            null != e.voteUserId && e.hasOwnProperty("voteUserId") && (n.voteUserId = e.voteUserId),
            null != e.voteUserName && e.hasOwnProperty("voteUserName") && (n.voteUserName = e.voteUserName),
            null != e.anonymous && e.hasOwnProperty("anonymous") && (n.anonymous = e.anonymous),
            null != e.open && e.hasOwnProperty("open") && (n.open = e.open),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyVoteFinishMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.voteId = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.anonymous = !1,
        e.prototype.open = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.voteId && e.hasOwnProperty("voteId") && t.uint32(16).uint64(e.voteId),
            null != e.anonymous && e.hasOwnProperty("anonymous") && t.uint32(40).bool(e.anonymous),
            null != e.open && e.hasOwnProperty("open") && t.uint32(48).bool(e.open),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyVoteFinishMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.voteId = e.uint64();
                    break;
                case 5:
                    r.anonymous = e.bool();
                    break;
                case 6:
                    r.open = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyVoteFinishMessage)
                return e;
            var t = new s.SocketBodyVoteFinishMessage;
            return null != e.title && (t.title = String(e.title)),
            null != e.voteId && (a.Long ? (t.voteId = a.Long.fromValue(e.voteId)).unsigned = !0 : "string" === typeof e.voteId ? t.voteId = parseInt(e.voteId, 10) : "number" === typeof e.voteId ? t.voteId = e.voteId : "object" === typeof e.voteId && (t.voteId = new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0))),
            null != e.anonymous && (t.anonymous = Boolean(e.anonymous)),
            null != e.open && (t.open = Boolean(e.open)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.title = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.voteId = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.voteId = t.longs === String ? "0" : 0;
                n.anonymous = !1,
                n.open = !1
            }
            return null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.voteId && e.hasOwnProperty("voteId") && ("number" === typeof e.voteId ? n.voteId = t.longs === String ? String(e.voteId) : e.voteId : n.voteId = t.longs === String ? a.Long.prototype.toString.call(e.voteId) : t.longs === Number ? new a.LongBits(e.voteId.low >>> 0,e.voteId.high >>> 0).toNumber(!0) : e.voteId),
            null != e.anonymous && e.hasOwnProperty("anonymous") && (n.anonymous = e.anonymous),
            null != e.open && e.hasOwnProperty("open") && (n.open = e.open),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyPingRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyPingRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyPingRequest ? e : new s.SocketBodyPingRequest
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyPingResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.pingMessageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.pingMessageId && e.hasOwnProperty("pingMessageId") && t.uint32(10).string(e.pingMessageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyPingResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.pingMessageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyPingResponse)
                return e;
            var t = new s.SocketBodyPingResponse;
            return null != e.pingMessageId && (t.pingMessageId = String(e.pingMessageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.pingMessageId = ""),
            null != e.pingMessageId && e.hasOwnProperty("pingMessageId") && (n.pingMessageId = e.pingMessageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyACK = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.messageId = "",
        e.prototype.bodyType = "",
        e.prototype.message = null,
        e.prototype.isRepeat = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.messageId && e.hasOwnProperty("messageId") && t.uint32(10).string(e.messageId),
            null != e.bodyType && e.hasOwnProperty("bodyType") && t.uint32(18).string(e.bodyType),
            null != e.message && e.hasOwnProperty("message") && s.CommonMessage.encode(e.message, t.uint32(26).fork()).ldelim(),
            null != e.isRepeat && e.hasOwnProperty("isRepeat") && t.uint32(32).bool(e.isRepeat),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyACK;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.messageId = e.string();
                    break;
                case 2:
                    r.bodyType = e.string();
                    break;
                case 3:
                    r.message = s.CommonMessage.decode(e, e.uint32());
                    break;
                case 4:
                    r.isRepeat = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyACK)
                return e;
            var t = new s.SocketBodyACK;
            if (null != e.messageId && (t.messageId = String(e.messageId)),
            null != e.bodyType && (t.bodyType = String(e.bodyType)),
            null != e.message) {
                if ("object" !== typeof e.message)
                    throw TypeError(".SocketBodyACK.message: object expected");
                t.message = s.CommonMessage.fromObject(e.message)
            }
            return null != e.isRepeat && (t.isRepeat = Boolean(e.isRepeat)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.messageId = "",
            n.bodyType = "",
            n.message = null,
            n.isRepeat = !1),
            null != e.messageId && e.hasOwnProperty("messageId") && (n.messageId = e.messageId),
            null != e.bodyType && e.hasOwnProperty("bodyType") && (n.bodyType = e.bodyType),
            null != e.message && e.hasOwnProperty("message") && (n.message = s.CommonMessage.toObject(e.message, t)),
            null != e.isRepeat && e.hasOwnProperty("isRepeat") && (n.isRepeat = e.isRepeat),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyError = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.error = 0,
        e.prototype.errorExtension = 0,
        e.prototype.text = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.error && e.hasOwnProperty("error") && t.uint32(8).int32(e.error),
            null != e.errorExtension && e.hasOwnProperty("errorExtension") && t.uint32(16).int32(e.errorExtension),
            null != e.text && e.hasOwnProperty("text") && t.uint32(26).string(e.text),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyError;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.error = e.int32();
                    break;
                case 2:
                    r.errorExtension = e.int32();
                    break;
                case 3:
                    r.text = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyError)
                return e;
            var t = new s.SocketBodyError;
            switch (e.error) {
            case "SocketResponseCodeSuccess":
            case 0:
                t.error = 0;
                break;
            case "SocketResponseCodeUserAuthFail":
            case 1:
                t.error = 1;
                break;
            case "SocketResponseCodeUserNotConnection":
            case 2:
                t.error = 2;
                break;
            case "SocketResponseCodeUserTokenTimeOut":
            case 3:
                t.error = 3;
                break;
            case "SocketResponseCodeUserUpdatePassword":
            case 4:
                t.error = 4;
                break;
            case "SocketResponseCodeUserKickOffline":
            case 5:
                t.error = 5;
                break;
            case "SocketResponseCodeMessageReceiverNotSenderFriend":
            case 6:
                t.error = 6;
                break;
            case "SocketResponseCodeMessageSenderNotGroupMember":
            case 7:
                t.error = 7;
                break;
            case "SocketResponseCodeMessageReceiverNotFollowRobot":
            case 8:
                t.error = 8;
                break;
            case "SocketResponseCodeCallNonExistent":
            case 9:
                t.error = 9;
                break;
            case "SocketResponseCodeGroupVoiceChatMemberOverLimit":
            case 10:
                t.error = 10;
                break;
            case "SocketResponseCodeCallChaterNotFriend":
            case 11:
                t.error = 11;
                break;
            case "SocketResponseCodeUserNotJoined":
            case 12:
                t.error = 12;
                break;
            case "SocketResponseCodeSendRemindMessageNotPermit":
            case 13:
                t.error = 13;
                break;
            case "SocketResponseCodeCallOver":
            case 14:
                t.error = 14;
                break;
            case "SocketResponseCodeCallNotCalling":
            case 15:
                t.error = 15;
                break;
            case "SocketResponseCodeCallIsCalling":
            case 16:
                t.error = 16;
                break;
            case "SocketResponseCodeCallIsCallingOrOver":
            case 17:
                t.error = 17;
                break;
            case "SocketResponseCodeCallGroupMemberLessThanTwo":
            case 18:
                t.error = 18;
                break;
            case "SocketResponseCodeCallMemberNotInGroup":
            case 19:
                t.error = 19;
                break;
            case "SocketResponseCodeCallExistGroupCall":
            case 20:
                t.error = 20;
                break;
            case "SocketResponseCodeCallInviteZeroMember":
            case 21:
                t.error = 21;
                break;
            case "SocketResponseCodeCallGroupMemberIsCalling":
            case 22:
                t.error = 22;
                break;
            case "SocketResponseCodeCallMemberNotInCallGroup":
            case 23:
                t.error = 23;
                break;
            case "SocketResponseCodeCallGroupMemberIsWaiting":
            case 24:
                t.error = 24;
                break;
            case "SocketResponseCodeCallChannelIsNull":
            case 25:
                t.error = 25;
                break;
            case "SocketResponseCodeCallCanCallYourSelf":
            case 26:
                t.error = 26;
                break;
            case "SocketResponseCodeMessageServiceAccountCantReply":
            case 27:
                t.error = 27;
                break;
            case "SocketResponseCodeGroupNotAllowSendMessage":
            case 28:
                t.error = 28;
                break;
            case "SocketResponseCodeServerCrash":
            case 29:
                t.error = 29;
                break;
            case "SocketResponseCodeFail":
            case 30:
                t.error = 30;
                break
            }
            switch (e.errorExtension) {
            case "SocketErrorExtensionUndefined":
            case 0:
                t.errorExtension = 0;
                break;
            case "SocketErrorExtensionModifyPasswordByThird":
            case 1:
                t.errorExtension = 1;
                break;
            case "SocketErrorExtensionModifyPasswordByMobile":
            case 2:
                t.errorExtension = 2;
                break;
            case "SocketErrorExtensionModifyPasswordByPC":
            case 3:
                t.errorExtension = 3;
                break;
            case "SocketErrorExtensionModifyPasswordByForget":
            case 4:
                t.errorExtension = 4;
                break
            }
            return null != e.text && (t.text = String(e.text)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.error = t.enums === String ? "SocketResponseCodeSuccess" : 0,
            n.errorExtension = t.enums === String ? "SocketErrorExtensionUndefined" : 0,
            n.text = ""),
            null != e.error && e.hasOwnProperty("error") && (n.error = t.enums === String ? s.SocketResponseCode[e.error] : e.error),
            null != e.errorExtension && e.hasOwnProperty("errorExtension") && (n.errorExtension = t.enums === String ? s.SocketErrorExtension[e.errorExtension] : e.errorExtension),
            null != e.text && e.hasOwnProperty("text") && (n.text = e.text),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallCreate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallCreate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallCreate)
                return e;
            var t = new s.SocketBodySingleCallCreate;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallAccept = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallAccept;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallAccept)
                return e;
            var t = new s.SocketBodySingleCallAccept;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallReject = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallReject;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallReject)
                return e;
            var t = new s.SocketBodySingleCallReject;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallBusy = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallBusy;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallBusy)
                return e;
            var t = new s.SocketBodySingleCallBusy;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallCancel = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallCancel;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallCancel)
                return e;
            var t = new s.SocketBodySingleCallCancel;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallNoAnswer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallNoAnswer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallNoAnswer)
                return e;
            var t = new s.SocketBodySingleCallNoAnswer;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallHangUp = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallHangUp;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallHangUp)
                return e;
            var t = new s.SocketBodySingleCallHangUp;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallChangeCallType = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallChangeCallType;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallChangeCallType)
                return e;
            var t = new s.SocketBodySingleCallChangeCallType;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodySingleCallFinish = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(16).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(24).uint64(e.endTimestamp),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(32).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodySingleCallFinish;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.startTimestamp = e.uint64();
                    break;
                case 3:
                    r.endTimestamp = e.uint64();
                    break;
                case 4:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodySingleCallFinish)
                return e;
            var t = new s.SocketBodySingleCallFinish;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.channelName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0
            }
            return null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallCreate = function() {
        function e(e) {
            if (this.userIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.prototype.userIds = a.emptyArray,
        e.prototype.creatorName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            null != e.userIds && e.userIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.userIds.length; ++n)
                    t.uint32(e.userIds[n]);
                t.ldelim()
            }
            return null != e.creatorName && e.hasOwnProperty("creatorName") && t.uint32(34).string(e.creatorName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallCreate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                case 3:
                    if (r.userIds && r.userIds.length || (r.userIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.userIds.push(e.uint32())
                    } else
                        r.userIds.push(e.uint32());
                    break;
                case 4:
                    r.creatorName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallCreate)
                return e;
            var t = new s.SocketBodyGroupCallCreate;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            if (e.userIds) {
                if (!Array.isArray(e.userIds))
                    throw TypeError(".SocketBodyGroupCallCreate.userIds: array expected");
                t.userIds = [];
                for (var n = 0; n < e.userIds.length; ++n)
                    t.userIds[n] = e.userIds[n] >>> 0
            }
            return null != e.creatorName && (t.creatorName = String(e.creatorName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userIds = []),
            t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0,
            n.creatorName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            e.userIds && e.userIds.length) {
                n.userIds = [];
                for (var r = 0; r < e.userIds.length; ++r)
                    n.userIds[r] = e.userIds[r]
            }
            return null != e.creatorName && e.hasOwnProperty("creatorName") && (n.creatorName = e.creatorName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallInvite = function() {
        function e(e) {
            if (this.userIds = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.prototype.userIds = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            null != e.userIds && e.userIds.length) {
                t.uint32(26).fork();
                for (var n = 0; n < e.userIds.length; ++n)
                    t.uint32(e.userIds[n]);
                t.ldelim()
            }
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallInvite;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                case 3:
                    if (r.userIds && r.userIds.length || (r.userIds = []),
                    2 === (7 & i)) {
                        var a = e.uint32() + e.pos;
                        while (e.pos < a)
                            r.userIds.push(e.uint32())
                    } else
                        r.userIds.push(e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallInvite)
                return e;
            var t = new s.SocketBodyGroupCallInvite;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            if (e.userIds) {
                if (!Array.isArray(e.userIds))
                    throw TypeError(".SocketBodyGroupCallInvite.userIds: array expected");
                t.userIds = [];
                for (var n = 0; n < e.userIds.length; ++n)
                    t.userIds[n] = e.userIds[n] >>> 0
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.userIds = []),
            t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            e.userIds && e.userIds.length) {
                n.userIds = [];
                for (var r = 0; r < e.userIds.length; ++r)
                    n.userIds[r] = e.userIds[r]
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallJoin = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallJoin;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallJoin)
                return e;
            var t = new s.SocketBodyGroupCallJoin;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallReject = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallReject;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallReject)
                return e;
            var t = new s.SocketBodyGroupCallReject;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallBusy = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallBusy;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallBusy)
                return e;
            var t = new s.SocketBodyGroupCallBusy;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallNoAnswer = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallNoAnswer;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallNoAnswer)
                return e;
            var t = new s.SocketBodyGroupCallNoAnswer;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallHangup = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallHangup;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallHangup)
                return e;
            var t = new s.SocketBodyGroupCallHangup;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallMemberStatusUpdate = function() {
        function e(e) {
            if (this.memberInfoList = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.memberInfoList = a.emptyArray,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.memberInfoList && e.memberInfoList.length)
                for (var n = 0; n < e.memberInfoList.length; ++n)
                    s.CommonGroupCallMemberInfo.encode(e.memberInfoList[n], t.uint32(18).fork()).ldelim();
            return t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallMemberStatusUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.memberInfoList && r.memberInfoList.length || (r.memberInfoList = []),
                    r.memberInfoList.push(s.CommonGroupCallMemberInfo.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallMemberStatusUpdate)
                return e;
            var t = new s.SocketBodyGroupCallMemberStatusUpdate;
            if (null != e.channelName && (t.channelName = String(e.channelName)),
            e.memberInfoList) {
                if (!Array.isArray(e.memberInfoList))
                    throw TypeError(".SocketBodyGroupCallMemberStatusUpdate.memberInfoList: array expected");
                t.memberInfoList = [];
                for (var n = 0; n < e.memberInfoList.length; ++n) {
                    if ("object" !== typeof e.memberInfoList[n])
                        throw TypeError(".SocketBodyGroupCallMemberStatusUpdate.memberInfoList: object expected");
                    t.memberInfoList[n] = s.CommonGroupCallMemberInfo.fromObject(e.memberInfoList[n])
                }
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.memberInfoList = []),
            t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            e.memberInfoList && e.memberInfoList.length) {
                n.memberInfoList = [];
                for (var r = 0; r < e.memberInfoList.length; ++r)
                    n.memberInfoList[r] = s.CommonGroupCallMemberInfo.toObject(e.memberInfoList[r], t)
            }
            return n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallFinish = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(16).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(24).uint64(e.endTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallFinish;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.startTimestamp = e.uint64();
                    break;
                case 3:
                    r.endTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallFinish)
                return e;
            var t = new s.SocketBodyGroupCallFinish;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.channelName = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0
            }
            return null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallNoMemberAccept = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallNoMemberAccept;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallNoMemberAccept)
                return e;
            var t = new s.SocketBodyGroupCallNoMemberAccept;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyGroupCallChangeCallType = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.prototype.callType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && t.uint32(16).int32(e.callType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyGroupCallChangeCallType;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                case 2:
                    r.callType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyGroupCallChangeCallType)
                return e;
            var t = new s.SocketBodyGroupCallChangeCallType;
            switch (null != e.channelName && (t.channelName = String(e.channelName)),
            e.callType) {
            case "CommonCallTypeUndefined":
            case 0:
                t.callType = 0;
                break;
            case "CommonCallTypeVoice":
            case 1:
                t.callType = 1;
                break;
            case "CommonCallTypeVideo":
            case 2:
                t.callType = 2;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = "",
            n.callType = t.enums === String ? "CommonCallTypeUndefined" : 0),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            null != e.callType && e.hasOwnProperty("callType") && (n.callType = t.enums === String ? s.CommonCallType[e.callType] : e.callType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCallPing = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.channelName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.channelName && e.hasOwnProperty("channelName") && t.uint32(10).string(e.channelName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCallPing;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.channelName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyCallPing)
                return e;
            var t = new s.SocketBodyCallPing;
            return null != e.channelName && (t.channelName = String(e.channelName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.channelName = ""),
            null != e.channelName && e.hasOwnProperty("channelName") && (n.channelName = e.channelName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyTabUpdate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.version && e.hasOwnProperty("version") && t.uint32(8).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyTabUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyTabUpdate)
                return e;
            var t = new s.SocketBodyTabUpdate;
            return null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.version = 0),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyCommonConfigUpdate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyCommonConfigUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.SocketBodyCommonConfigUpdate ? e : new s.SocketBodyCommonConfigUpdate
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyWebRtcSDP = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.sdp = "",
        e.prototype.type = "",
        e.prototype.p2pFileMessageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.sdp && e.hasOwnProperty("sdp") && t.uint32(10).string(e.sdp),
            null != e.type && e.hasOwnProperty("type") && t.uint32(18).string(e.type),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && t.uint32(26).string(e.p2pFileMessageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyWebRtcSDP;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.sdp = e.string();
                    break;
                case 2:
                    r.type = e.string();
                    break;
                case 3:
                    r.p2pFileMessageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyWebRtcSDP)
                return e;
            var t = new s.SocketBodyWebRtcSDP;
            return null != e.sdp && (t.sdp = String(e.sdp)),
            null != e.type && (t.type = String(e.type)),
            null != e.p2pFileMessageId && (t.p2pFileMessageId = String(e.p2pFileMessageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.sdp = "",
            n.type = "",
            n.p2pFileMessageId = ""),
            null != e.sdp && e.hasOwnProperty("sdp") && (n.sdp = e.sdp),
            null != e.type && e.hasOwnProperty("type") && (n.type = e.type),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && (n.p2pFileMessageId = e.p2pFileMessageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyWebRtcCandidate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.candidate = "",
        e.prototype.sdpMLineIndex = 0,
        e.prototype.sdpMid = "",
        e.prototype.usernameFragment = "",
        e.prototype.p2pFileMessageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.candidate && e.hasOwnProperty("candidate") && t.uint32(10).string(e.candidate),
            null != e.sdpMLineIndex && e.hasOwnProperty("sdpMLineIndex") && t.uint32(16).int32(e.sdpMLineIndex),
            null != e.sdpMid && e.hasOwnProperty("sdpMid") && t.uint32(26).string(e.sdpMid),
            null != e.usernameFragment && e.hasOwnProperty("usernameFragment") && t.uint32(34).string(e.usernameFragment),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && t.uint32(42).string(e.p2pFileMessageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyWebRtcCandidate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.candidate = e.string();
                    break;
                case 2:
                    r.sdpMLineIndex = e.int32();
                    break;
                case 3:
                    r.sdpMid = e.string();
                    break;
                case 4:
                    r.usernameFragment = e.string();
                    break;
                case 5:
                    r.p2pFileMessageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyWebRtcCandidate)
                return e;
            var t = new s.SocketBodyWebRtcCandidate;
            return null != e.candidate && (t.candidate = String(e.candidate)),
            null != e.sdpMLineIndex && (t.sdpMLineIndex = 0 | e.sdpMLineIndex),
            null != e.sdpMid && (t.sdpMid = String(e.sdpMid)),
            null != e.usernameFragment && (t.usernameFragment = String(e.usernameFragment)),
            null != e.p2pFileMessageId && (t.p2pFileMessageId = String(e.p2pFileMessageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.candidate = "",
            n.sdpMLineIndex = 0,
            n.sdpMid = "",
            n.usernameFragment = "",
            n.p2pFileMessageId = ""),
            null != e.candidate && e.hasOwnProperty("candidate") && (n.candidate = e.candidate),
            null != e.sdpMLineIndex && e.hasOwnProperty("sdpMLineIndex") && (n.sdpMLineIndex = e.sdpMLineIndex),
            null != e.sdpMid && e.hasOwnProperty("sdpMid") && (n.sdpMid = e.sdpMid),
            null != e.usernameFragment && e.hasOwnProperty("usernameFragment") && (n.usernameFragment = e.usernameFragment),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && (n.p2pFileMessageId = e.p2pFileMessageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyP2pFileDownloadRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.p2pFileMessageId = "",
        e.prototype.md5 = "",
        e.prototype.fileName = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && t.uint32(10).string(e.p2pFileMessageId),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(18).string(e.md5),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(26).string(e.fileName),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyP2pFileDownloadRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.p2pFileMessageId = e.string();
                    break;
                case 2:
                    r.md5 = e.string();
                    break;
                case 3:
                    r.fileName = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyP2pFileDownloadRequest)
                return e;
            var t = new s.SocketBodyP2pFileDownloadRequest;
            return null != e.p2pFileMessageId && (t.p2pFileMessageId = String(e.p2pFileMessageId)),
            null != e.md5 && (t.md5 = String(e.md5)),
            null != e.fileName && (t.fileName = String(e.fileName)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.p2pFileMessageId = "",
            n.md5 = "",
            n.fileName = ""),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && (n.p2pFileMessageId = e.p2pFileMessageId),
            null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyP2pFileDownloadResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.fileExists = !1,
        e.prototype.sdp = null,
        e.prototype.p2pFileMessageId = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.fileExists && e.hasOwnProperty("fileExists") && t.uint32(8).bool(e.fileExists),
            null != e.sdp && e.hasOwnProperty("sdp") && s.SocketBodyWebRtcSDP.encode(e.sdp, t.uint32(18).fork()).ldelim(),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && t.uint32(26).string(e.p2pFileMessageId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyP2pFileDownloadResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.fileExists = e.bool();
                    break;
                case 2:
                    r.sdp = s.SocketBodyWebRtcSDP.decode(e, e.uint32());
                    break;
                case 3:
                    r.p2pFileMessageId = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyP2pFileDownloadResponse)
                return e;
            var t = new s.SocketBodyP2pFileDownloadResponse;
            if (null != e.fileExists && (t.fileExists = Boolean(e.fileExists)),
            null != e.sdp) {
                if ("object" !== typeof e.sdp)
                    throw TypeError(".SocketBodyP2pFileDownloadResponse.sdp: object expected");
                t.sdp = s.SocketBodyWebRtcSDP.fromObject(e.sdp)
            }
            return null != e.p2pFileMessageId && (t.p2pFileMessageId = String(e.p2pFileMessageId)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.fileExists = !1,
            n.sdp = null,
            n.p2pFileMessageId = ""),
            null != e.fileExists && e.hasOwnProperty("fileExists") && (n.fileExists = e.fileExists),
            null != e.sdp && e.hasOwnProperty("sdp") && (n.sdp = s.SocketBodyWebRtcSDP.toObject(e.sdp, t)),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && (n.p2pFileMessageId = e.p2pFileMessageId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyP2pFileNotifyMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.p2pFileMessageId = "",
        e.prototype.fileName = "",
        e.prototype.status = 0,
        e.prototype.cancelUserId = 0,
        e.prototype.senderUserId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && t.uint32(10).string(e.p2pFileMessageId),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(18).string(e.fileName),
            null != e.status && e.hasOwnProperty("status") && t.uint32(24).int32(e.status),
            null != e.cancelUserId && e.hasOwnProperty("cancelUserId") && t.uint32(32).uint32(e.cancelUserId),
            null != e.senderUserId && e.hasOwnProperty("senderUserId") && t.uint32(40).uint32(e.senderUserId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyP2pFileNotifyMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.p2pFileMessageId = e.string();
                    break;
                case 2:
                    r.fileName = e.string();
                    break;
                case 3:
                    r.status = e.int32();
                    break;
                case 4:
                    r.cancelUserId = e.uint32();
                    break;
                case 5:
                    r.senderUserId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyP2pFileNotifyMessage)
                return e;
            var t = new s.SocketBodyP2pFileNotifyMessage;
            switch (null != e.p2pFileMessageId && (t.p2pFileMessageId = String(e.p2pFileMessageId)),
            null != e.fileName && (t.fileName = String(e.fileName)),
            e.status) {
            case "CommonP2pFileStatusNone":
            case 0:
                t.status = 0;
                break;
            case "CommonP2pFileStatusWaiting":
            case 1:
                t.status = 1;
                break;
            case "CommonP2pFileStatusReject":
            case 2:
                t.status = 2;
                break;
            case "CommonP2pFileStatusCancel":
            case 3:
                t.status = 3;
                break;
            case "CommonP2pFileStatusAccept":
            case 4:
                t.status = 4;
                break;
            case "CommonP2pFileStatusSuccess":
            case 5:
                t.status = 5;
                break;
            case "CommonP2pFileStatusPause":
            case 6:
                t.status = 6;
                break;
            case "CommonP2pFileStatusFailure":
            case 7:
                t.status = 7;
                break
            }
            return null != e.cancelUserId && (t.cancelUserId = e.cancelUserId >>> 0),
            null != e.senderUserId && (t.senderUserId = e.senderUserId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.p2pFileMessageId = "",
            n.fileName = "",
            n.status = t.enums === String ? "CommonP2pFileStatusNone" : 0,
            n.cancelUserId = 0,
            n.senderUserId = 0),
            null != e.p2pFileMessageId && e.hasOwnProperty("p2pFileMessageId") && (n.p2pFileMessageId = e.p2pFileMessageId),
            null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonP2pFileStatus[e.status] : e.status),
            null != e.cancelUserId && e.hasOwnProperty("cancelUserId") && (n.cancelUserId = e.cancelUserId),
            null != e.senderUserId && e.hasOwnProperty("senderUserId") && (n.senderUserId = e.senderUserId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyNotifySubscribe = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.notifyType = 0,
        e.prototype.routeKey = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.notifyType && e.hasOwnProperty("notifyType") && t.uint32(8).int32(e.notifyType),
            null != e.routeKey && e.hasOwnProperty("routeKey") && t.uint32(18).string(e.routeKey),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyNotifySubscribe;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.notifyType = e.int32();
                    break;
                case 2:
                    r.routeKey = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyNotifySubscribe)
                return e;
            var t = new s.SocketBodyNotifySubscribe;
            switch (e.notifyType) {
            case "CommonNotifyTypeNone":
            case 0:
                t.notifyType = 0;
                break;
            case "CommonNotifyTypeTask":
            case 1:
                t.notifyType = 1;
                break
            }
            return null != e.routeKey && (t.routeKey = String(e.routeKey)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.notifyType = t.enums === String ? "CommonNotifyTypeNone" : 0,
            n.routeKey = ""),
            null != e.notifyType && e.hasOwnProperty("notifyType") && (n.notifyType = t.enums === String ? s.CommonNotifyType[e.notifyType] : e.notifyType),
            null != e.routeKey && e.hasOwnProperty("routeKey") && (n.routeKey = e.routeKey),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyForm = function() {
        function e(e) {
            if (this.columnItems = [],
            this.groupInfos = [],
            this.dataInfos = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.title = "",
        e.prototype.description = "",
        e.prototype.startTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.endTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.finish = !1,
        e.prototype.maxCount = 0,
        e.prototype.remainderCount = 0,
        e.prototype.columnItems = a.emptyArray,
        e.prototype.groupInfos = a.emptyArray,
        e.prototype.dataInfos = a.emptyArray,
        e.prototype.highLightDataId = 0,
        e.prototype.sortRule = 0,
        e.prototype.groupRule = 0,
        e.prototype.sortColumn = 0,
        e.prototype.groupColumn = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.description && e.hasOwnProperty("description") && t.uint32(26).string(e.description),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && t.uint32(32).uint64(e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && t.uint32(40).uint64(e.endTimestamp),
            null != e.finish && e.hasOwnProperty("finish") && t.uint32(48).bool(e.finish),
            null != e.maxCount && e.hasOwnProperty("maxCount") && t.uint32(56).uint32(e.maxCount),
            null != e.remainderCount && e.hasOwnProperty("remainderCount") && t.uint32(64).uint32(e.remainderCount),
            null != e.columnItems && e.columnItems.length)
                for (var n = 0; n < e.columnItems.length; ++n)
                    s.CommonFormColumnItem.encode(e.columnItems[n], t.uint32(74).fork()).ldelim();
            if (null != e.groupInfos && e.groupInfos.length)
                for (n = 0; n < e.groupInfos.length; ++n)
                    s.CommonFormGroupInfo.encode(e.groupInfos[n], t.uint32(82).fork()).ldelim();
            if (null != e.dataInfos && e.dataInfos.length)
                for (n = 0; n < e.dataInfos.length; ++n)
                    s.CommonFormDataInfo.encode(e.dataInfos[n], t.uint32(90).fork()).ldelim();
            return null != e.highLightDataId && e.hasOwnProperty("highLightDataId") && t.uint32(96).uint32(e.highLightDataId),
            null != e.sortRule && e.hasOwnProperty("sortRule") && t.uint32(104).int32(e.sortRule),
            null != e.groupRule && e.hasOwnProperty("groupRule") && t.uint32(112).int32(e.groupRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && t.uint32(120).uint32(e.sortColumn),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && t.uint32(128).uint32(e.groupColumn),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyForm;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.description = e.string();
                    break;
                case 4:
                    r.startTimestamp = e.uint64();
                    break;
                case 5:
                    r.endTimestamp = e.uint64();
                    break;
                case 6:
                    r.finish = e.bool();
                    break;
                case 7:
                    r.maxCount = e.uint32();
                    break;
                case 8:
                    r.remainderCount = e.uint32();
                    break;
                case 9:
                    r.columnItems && r.columnItems.length || (r.columnItems = []),
                    r.columnItems.push(s.CommonFormColumnItem.decode(e, e.uint32()));
                    break;
                case 10:
                    r.groupInfos && r.groupInfos.length || (r.groupInfos = []),
                    r.groupInfos.push(s.CommonFormGroupInfo.decode(e, e.uint32()));
                    break;
                case 11:
                    r.dataInfos && r.dataInfos.length || (r.dataInfos = []),
                    r.dataInfos.push(s.CommonFormDataInfo.decode(e, e.uint32()));
                    break;
                case 12:
                    r.highLightDataId = e.uint32();
                    break;
                case 13:
                    r.sortRule = e.int32();
                    break;
                case 14:
                    r.groupRule = e.int32();
                    break;
                case 15:
                    r.sortColumn = e.uint32();
                    break;
                case 16:
                    r.groupColumn = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyForm)
                return e;
            var t = new s.SocketBodyForm;
            if (null != e.formId && (t.formId = e.formId >>> 0),
            null != e.title && (t.title = String(e.title)),
            null != e.description && (t.description = String(e.description)),
            null != e.startTimestamp && (a.Long ? (t.startTimestamp = a.Long.fromValue(e.startTimestamp)).unsigned = !0 : "string" === typeof e.startTimestamp ? t.startTimestamp = parseInt(e.startTimestamp, 10) : "number" === typeof e.startTimestamp ? t.startTimestamp = e.startTimestamp : "object" === typeof e.startTimestamp && (t.startTimestamp = new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0))),
            null != e.endTimestamp && (a.Long ? (t.endTimestamp = a.Long.fromValue(e.endTimestamp)).unsigned = !0 : "string" === typeof e.endTimestamp ? t.endTimestamp = parseInt(e.endTimestamp, 10) : "number" === typeof e.endTimestamp ? t.endTimestamp = e.endTimestamp : "object" === typeof e.endTimestamp && (t.endTimestamp = new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0))),
            null != e.finish && (t.finish = Boolean(e.finish)),
            null != e.maxCount && (t.maxCount = e.maxCount >>> 0),
            null != e.remainderCount && (t.remainderCount = e.remainderCount >>> 0),
            e.columnItems) {
                if (!Array.isArray(e.columnItems))
                    throw TypeError(".SocketBodyForm.columnItems: array expected");
                t.columnItems = [];
                for (var n = 0; n < e.columnItems.length; ++n) {
                    if ("object" !== typeof e.columnItems[n])
                        throw TypeError(".SocketBodyForm.columnItems: object expected");
                    t.columnItems[n] = s.CommonFormColumnItem.fromObject(e.columnItems[n])
                }
            }
            if (e.groupInfos) {
                if (!Array.isArray(e.groupInfos))
                    throw TypeError(".SocketBodyForm.groupInfos: array expected");
                t.groupInfos = [];
                for (n = 0; n < e.groupInfos.length; ++n) {
                    if ("object" !== typeof e.groupInfos[n])
                        throw TypeError(".SocketBodyForm.groupInfos: object expected");
                    t.groupInfos[n] = s.CommonFormGroupInfo.fromObject(e.groupInfos[n])
                }
            }
            if (e.dataInfos) {
                if (!Array.isArray(e.dataInfos))
                    throw TypeError(".SocketBodyForm.dataInfos: array expected");
                t.dataInfos = [];
                for (n = 0; n < e.dataInfos.length; ++n) {
                    if ("object" !== typeof e.dataInfos[n])
                        throw TypeError(".SocketBodyForm.dataInfos: object expected");
                    t.dataInfos[n] = s.CommonFormDataInfo.fromObject(e.dataInfos[n])
                }
            }
            switch (null != e.highLightDataId && (t.highLightDataId = e.highLightDataId >>> 0),
            e.sortRule) {
            case "CommonFormSortRuleNone":
            case 0:
                t.sortRule = 0;
                break;
            case "CommonFormSortRuleManual":
            case 1:
                t.sortRule = 1;
                break;
            case "CommonFormSortRuleASC":
            case 2:
                t.sortRule = 2;
                break;
            case "CommonFormSortRuleDESC":
            case 3:
                t.sortRule = 3;
                break;
            case "CommonFormSortRuleCreateTimestampASC":
            case 4:
                t.sortRule = 4;
                break;
            case "CommonFormSortRuleCreateTimestampDESC":
            case 5:
                t.sortRule = 5;
                break;
            case "CommonFormSortRuleUpdateTimestampASC":
            case 6:
                t.sortRule = 6;
                break;
            case "CommonFormSortRuleUpdateTimestampDESC":
            case 7:
                t.sortRule = 7;
                break;
            case "CommonFormSortRuleOption":
            case 8:
                t.sortRule = 8;
                break
            }
            switch (e.groupRule) {
            case "CommonFormGroupRuleNone":
            case 0:
                t.groupRule = 0;
                break;
            case "CommonFormGroupRuleManual":
            case 1:
                t.groupRule = 1;
                break;
            case "CommonFormGroupRuleInitial":
            case 2:
                t.groupRule = 2;
                break;
            case "CommonFormGroupRuleSameValue":
            case 3:
                t.groupRule = 3;
                break;
            case "CommonFormGroupRuleOption":
            case 4:
                t.groupRule = 4;
                break
            }
            return null != e.sortColumn && (t.sortColumn = e.sortColumn >>> 0),
            null != e.groupColumn && (t.groupColumn = e.groupColumn >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.columnItems = [],
            n.groupInfos = [],
            n.dataInfos = []),
            t.defaults) {
                if (n.formId = 0,
                n.title = "",
                n.description = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.startTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.startTimestamp = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.endTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.endTimestamp = t.longs === String ? "0" : 0;
                n.finish = !1,
                n.maxCount = 0,
                n.remainderCount = 0,
                n.highLightDataId = 0,
                n.sortRule = t.enums === String ? "CommonFormSortRuleNone" : 0,
                n.groupRule = t.enums === String ? "CommonFormGroupRuleNone" : 0,
                n.sortColumn = 0,
                n.groupColumn = 0
            }
            if (null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.description && e.hasOwnProperty("description") && (n.description = e.description),
            null != e.startTimestamp && e.hasOwnProperty("startTimestamp") && ("number" === typeof e.startTimestamp ? n.startTimestamp = t.longs === String ? String(e.startTimestamp) : e.startTimestamp : n.startTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.startTimestamp) : t.longs === Number ? new a.LongBits(e.startTimestamp.low >>> 0,e.startTimestamp.high >>> 0).toNumber(!0) : e.startTimestamp),
            null != e.endTimestamp && e.hasOwnProperty("endTimestamp") && ("number" === typeof e.endTimestamp ? n.endTimestamp = t.longs === String ? String(e.endTimestamp) : e.endTimestamp : n.endTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.endTimestamp) : t.longs === Number ? new a.LongBits(e.endTimestamp.low >>> 0,e.endTimestamp.high >>> 0).toNumber(!0) : e.endTimestamp),
            null != e.finish && e.hasOwnProperty("finish") && (n.finish = e.finish),
            null != e.maxCount && e.hasOwnProperty("maxCount") && (n.maxCount = e.maxCount),
            null != e.remainderCount && e.hasOwnProperty("remainderCount") && (n.remainderCount = e.remainderCount),
            e.columnItems && e.columnItems.length) {
                n.columnItems = [];
                for (var o = 0; o < e.columnItems.length; ++o)
                    n.columnItems[o] = s.CommonFormColumnItem.toObject(e.columnItems[o], t)
            }
            if (e.groupInfos && e.groupInfos.length) {
                n.groupInfos = [];
                for (o = 0; o < e.groupInfos.length; ++o)
                    n.groupInfos[o] = s.CommonFormGroupInfo.toObject(e.groupInfos[o], t)
            }
            if (e.dataInfos && e.dataInfos.length) {
                n.dataInfos = [];
                for (o = 0; o < e.dataInfos.length; ++o)
                    n.dataInfos[o] = s.CommonFormDataInfo.toObject(e.dataInfos[o], t)
            }
            return null != e.highLightDataId && e.hasOwnProperty("highLightDataId") && (n.highLightDataId = e.highLightDataId),
            null != e.sortRule && e.hasOwnProperty("sortRule") && (n.sortRule = t.enums === String ? s.CommonFormSortRule[e.sortRule] : e.sortRule),
            null != e.groupRule && e.hasOwnProperty("groupRule") && (n.groupRule = t.enums === String ? s.CommonFormGroupRule[e.groupRule] : e.groupRule),
            null != e.sortColumn && e.hasOwnProperty("sortColumn") && (n.sortColumn = e.sortColumn),
            null != e.groupColumn && e.hasOwnProperty("groupColumn") && (n.groupColumn = e.groupColumn),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFormData = function() {
        function e(e) {
            if (this.dataInfos = [],
            this.columnItems = [],
            e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.actionType = 0,
        e.prototype.dataInfos = a.emptyArray,
        e.prototype.originDataInfo = null,
        e.prototype.columnItems = a.emptyArray,
        e.prototype.title = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            if (t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.actionType && e.hasOwnProperty("actionType") && t.uint32(16).int32(e.actionType),
            null != e.dataInfos && e.dataInfos.length)
                for (var n = 0; n < e.dataInfos.length; ++n)
                    s.CommonFormDataInfo.encode(e.dataInfos[n], t.uint32(26).fork()).ldelim();
            if (null != e.originDataInfo && e.hasOwnProperty("originDataInfo") && s.CommonFormDataInfo.encode(e.originDataInfo, t.uint32(34).fork()).ldelim(),
            null != e.columnItems && e.columnItems.length)
                for (n = 0; n < e.columnItems.length; ++n)
                    s.CommonFormColumnItem.encode(e.columnItems[n], t.uint32(42).fork()).ldelim();
            return null != e.title && e.hasOwnProperty("title") && t.uint32(50).string(e.title),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFormData;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.actionType = e.int32();
                    break;
                case 3:
                    r.dataInfos && r.dataInfos.length || (r.dataInfos = []),
                    r.dataInfos.push(s.CommonFormDataInfo.decode(e, e.uint32()));
                    break;
                case 4:
                    r.originDataInfo = s.CommonFormDataInfo.decode(e, e.uint32());
                    break;
                case 5:
                    r.columnItems && r.columnItems.length || (r.columnItems = []),
                    r.columnItems.push(s.CommonFormColumnItem.decode(e, e.uint32()));
                    break;
                case 6:
                    r.title = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFormData)
                return e;
            var t = new s.SocketBodyFormData;
            switch (null != e.formId && (t.formId = e.formId >>> 0),
            e.actionType) {
            case "CommonFormActionTypeAll":
            case 0:
                t.actionType = 0;
                break;
            case "CommonFormActionTypeCreate":
            case 1:
                t.actionType = 1;
                break;
            case "CommonFormActionTypeUpdate":
            case 2:
                t.actionType = 2;
                break;
            case "CommonFormActionTypeDelete":
            case 3:
                t.actionType = 3;
                break;
            case "CommonFormActionTypeMove":
            case 4:
                t.actionType = 4;
                break
            }
            if (e.dataInfos) {
                if (!Array.isArray(e.dataInfos))
                    throw TypeError(".SocketBodyFormData.dataInfos: array expected");
                t.dataInfos = [];
                for (var n = 0; n < e.dataInfos.length; ++n) {
                    if ("object" !== typeof e.dataInfos[n])
                        throw TypeError(".SocketBodyFormData.dataInfos: object expected");
                    t.dataInfos[n] = s.CommonFormDataInfo.fromObject(e.dataInfos[n])
                }
            }
            if (null != e.originDataInfo) {
                if ("object" !== typeof e.originDataInfo)
                    throw TypeError(".SocketBodyFormData.originDataInfo: object expected");
                t.originDataInfo = s.CommonFormDataInfo.fromObject(e.originDataInfo)
            }
            if (e.columnItems) {
                if (!Array.isArray(e.columnItems))
                    throw TypeError(".SocketBodyFormData.columnItems: array expected");
                t.columnItems = [];
                for (n = 0; n < e.columnItems.length; ++n) {
                    if ("object" !== typeof e.columnItems[n])
                        throw TypeError(".SocketBodyFormData.columnItems: object expected");
                    t.columnItems[n] = s.CommonFormColumnItem.fromObject(e.columnItems[n])
                }
            }
            return null != e.title && (t.title = String(e.title)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if ((t.arrays || t.defaults) && (n.dataInfos = [],
            n.columnItems = []),
            t.defaults && (n.formId = 0,
            n.actionType = t.enums === String ? "CommonFormActionTypeAll" : 0,
            n.originDataInfo = null,
            n.title = ""),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.actionType && e.hasOwnProperty("actionType") && (n.actionType = t.enums === String ? s.CommonFormActionType[e.actionType] : e.actionType),
            e.dataInfos && e.dataInfos.length) {
                n.dataInfos = [];
                for (var r = 0; r < e.dataInfos.length; ++r)
                    n.dataInfos[r] = s.CommonFormDataInfo.toObject(e.dataInfos[r], t)
            }
            if (null != e.originDataInfo && e.hasOwnProperty("originDataInfo") && (n.originDataInfo = s.CommonFormDataInfo.toObject(e.originDataInfo, t)),
            e.columnItems && e.columnItems.length) {
                n.columnItems = [];
                for (r = 0; r < e.columnItems.length; ++r)
                    n.columnItems[r] = s.CommonFormColumnItem.toObject(e.columnItems[r], t)
            }
            return null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFormInfoUpdate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.formId = 0,
        e.prototype.version = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(8).uint32(e.formId),
            null != e.version && e.hasOwnProperty("version") && t.uint32(16).uint32(e.version),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFormInfoUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.formId = e.uint32();
                    break;
                case 2:
                    r.version = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFormInfoUpdate)
                return e;
            var t = new s.SocketBodyFormInfoUpdate;
            return null != e.formId && (t.formId = e.formId >>> 0),
            null != e.version && (t.version = e.version >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.formId = 0,
            n.version = 0),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            null != e.version && e.hasOwnProperty("version") && (n.version = e.version),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyFormFinishMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.title = "",
        e.prototype.formId = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.title && e.hasOwnProperty("title") && t.uint32(10).string(e.title),
            null != e.formId && e.hasOwnProperty("formId") && t.uint32(16).uint32(e.formId),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyFormFinishMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.title = e.string();
                    break;
                case 2:
                    r.formId = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyFormFinishMessage)
                return e;
            var t = new s.SocketBodyFormFinishMessage;
            return null != e.title && (t.title = String(e.title)),
            null != e.formId && (t.formId = e.formId >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.title = "",
            n.formId = 0),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.formId && e.hasOwnProperty("formId") && (n.formId = e.formId),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLiveInfoModify = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.info = null,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(8).uint64(e.liveVersion),
            null != e.info && e.hasOwnProperty("info") && s.HttpLiveAllInfo.encode(e.info, t.uint32(18).fork()).ldelim(),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLiveInfoModify;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.liveVersion = e.uint64();
                    break;
                case 2:
                    r.info = s.HttpLiveAllInfo.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLiveInfoModify)
                return e;
            var t = new s.SocketBodyLiveInfoModify;
            if (null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            null != e.info) {
                if ("object" !== typeof e.info)
                    throw TypeError(".SocketBodyLiveInfoModify.info: object expected");
                t.info = s.HttpLiveAllInfo.fromObject(e.info)
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0;
                n.info = null
            }
            return null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            null != e.info && e.hasOwnProperty("info") && (n.info = s.HttpLiveAllInfo.toObject(e.info, t)),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLiveCourseCard = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.title = "",
        e.prototype.coverUrl = "",
        e.prototype.preStartTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.title && e.hasOwnProperty("title") && t.uint32(18).string(e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && t.uint32(26).string(e.coverUrl),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && t.uint32(32).uint64(e.preStartTimestamp),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLiveCourseCard;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.title = e.string();
                    break;
                case 3:
                    r.coverUrl = e.string();
                    break;
                case 4:
                    r.preStartTimestamp = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLiveCourseCard)
                return e;
            var t = new s.SocketBodyLiveCourseCard;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.title && (t.title = String(e.title)),
            null != e.coverUrl && (t.coverUrl = String(e.coverUrl)),
            null != e.preStartTimestamp && (a.Long ? (t.preStartTimestamp = a.Long.fromValue(e.preStartTimestamp)).unsigned = !0 : "string" === typeof e.preStartTimestamp ? t.preStartTimestamp = parseInt(e.preStartTimestamp, 10) : "number" === typeof e.preStartTimestamp ? t.preStartTimestamp = e.preStartTimestamp : "object" === typeof e.preStartTimestamp && (t.preStartTimestamp = new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults)
                if (n.courseId = "",
                n.title = "",
                n.coverUrl = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.preStartTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.preStartTimestamp = t.longs === String ? "0" : 0;
            return null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.title && e.hasOwnProperty("title") && (n.title = e.title),
            null != e.coverUrl && e.hasOwnProperty("coverUrl") && (n.coverUrl = e.coverUrl),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && ("number" === typeof e.preStartTimestamp ? n.preStartTimestamp = t.longs === String ? String(e.preStartTimestamp) : e.preStartTimestamp : n.preStartTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.preStartTimestamp) : t.longs === Number ? new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0) : e.preStartTimestamp),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLiveOnlineInfo = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.onlineCount = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.onlineCount && e.hasOwnProperty("onlineCount") && t.uint32(8).uint32(e.onlineCount),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLiveOnlineInfo;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.onlineCount = e.uint32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLiveOnlineInfo)
                return e;
            var t = new s.SocketBodyLiveOnlineInfo;
            return null != e.onlineCount && (t.onlineCount = e.onlineCount >>> 0),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.onlineCount = 0),
            null != e.onlineCount && e.hasOwnProperty("onlineCount") && (n.onlineCount = e.onlineCount),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLivePreStartTimestampUpdate = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.preStartTimestamp = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.member = null,
        e.prototype.liveVersion = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && t.uint32(8).uint64(e.preStartTimestamp),
            null != e.member && e.hasOwnProperty("member") && s.SocketBodyGroupMember.encode(e.member, t.uint32(18).fork()).ldelim(),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && t.uint32(24).uint64(e.liveVersion),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLivePreStartTimestampUpdate;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.preStartTimestamp = e.uint64();
                    break;
                case 2:
                    r.member = s.SocketBodyGroupMember.decode(e, e.uint32());
                    break;
                case 3:
                    r.liveVersion = e.uint64();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLivePreStartTimestampUpdate)
                return e;
            var t = new s.SocketBodyLivePreStartTimestampUpdate;
            if (null != e.preStartTimestamp && (a.Long ? (t.preStartTimestamp = a.Long.fromValue(e.preStartTimestamp)).unsigned = !0 : "string" === typeof e.preStartTimestamp ? t.preStartTimestamp = parseInt(e.preStartTimestamp, 10) : "number" === typeof e.preStartTimestamp ? t.preStartTimestamp = e.preStartTimestamp : "object" === typeof e.preStartTimestamp && (t.preStartTimestamp = new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0))),
            null != e.member) {
                if ("object" !== typeof e.member)
                    throw TypeError(".SocketBodyLivePreStartTimestampUpdate.member: object expected");
                t.member = s.SocketBodyGroupMember.fromObject(e.member)
            }
            return null != e.liveVersion && (a.Long ? (t.liveVersion = a.Long.fromValue(e.liveVersion)).unsigned = !0 : "string" === typeof e.liveVersion ? t.liveVersion = parseInt(e.liveVersion, 10) : "number" === typeof e.liveVersion ? t.liveVersion = e.liveVersion : "object" === typeof e.liveVersion && (t.liveVersion = new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0))),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.preStartTimestamp = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.preStartTimestamp = t.longs === String ? "0" : 0;
                if (n.member = null,
                a.Long) {
                    r = new a.Long(0,0,!0);
                    n.liveVersion = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.liveVersion = t.longs === String ? "0" : 0
            }
            return null != e.preStartTimestamp && e.hasOwnProperty("preStartTimestamp") && ("number" === typeof e.preStartTimestamp ? n.preStartTimestamp = t.longs === String ? String(e.preStartTimestamp) : e.preStartTimestamp : n.preStartTimestamp = t.longs === String ? a.Long.prototype.toString.call(e.preStartTimestamp) : t.longs === Number ? new a.LongBits(e.preStartTimestamp.low >>> 0,e.preStartTimestamp.high >>> 0).toNumber(!0) : e.preStartTimestamp),
            null != e.member && e.hasOwnProperty("member") && (n.member = s.SocketBodyGroupMember.toObject(e.member, t)),
            null != e.liveVersion && e.hasOwnProperty("liveVersion") && ("number" === typeof e.liveVersion ? n.liveVersion = t.longs === String ? String(e.liveVersion) : e.liveVersion : n.liveVersion = t.longs === String ? a.Long.prototype.toString.call(e.liveVersion) : t.longs === Number ? new a.LongBits(e.liveVersion.low >>> 0,e.liveVersion.high >>> 0).toNumber(!0) : e.liveVersion),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyPayload = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.action = "",
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.action && e.hasOwnProperty("action") && t.uint32(10).string(e.action),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyPayload;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.action = e.string();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyPayload)
                return e;
            var t = new s.SocketBodyPayload;
            return null != e.action && (t.action = String(e.action)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.action = ""),
            null != e.action && e.hasOwnProperty("action") && (n.action = e.action),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketBodyLivePing = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.courseId = "",
        e.prototype.cameraStatus = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.courseId && e.hasOwnProperty("courseId") && t.uint32(10).string(e.courseId),
            null != e.cameraStatus && e.hasOwnProperty("cameraStatus") && t.uint32(16).bool(e.cameraStatus),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.SocketBodyLivePing;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.courseId = e.string();
                    break;
                case 2:
                    r.cameraStatus = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.SocketBodyLivePing)
                return e;
            var t = new s.SocketBodyLivePing;
            return null != e.courseId && (t.courseId = String(e.courseId)),
            null != e.cameraStatus && (t.cameraStatus = Boolean(e.cameraStatus)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.courseId = "",
            n.cameraStatus = !1),
            null != e.courseId && e.hasOwnProperty("courseId") && (n.courseId = e.courseId),
            null != e.cameraStatus && e.hasOwnProperty("cameraStatus") && (n.cameraStatus = e.cameraStatus),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.SocketResponseCode = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "SocketResponseCodeSuccess"] = 0,
        t[e[1] = "SocketResponseCodeUserAuthFail"] = 1,
        t[e[2] = "SocketResponseCodeUserNotConnection"] = 2,
        t[e[3] = "SocketResponseCodeUserTokenTimeOut"] = 3,
        t[e[4] = "SocketResponseCodeUserUpdatePassword"] = 4,
        t[e[5] = "SocketResponseCodeUserKickOffline"] = 5,
        t[e[6] = "SocketResponseCodeMessageReceiverNotSenderFriend"] = 6,
        t[e[7] = "SocketResponseCodeMessageSenderNotGroupMember"] = 7,
        t[e[8] = "SocketResponseCodeMessageReceiverNotFollowRobot"] = 8,
        t[e[9] = "SocketResponseCodeCallNonExistent"] = 9,
        t[e[10] = "SocketResponseCodeGroupVoiceChatMemberOverLimit"] = 10,
        t[e[11] = "SocketResponseCodeCallChaterNotFriend"] = 11,
        t[e[12] = "SocketResponseCodeUserNotJoined"] = 12,
        t[e[13] = "SocketResponseCodeSendRemindMessageNotPermit"] = 13,
        t[e[14] = "SocketResponseCodeCallOver"] = 14,
        t[e[15] = "SocketResponseCodeCallNotCalling"] = 15,
        t[e[16] = "SocketResponseCodeCallIsCalling"] = 16,
        t[e[17] = "SocketResponseCodeCallIsCallingOrOver"] = 17,
        t[e[18] = "SocketResponseCodeCallGroupMemberLessThanTwo"] = 18,
        t[e[19] = "SocketResponseCodeCallMemberNotInGroup"] = 19,
        t[e[20] = "SocketResponseCodeCallExistGroupCall"] = 20,
        t[e[21] = "SocketResponseCodeCallInviteZeroMember"] = 21,
        t[e[22] = "SocketResponseCodeCallGroupMemberIsCalling"] = 22,
        t[e[23] = "SocketResponseCodeCallMemberNotInCallGroup"] = 23,
        t[e[24] = "SocketResponseCodeCallGroupMemberIsWaiting"] = 24,
        t[e[25] = "SocketResponseCodeCallChannelIsNull"] = 25,
        t[e[26] = "SocketResponseCodeCallCanCallYourSelf"] = 26,
        t[e[27] = "SocketResponseCodeMessageServiceAccountCantReply"] = 27,
        t[e[28] = "SocketResponseCodeGroupNotAllowSendMessage"] = 28,
        t[e[29] = "SocketResponseCodeServerCrash"] = 29,
        t[e[30] = "SocketResponseCodeFail"] = 30,
        t
    }(),
    s.SocketErrorExtension = function() {
        var e = {}
            , t = Object.create(e);
        return t[e[0] = "SocketErrorExtensionUndefined"] = 0,
        t[e[1] = "SocketErrorExtensionModifyPasswordByThird"] = 1,
        t[e[2] = "SocketErrorExtensionModifyPasswordByMobile"] = 2,
        t[e[3] = "SocketErrorExtensionModifyPasswordByPC"] = 3,
        t[e[4] = "SocketErrorExtensionModifyPasswordByForget"] = 4,
        t
    }(),
    s.WebRTCMessage = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.bodyType = "",
        e.prototype.data = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.bodyType && e.hasOwnProperty("bodyType") && t.uint32(10).string(e.bodyType),
            null != e.data && e.hasOwnProperty("data") && t.uint32(18).bytes(e.data),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.WebRTCMessage;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.bodyType = e.string();
                    break;
                case 2:
                    r.data = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.WebRTCMessage)
                return e;
            var t = new s.WebRTCMessage;
            return null != e.bodyType && (t.bodyType = String(e.bodyType)),
            null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            return t.defaults && (n.bodyType = "",
            t.bytes === String ? n.data = "" : (n.data = [],
            t.bytes !== Array && (n.data = a.newBuffer(n.data)))),
            null != e.bodyType && e.hasOwnProperty("bodyType") && (n.bodyType = e.bodyType),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.WebRTCFileProgressRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.fileName = "",
        e.prototype.md5 = "",
        e.prototype.size = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.fileType = 0,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.fileName && e.hasOwnProperty("fileName") && t.uint32(10).string(e.fileName),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(18).string(e.md5),
            null != e.size && e.hasOwnProperty("size") && t.uint32(24).uint64(e.size),
            null != e.fileType && e.hasOwnProperty("fileType") && t.uint32(32).int32(e.fileType),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.WebRTCFileProgressRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.fileName = e.string();
                    break;
                case 2:
                    r.md5 = e.string();
                    break;
                case 3:
                    r.size = e.uint64();
                    break;
                case 4:
                    r.fileType = e.int32();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.WebRTCFileProgressRequest)
                return e;
            var t = new s.WebRTCFileProgressRequest;
            switch (null != e.fileName && (t.fileName = String(e.fileName)),
            null != e.md5 && (t.md5 = String(e.md5)),
            null != e.size && (a.Long ? (t.size = a.Long.fromValue(e.size)).unsigned = !0 : "string" === typeof e.size ? t.size = parseInt(e.size, 10) : "number" === typeof e.size ? t.size = e.size : "object" === typeof e.size && (t.size = new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0))),
            e.fileType) {
            case "CommonFileTypeUndefined":
            case 0:
                t.fileType = 0;
                break;
            case "CommonFileTypeImage":
            case 1:
                t.fileType = 1;
                break;
            case "CommonFileTypeVoice":
            case 2:
                t.fileType = 2;
                break;
            case "CommonFileTypeFile":
            case 3:
                t.fileType = 3;
                break
            }
            return t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.fileName = "",
                n.md5 = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.size = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.size = t.longs === String ? "0" : 0;
                n.fileType = t.enums === String ? "CommonFileTypeUndefined" : 0
            }
            return null != e.fileName && e.hasOwnProperty("fileName") && (n.fileName = e.fileName),
            null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.size && e.hasOwnProperty("size") && ("number" === typeof e.size ? n.size = t.longs === String ? String(e.size) : e.size : n.size = t.longs === String ? a.Long.prototype.toString.call(e.size) : t.longs === Number ? new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0) : e.size),
            null != e.fileType && e.hasOwnProperty("fileType") && (n.fileType = t.enums === String ? s.CommonFileType[e.fileType] : e.fileType),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.WebRTCFileProgressResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.md5 = "",
        e.prototype.uploadedSize = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.status = 0,
        e.prototype.fileType = 0,
        e.prototype.accept = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(10).string(e.md5),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && t.uint32(16).uint64(e.uploadedSize),
            null != e.status && e.hasOwnProperty("status") && t.uint32(24).int32(e.status),
            null != e.fileType && e.hasOwnProperty("fileType") && t.uint32(32).int32(e.fileType),
            null != e.accept && e.hasOwnProperty("accept") && t.uint32(40).bool(e.accept),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.WebRTCFileProgressResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.md5 = e.string();
                    break;
                case 2:
                    r.uploadedSize = e.uint64();
                    break;
                case 3:
                    r.status = e.int32();
                    break;
                case 4:
                    r.fileType = e.int32();
                    break;
                case 5:
                    r.accept = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.WebRTCFileProgressResponse)
                return e;
            var t = new s.WebRTCFileProgressResponse;
            switch (null != e.md5 && (t.md5 = String(e.md5)),
            null != e.uploadedSize && (a.Long ? (t.uploadedSize = a.Long.fromValue(e.uploadedSize)).unsigned = !0 : "string" === typeof e.uploadedSize ? t.uploadedSize = parseInt(e.uploadedSize, 10) : "number" === typeof e.uploadedSize ? t.uploadedSize = e.uploadedSize : "object" === typeof e.uploadedSize && (t.uploadedSize = new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0))),
            e.status) {
            case "CommonFileUploadStatusTypeNotExists":
            case 0:
                t.status = 0;
                break;
            case "CommonFileUploadStatusTypeUploading":
            case 1:
                t.status = 1;
                break;
            case "CommonFileUploadStatusTypeUploadCompletion":
            case 2:
                t.status = 2;
                break;
            case "CommonFileUploadStatusTypeFileBroken":
            case 3:
                t.status = 3;
                break
            }
            switch (e.fileType) {
            case "CommonFileTypeUndefined":
            case 0:
                t.fileType = 0;
                break;
            case "CommonFileTypeImage":
            case 1:
                t.fileType = 1;
                break;
            case "CommonFileTypeVoice":
            case 2:
                t.fileType = 2;
                break;
            case "CommonFileTypeFile":
            case 3:
                t.fileType = 3;
                break
            }
            return null != e.accept && (t.accept = Boolean(e.accept)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.md5 = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.uploadedSize = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.uploadedSize = t.longs === String ? "0" : 0;
                n.status = t.enums === String ? "CommonFileUploadStatusTypeNotExists" : 0,
                n.fileType = t.enums === String ? "CommonFileTypeUndefined" : 0,
                n.accept = !1
            }
            return null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && ("number" === typeof e.uploadedSize ? n.uploadedSize = t.longs === String ? String(e.uploadedSize) : e.uploadedSize : n.uploadedSize = t.longs === String ? a.Long.prototype.toString.call(e.uploadedSize) : t.longs === Number ? new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0) : e.uploadedSize),
            null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonFileUploadStatusType[e.status] : e.status),
            null != e.fileType && e.hasOwnProperty("fileType") && (n.fileType = t.enums === String ? s.CommonFileType[e.fileType] : e.fileType),
            null != e.accept && e.hasOwnProperty("accept") && (n.accept = e.accept),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.WebRTCFileBlockRequest = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.md5 = "",
        e.prototype.size = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.uploadOffset = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.data = a.newBuffer([]),
        e.prototype.returnResponse = !1,
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.md5 && e.hasOwnProperty("md5") && t.uint32(10).string(e.md5),
            null != e.size && e.hasOwnProperty("size") && t.uint32(16).uint64(e.size),
            null != e.uploadOffset && e.hasOwnProperty("uploadOffset") && t.uint32(24).uint64(e.uploadOffset),
            null != e.data && e.hasOwnProperty("data") && t.uint32(34).bytes(e.data),
            null != e.returnResponse && e.hasOwnProperty("returnResponse") && t.uint32(40).bool(e.returnResponse),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.WebRTCFileBlockRequest;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.md5 = e.string();
                    break;
                case 2:
                    r.size = e.uint64();
                    break;
                case 3:
                    r.uploadOffset = e.uint64();
                    break;
                case 4:
                    r.data = e.bytes();
                    break;
                case 5:
                    r.returnResponse = e.bool();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.WebRTCFileBlockRequest)
                return e;
            var t = new s.WebRTCFileBlockRequest;
            return null != e.md5 && (t.md5 = String(e.md5)),
            null != e.size && (a.Long ? (t.size = a.Long.fromValue(e.size)).unsigned = !0 : "string" === typeof e.size ? t.size = parseInt(e.size, 10) : "number" === typeof e.size ? t.size = e.size : "object" === typeof e.size && (t.size = new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0))),
            null != e.uploadOffset && (a.Long ? (t.uploadOffset = a.Long.fromValue(e.uploadOffset)).unsigned = !0 : "string" === typeof e.uploadOffset ? t.uploadOffset = parseInt(e.uploadOffset, 10) : "number" === typeof e.uploadOffset ? t.uploadOffset = e.uploadOffset : "object" === typeof e.uploadOffset && (t.uploadOffset = new a.LongBits(e.uploadOffset.low >>> 0,e.uploadOffset.high >>> 0).toNumber(!0))),
            null != e.data && ("string" === typeof e.data ? a.base64.decode(e.data, t.data = a.newBuffer(a.base64.length(e.data)), 0) : e.data.length && (t.data = e.data)),
            null != e.returnResponse && (t.returnResponse = Boolean(e.returnResponse)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.md5 = "",
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.size = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.size = t.longs === String ? "0" : 0;
                if (a.Long) {
                    r = new a.Long(0,0,!0);
                    n.uploadOffset = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.uploadOffset = t.longs === String ? "0" : 0;
                t.bytes === String ? n.data = "" : (n.data = [],
                t.bytes !== Array && (n.data = a.newBuffer(n.data))),
                n.returnResponse = !1
            }
            return null != e.md5 && e.hasOwnProperty("md5") && (n.md5 = e.md5),
            null != e.size && e.hasOwnProperty("size") && ("number" === typeof e.size ? n.size = t.longs === String ? String(e.size) : e.size : n.size = t.longs === String ? a.Long.prototype.toString.call(e.size) : t.longs === Number ? new a.LongBits(e.size.low >>> 0,e.size.high >>> 0).toNumber(!0) : e.size),
            null != e.uploadOffset && e.hasOwnProperty("uploadOffset") && ("number" === typeof e.uploadOffset ? n.uploadOffset = t.longs === String ? String(e.uploadOffset) : e.uploadOffset : n.uploadOffset = t.longs === String ? a.Long.prototype.toString.call(e.uploadOffset) : t.longs === Number ? new a.LongBits(e.uploadOffset.low >>> 0,e.uploadOffset.high >>> 0).toNumber(!0) : e.uploadOffset),
            null != e.data && e.hasOwnProperty("data") && (n.data = t.bytes === String ? a.base64.encode(e.data, 0, e.data.length) : t.bytes === Array ? Array.prototype.slice.call(e.data) : e.data),
            null != e.returnResponse && e.hasOwnProperty("returnResponse") && (n.returnResponse = e.returnResponse),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.WebRTCFileBlockResponse = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.prototype.status = 0,
        e.prototype.uploadedSize = a.Long ? a.Long.fromBits(0, 0, !0) : 0,
        e.prototype.size = a.newBuffer([]),
        e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            null != e.status && e.hasOwnProperty("status") && t.uint32(8).int32(e.status),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && t.uint32(16).uint64(e.uploadedSize),
            null != e.size && e.hasOwnProperty("size") && t.uint32(26).bytes(e.size),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.WebRTCFileBlockResponse;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                case 1:
                    r.status = e.int32();
                    break;
                case 2:
                    r.uploadedSize = e.uint64();
                    break;
                case 3:
                    r.size = e.bytes();
                    break;
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            if (e instanceof s.WebRTCFileBlockResponse)
                return e;
            var t = new s.WebRTCFileBlockResponse;
            switch (e.status) {
            case "CommonFileUploadStatusTypeNotExists":
            case 0:
                t.status = 0;
                break;
            case "CommonFileUploadStatusTypeUploading":
            case 1:
                t.status = 1;
                break;
            case "CommonFileUploadStatusTypeUploadCompletion":
            case 2:
                t.status = 2;
                break;
            case "CommonFileUploadStatusTypeFileBroken":
            case 3:
                t.status = 3;
                break
            }
            return null != e.uploadedSize && (a.Long ? (t.uploadedSize = a.Long.fromValue(e.uploadedSize)).unsigned = !0 : "string" === typeof e.uploadedSize ? t.uploadedSize = parseInt(e.uploadedSize, 10) : "number" === typeof e.uploadedSize ? t.uploadedSize = e.uploadedSize : "object" === typeof e.uploadedSize && (t.uploadedSize = new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0))),
            null != e.size && ("string" === typeof e.size ? a.base64.decode(e.size, t.size = a.newBuffer(a.base64.length(e.size)), 0) : e.size.length && (t.size = e.size)),
            t
        }
        ,
        e.toObject = function(e, t) {
            t || (t = {});
            var n = {};
            if (t.defaults) {
                if (n.status = t.enums === String ? "CommonFileUploadStatusTypeNotExists" : 0,
                a.Long) {
                    var r = new a.Long(0,0,!0);
                    n.uploadedSize = t.longs === String ? r.toString() : t.longs === Number ? r.toNumber() : r
                } else
                    n.uploadedSize = t.longs === String ? "0" : 0;
                t.bytes === String ? n.size = "" : (n.size = [],
                t.bytes !== Array && (n.size = a.newBuffer(n.size)))
            }
            return null != e.status && e.hasOwnProperty("status") && (n.status = t.enums === String ? s.CommonFileUploadStatusType[e.status] : e.status),
            null != e.uploadedSize && e.hasOwnProperty("uploadedSize") && ("number" === typeof e.uploadedSize ? n.uploadedSize = t.longs === String ? String(e.uploadedSize) : e.uploadedSize : n.uploadedSize = t.longs === String ? a.Long.prototype.toString.call(e.uploadedSize) : t.longs === Number ? new a.LongBits(e.uploadedSize.low >>> 0,e.uploadedSize.high >>> 0).toNumber(!0) : e.uploadedSize),
            null != e.size && e.hasOwnProperty("size") && (n.size = t.bytes === String ? a.base64.encode(e.size, 0, e.size.length) : t.bytes === Array ? Array.prototype.slice.call(e.size) : e.size),
            n
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    s.WebRTCFileCancel = function() {
        function e(e) {
            if (e)
                for (var t = Object.keys(e), n = 0; n < t.length; ++n)
                    null != e[t[n]] && (this[t[n]] = e[t[n]])
        }
        return e.create = function(t) {
            return new e(t)
        }
        ,
        e.encode = function(e, t) {
            return t || (t = i.create()),
            t
        }
        ,
        e.decode = function(e, t) {
            e instanceof o || (e = o.create(e));
            var n = void 0 === t ? e.len : e.pos + t
                , r = new s.WebRTCFileCancel;
            while (e.pos < n) {
                var i = e.uint32();
                switch (i >>> 3) {
                default:
                    e.skipType(7 & i);
                    break
                }
            }
            return r
        }
        ,
        e.fromObject = function(e) {
            return e instanceof s.WebRTCFileCancel ? e : new s.WebRTCFileCancel
        }
        ,
        e.toObject = function() {
            return {}
        }
        ,
        e.prototype.toJSON = function() {
            return this.constructor.toObject(this, r.util.toJSONOptions)
        }
        ,
        e
    }(),
    e.CLProto = s,
    _this.__reflect(s.prototype, "v8core.CLProto")
})(v8core || (v8core = {}));
